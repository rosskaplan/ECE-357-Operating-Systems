%!PS-Adobe-3.0
%%Creator: groff version 1.19.1
%%CreationDate: Wed Nov  9 23:49:53 2016
%%DocumentNeededResources: font Times-Roman
%%+ font Courier
%%+ font Times-Bold
%%+ font Times-Italic
%%+ font Helvetica-Bold
%%DocumentSuppliedResources: procset grops 1.19 1
%%Pages: 3
%%PageOrder: Ascend
%%DocumentMedia: Default 612 792 0 () ()
%%Orientation: Portrait
%%EndComments
%%BeginDefaults
%%PageMedia: Default
%%EndDefaults
%%BeginProlog
%%BeginResource: procset grops 1.19 1
%!PS-Adobe-3.0 Resource-ProcSet
/setpacking where{
pop
currentpacking
true setpacking
}if
/grops 120 dict dup begin
/SC 32 def
/A/show load def
/B{0 SC 3 -1 roll widthshow}bind def
/C{0 exch ashow}bind def
/D{0 exch 0 SC 5 2 roll awidthshow}bind def
/E{0 rmoveto show}bind def
/F{0 rmoveto 0 SC 3 -1 roll widthshow}bind def
/G{0 rmoveto 0 exch ashow}bind def
/H{0 rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/I{0 exch rmoveto show}bind def
/J{0 exch rmoveto 0 SC 3 -1 roll widthshow}bind def
/K{0 exch rmoveto 0 exch ashow}bind def
/L{0 exch rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/M{rmoveto show}bind def
/N{rmoveto 0 SC 3 -1 roll widthshow}bind def
/O{rmoveto 0 exch ashow}bind def
/P{rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/Q{moveto show}bind def
/R{moveto 0 SC 3 -1 roll widthshow}bind def
/S{moveto 0 exch ashow}bind def
/T{moveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/SF{
findfont exch
[exch dup 0 exch 0 exch neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/MF{
findfont
[5 2 roll
0 3 1 roll
neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/level0 0 def
/RES 0 def
/PL 0 def
/LS 0 def
/MANUAL{
statusdict begin/manualfeed true store end
}bind def
/PLG{
gsave newpath clippath pathbbox grestore
exch pop add exch pop
}bind def
/BP{
/level0 save def
1 setlinecap
1 setlinejoin
72 RES div dup scale
LS{
90 rotate
}{
0 PL translate
}ifelse
1 -1 scale
}bind def
/EP{
level0 restore
showpage
}bind def
/DA{
newpath arcn stroke
}bind def
/SN{
transform
.25 sub exch .25 sub exch
round .25 add exch round .25 add exch
itransform
}bind def
/DL{
SN
moveto
SN
lineto stroke
}bind def
/DC{
newpath 0 360 arc closepath
}bind def
/TM matrix def
/DE{
TM currentmatrix pop
translate scale newpath 0 0 .5 0 360 arc closepath
TM setmatrix
}bind def
/RC/rcurveto load def
/RL/rlineto load def
/ST/stroke load def
/MT/moveto load def
/CL/closepath load def
/Fr{
setrgbcolor fill
}bind def
/setcmykcolor where{
pop
/Fk{
setcmykcolor fill
}bind def
}if
/Fg{
setgray fill
}bind def
/FL/fill load def
/LW/setlinewidth load def
/Cr/setrgbcolor load def
/setcmykcolor where{
pop
/Ck/setcmykcolor load def
}if
/Cg/setgray load def
/RE{
findfont
dup maxlength 1 index/FontName known not{1 add}if dict begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
/Encoding exch def
dup/FontName exch def
currentdict end definefont pop
}bind def
/DEFS 0 def
/EBEGIN{
moveto
DEFS begin
}bind def
/EEND/end load def
/CNT 0 def
/level1 0 def
/PBEGIN{
/level1 save def
translate
div 3 1 roll div exch scale
neg exch neg exch translate
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[]0 setdash
/setstrokeadjust where{
pop
false setstrokeadjust
}if
/setoverprint where{
pop
false setoverprint
}if
newpath
/CNT countdictstack def
userdict begin
/showpage{}def
/setpagedevice{}def
}bind def
/PEND{
clear
countdictstack CNT sub{end}repeat
level1 restore
}bind def
end def
/setpacking where{
pop
setpacking
}if
%%EndResource
%%EndProlog
%%BeginSetup
%%BeginFeature: *PageSize Default
<< /PageSize [ 612 792 ] /ImagingBBox null >> setpagedevice
%%EndFeature
%%IncludeResource: font Times-Roman
%%IncludeResource: font Courier
%%IncludeResource: font Times-Bold
%%IncludeResource: font Times-Italic
%%IncludeResource: font Helvetica-Bold
grops begin/DEFS 1 dict def DEFS begin/u{.001 mul}bind def end/RES 72
def/PL 792 def/LS false def/ENC0[/asciicircum/asciitilde/Scaron/Zcaron
/scaron/zcaron/Ydieresis/trademark/quotesingle/Euro/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/space/exclam/quotedbl/numbersign/dollar/percent
/ampersand/quoteright/parenleft/parenright/asterisk/plus/comma/hyphen
/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/circumflex
/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y
/z/braceleft/bar/braceright/tilde/.notdef/quotesinglbase/guillemotleft
/guillemotright/bullet/florin/fraction/perthousand/dagger/daggerdbl
/endash/emdash/ff/fi/fl/ffi/ffl/dotlessi/dotlessj/grave/hungarumlaut
/dotaccent/breve/caron/ring/ogonek/quotedblleft/quotedblright/oe/lslash
/quotedblbase/OE/Lslash/.notdef/exclamdown/cent/sterling/currency/yen
/brokenbar/section/dieresis/copyright/ordfeminine/guilsinglleft
/logicalnot/minus/registered/macron/degree/plusminus/twosuperior
/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guilsinglright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE
/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn
/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash
/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/Helvetica-Bold@0 ENC0/Helvetica-Bold RE/Times-Italic@0 ENC0
/Times-Italic RE/Times-Bold@0 ENC0/Times-Bold RE/Courier@0 ENC0/Courier
RE/Times-Roman@0 ENC0/Times-Roman RE
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(ECE357:Computer Operating Systems)69.336 48 Q
(PS 6/pg 1)41.55 E(\2512016 Jef)119.78 E 2.5(fH)-.25 G(akner)-2.5 E/F1
11/Times-Roman@0 SF 3.348(In this problem set, you will e)58 97 R 3.347
(xplore synchronization issues on a simulated multi-processor)-.165 F
6.097(,s)-.44 G(hared-memory)-6.097 E(en)58 110 Q 3.594(vironment. W)
-.44 F 3.594(ew)-.88 G .845(ill not use threads-based programming, b)
-3.594 F .845(ut instead will create an en)-.22 F .845
(vironment in which se)-.44 F -.165(ve)-.275 G(ral).165 E
(UNIX processes share a memory re)58 123 Q(gion through)-.165 E/F2 11
/Courier@0 SF(mmap)2.75 E F1 5.5(.E)C
(ach process represents a parallel processor)-5.5 E(.)-.605 E 2.991 -.88
(We w)58 142 T 1.231
(ill number each of these "virtual processors" with a small inte).88 F
1.231(ger identi\214er which will be held in the global)-.165 F -.275
(va)58 155 S(riable).275 E F2(my_procnum)2.987 E F1 5.737(.T)C .237(his\
 is not the same as the UNIX process id, although you will probably nee\
d to k)-5.737 F .238(eep track)-.11 F .899(of the UNIX pids too.)58 168
R F2(my_procnum)6.399 E F1 .899(ranges from 0 to)3.649 F F2(N_PROC-1)
3.649 E F1(.)A F2(N_PROC)6.399 E F1 .898(is the)3.649 F/F3 11
/Times-Bold@0 SF(maximum)3.648 E F1 .898(number of virtual)3.648 F
(processors which your implementation is required to accept.)58 181 Q
-.165(Fo)5.5 G 2.75(rt).165 G(his project,)-2.75 E F2(#define)2.75 E F1
(it as 64.)2.75 E 2.43 -.88(To i)58 200 T .671(mplement sleeping and w)
.88 F .671(aking in this project, the UNIX signal f)-.11 F .671
(acility will be used to simulate)-.11 F/F4 11/Times-Italic@0 SF(inter)
3.421 E(-pr)-.22 E(ocessor)-.495 E(interrupts)58 213 Q F1 5.5(.U)C
(se signal SIGUSR1 and the system calls)-5.5 E F2(sigsuspend)2.75 E F1
(and)2.75 E F2(sigprocmask)2.75 E F1 2.75(,a)C 2.75(sd)-2.75 G
(iscussed in class.)-2.75 E .748
(The starting point is an atomic test and set instruction.)58 232 R .748
(Since "some assembly is required," this will be pro)6.248 F .747
(vided to)-.165 F 2.521(you in the \214le)58 245 R F2(tas.S)5.271 E F1
2.521(\(32-bit\), or)5.271 F F2(tas64.S)5.271 E F1 5.271
(\(64-bit\). Use)5.271 F 2.521(it with a mak)5.271 F 2.522
(e\214le or directly with gcc, e.g.)-.11 F F2(gcc)5.272 E .086
(fifotest.c fifolib.c semlib.c tas.S)58 258 R F1 2.836(A.)2.836 G 2.836
<538c>-2.836 G .086(le is a pure assembly language function.)-2.836 F
.086(At the C le)5.586 F -.165(ve)-.275 G .086(l, it).165 F(will w)58
271 Q(ork as:)-.11 E/F5 10/Courier@0 SF(int tas\(volatile char *lock\))
58 285 Q F1 -1.21(Yo)58 298 S 3.552(uw)1.21 G .803(ill ha)-3.552 F 1.133
-.165(ve t)-.22 H 3.553(ow).165 G .803(rite your o)-3.553 F .803
(wn prototype for the function since no header is pro)-.275 F 3.553
(vided. The)-.165 F .803(tas function w)3.553 F .803(orks as)-.11 F .47
(described in the lecture notes.)58 311 R 3.219(Az)5.97 G .469(ero v)
-3.219 F .469(alue means unlock)-.275 F .469(ed, and tas returns the)
-.11 F F4(pr)3.219 E -.165(ev)-.407 G(ious).165 E F1 -.275(va)3.219 G
.469(lue of).275 F F2(*lock)3.219 E F1 3.219(,m)C(eaning)-3.219 E
(it returns 0 when the lock has been acquired, and 1 when it has not.)58
324 Q 1.391(It is suggested that you implement a)58 343 R F3 1.391
(spin lock)4.141 F F1 1.391(using this atomic T)4.141 F 1.391
(AS, and use that spin lock as a mute)-1.023 F 4.141(xt)-.165 G 4.141
(oh)-4.141 G(elp)-4.141 E .955(implement the functions belo)58 356 R
5.135 -.715(w. I)-.275 H 3.705(tw).715 G .955
(ill not be necessary to implement a full mute)-3.705 F 3.705(xl)-.165 G
.955(ock with blocking/yielding, as)-3.705 F
(that functionality will be b)58 369 Q(uilt-in to the your semaphores.)
-.22 E/F6 11/Helvetica-Bold@0 SF(Pr)230.397 395 Q(ob)-.22 E(lem 1 -- T)
-.11 E(est the test-and-set)-.66 E F1 1.133(As a sanity check, write a \
simple test program that creates a shared memory re)58 408 R 1.133
(gion, spa)-.165 F 1.133(wns a b)-.165 F 1.133(unch of processes)-.22 F
1.106(sharing it, and does something non-atomic \(such as simply increm\
enting an inte)58 421 R 1.105(ger in the shared memory\).)-.165 F(Sho)
6.605 E(w)-.275 E .771(that without mute)58 434 R 3.522(xp)-.165 G .772
(rotection pro)-3.522 F .772(vided by the abo)-.165 F 1.102 -.165(ve T)
-.165 H .772(AS primiti)-.858 F -.165(ve)-.275 G 3.522(,i).165 G .772
(ncorrect results are observ)-3.522 F .772(ed, and that with it,)-.165 F
1.722(the program consistently w)58 447 R 4.472(orks. Use)-.11 F 4.472
(as)4.472 G(uf)-4.472 E 1.722(\214cient number of processes \(typically\
 at least equal to the number of)-.275 F 1.504
(CPUs/cores in your computer\) and a suf)58 460 R 1.504
(\214cient number of iterations \(millions\) to create the f)-.275 F
1.505(ailure condition.)-.11 F(Of)7.005 E
(course, be mindful of silly things lik)58 473 Q 2.75(eo)-.11 G -.165
(ve)-2.915 G(r\215o).165 E(wing a 32-bit int!)-.275 E F6(Pr)222.416 499
Q(ob)-.22 E(lem 2 -- Implement semaphores)-.11 E F1 .036
(Create a module, called)58 518 R F2(sem.c)2.786 E F1 2.786(,w)C .036
(ith header \214le)-2.786 F F2(sem.h)2.786 E F1 2.786(,w)C .036
(hich implements the semaphore operations de\214ned belo)-2.786 F -.715
(w.)-.275 G -1.21(Yo)58 531 S 5.106(uw)1.21 G 2.356(ill need to mak)
-5.106 F 5.107(eu)-.11 G 2.357(se of the spinlock mute)-5.107 F 5.107
(xd)-.165 G(eri)-5.107 E -.165(ve)-.275 G 5.107(df).165 G 2.357
(rom the pro)-5.107 F 2.357(vided T)-.165 F 2.357(AS function.)-1.023 F
F3 2.357(This is the only)7.857 F(synchr)58 544 Q(onization primiti)
-.198 E -.11(ve)-.11 G F1(on which the semaphores should be based!)2.86
E F5(void sem_init\(struct sem *s, int count\);)76 558 Q
(Initialize the semaphore *s with the initial count. Initialize)115.6
572 Q(any underlying data structures.)115.6 586 Q
(sem_init should only be called)12 E
(once in the program \(per semaphore\).)115.6 600 Q(If called after the)
12 E(semaphore has been used, results are unpredictable.)115.6 614 Q
(int sem_try\(struct sem *s\);)76 642 Q
(Attempt to perform the "P" operation \(atomically decrement)115.6 656 Q
(the semaphore\).)115.6 670 Q(If this operation would block, return 0,)
12 E(otherwise return 1.)115.6 684 Q 0 Cg EP
%%Page: 2 2
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Roman@0 SF(ECE357:Computer Operating Systems)36 52 Q
(PS 6/pg 2)78.105 E(\2512016 Jef)164.158 E 2.75(fH)-.275 G(akner)-2.75 E
/F1 10/Courier@0 SF(void sem_wait\(struct sem *s\);)76 105 Q
(Perform the P operation, blocking until successful.)115.6 119 Q
(Blocking)12 E
(should be accomplished by noting within the *s that the current)115.6
133 Q(virtual processor needs to be woken up, and then sleeping using)
115.6 147 Q(the sigsuspend system call until SIGUSR1 is received.)115.6
161 Q(Assume)12 E
(that the extern int variable my_procnum exists and contains)115.6 175 Q
(the virtual processor id of the caller.)115.6 189 Q
(The implementation by)12 E
(which you keep track of waiting processors is up to you, e.g. it)115.6
203 Q(could be a linked list.)115.6 217 Q/F2 10/Times-Bold@0 SF
(Be mindful)12 E F1(however that any internal)6 E
(data structures such as a linked list of waiting processes can not)
115.6 231 Q
(be managed by malloc or anything which relies on malloc \(such as the)
115.6 245 Q
(dreaded C++ standard data structures class template library\), because)
115.6 259 Q
(such memory will be private to a specific process and not in the)115.6
273 Q(shared memory pool :\()115.6 287 Q(void sem_inc\(struct sem *s\);)
76 315 Q(Perform the V operation.)115.6 329 Q
(If any other processors were sleeping)12 E
(on this semaphore, wake them by sending a SIGUSR1 to their)115.6 343 Q
(process id \(which is not the same as the virtual processor number\).)
115.6 357 Q
(If there are multiple sleepers \(this would happen if multiple)115.6
371 Q
(virtual processors attempt the P operation while the count is <1\))106
385 Q(then)115.6 399 Q F2(all)6 E F1(must be sent the wakeup signal.)6 E
F0 1.199(It is suggested that after you code up this semaphore library)
58 418 R 3.949(,y)-.715 G 1.199(ou write a small testing frame)-3.949 F
-.11(wo)-.275 G 1.199(rk to mak).11 F 3.949(es)-.11 G 1.198(ure it)
-3.949 F -.11(wo)58 431 S .115(rks correctly).11 F 5.615(.N)-.715 G .115
(ote that you are required to implement all four operations abo)-5.615 F
.445 -.165(ve c)-.165 H(orrectly).165 E 2.865(,e)-.715 G -.165(ve)-3.14
G 2.865(ni).165 G 2.865(fy)-2.865 G .116(ou do not wind)-2.865 F
(up using all of them in your FIFO belo)58 444 Q 4.18 -.715(w. Y)-.275 H
(ou do not ha)-.495 E .33 -.165(ve t)-.22 H 2.75(os).165 G
(ubmit your test frame)-2.75 E -.11(wo)-.275 G(rk for this part.).11 E
/F3 11/Helvetica-Bold@0 SF(Pr)215.695 470 Q(ob)-.22 E
(lem 3 -- A FIFO using semaphores)-.11 E F0(No)58 489 Q 3.149(wc)-.275 G
.399(reate a \214fo module,)-3.149 F/F4 11/Courier@0 SF(fifo.c)3.149 E
F0 .399(with associated header \214le)3.149 F F4(fifo.h)3.148 E F0 3.148
(,w)C .398(hich maintains a FIFO of unsigned longs)-3.148 F .78
(using a shared memory data structure protected and coordinated)58 502 R
/F5 11/Times-Bold@0 SF(exclusi)3.53 E -.11(ve)-.11 G(ly).11 E F0 .78
(with the semaphore module de)3.53 F -.165(ve)-.275 G(loped).165 E(abo)
58 515 Q -.165(ve)-.165 G 7.01(.T).165 G(ak)-7.89 E 4.26(en)-.11 G 1.51
(ote of the w)-4.26 F 1.509(ord e)-.11 F(xclusi)-.165 E -.165(ve)-.275 G
7.009(.I).165 G 4.259(fy)-7.009 G 1.509(ou ha)-4.259 F 1.839 -.165(ve w)
-.22 H 1.509(ait queues, fork, SIGUSR1 or similar code in your \214fo.c)
.055 F .725(module, you did not understand the w)58 528 R 3.475
(ord. Depending)-.11 F .726
(on your approach you may or may not need to use all of the)3.475 F .068
(semaphore functions abo)58 541 R -.165(ve)-.165 G 5.568(.H).165 G -.275
(ow)-5.568 G -2.365 -.275(ev e).275 H .948 -.44(r, i).275 H 2.818(fy).44
G .068(our FIFO implementation tak)-2.818 F .068
(es more than about 100 lines of code, you are)-.11 F(probably o)58 554
Q -.165(ve)-.165 G -.22(r-).165 G(complicating things.).22 E F1
(void fifo_init\(struct fifo *f\);)82 568 Q
(Initialize the shared memory FIFO *f including any)173.2 582 Q
(required underlying initializations \(such as calling sem_init\))173.2
596 Q(The FIFO will have a fifo length of MYFIFO_BUFSIZ elements,)173.2
610 Q(which should be a static #define in fifo.h \(a value of 4K is)
173.2 624 Q(reasonable\).)173.2 638 Q 0 Cg EP
%%Page: 3 3
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Roman@0 SF(ECE357:Computer Operating Systems)36 52 Q
(PS 6/pg 3)78.105 E(\2512016 Jef)164.158 E 2.75(fH)-.275 G(akner)-2.75 E
/F1 10/Courier@0 SF(void fifo_wr\(struct fifo *f,unsigned long d\);)82
105 Q(Enqueue the data word d into the FIFO, blocking)173.2 119 Q
(unless and until the FIFO has room to accept it.)173.2 133 Q
(Use the semaphore primitives to accomplish blocking and waking.)173.2
147 Q(Writing to the FIFO shall cause any and all processes that)173.2
161 Q(had been blocked because it was empty to wake up.)173.2 175 Q
(unsigned long fifo_rd\(struct fifo *f\);)82 203 Q
(Dequeue the next data word from the FIFO and return it.)173.2 217 Q
(Block unless and until there are available words)173.2 231 Q
(queued in the FIFO.)173.2 245 Q(Reading from the FIFO shall cause)12 E
(any and all processes that had been blocked because it was)173.2 259 Q
(full to wake up.)173.2 273 Q F0(NO)58 292 Q 3.8(TES: It)-.44 F 1.05(is\
 intended that the semaphores that you require to accomplish synchroniz\
ing this FIFO be part of the)3.8 F/F2 11/Courier@0 SF 1.309(struct fifo)
58 305 R F0 6.809(.O)C 1.309(ne single mmap area is suf)-6.809 F 1.309
(\214cient for holding the)-.275 F F2 1.309(struct fifo)4.059 F F0 1.309
(which in turn can hold the)4.059 F 2.806(semaphores. Since)58 318 R
.057(we are arti\214cially placing a small static limit on the number o\
f virtual processors, there is no need)2.806 F
(to dynamically allocate an)58 331 Q(ything.)-.165 E .393
(The FIFO itself should be implemented as a \214x)58 357 R .393
(ed array of longs as a circular b)-.165 F(uf)-.22 E .392
(fer with suitable pointers or indices)-.275 F 1.408(for the ne)58 370 R
1.408(xt open write slot and the ne)-.165 F 1.408(xt a)-.165 F -.275(va)
-.22 G 1.409(ilable read slot.).275 F 1.409(There are tw)6.909 F 4.159
(od)-.11 G 1.409(istinct synchronization issues in the)-4.159 F .099
(FIFO: 1\) protecting the inte)58 383 R .099(grity of the)-.165 F F2
.098(struct fifo)2.848 F F0 .098
(data structure during the enqueue and dequeue operations)2.848 F(2\))
5.598 E 1.121(coordinating the sleep/w)58 396 R(ak)-.11 E 1.122(eup e)
-.11 F -.165(ve)-.275 G 1.122(nts of a reader w).165 F 1.122
(aiting on an empty FIFO, or a write w)-.11 F 1.122
(aiting for room in a full)-.11 F 4.376(FIFO. These)58 409 R 1.626
(are symmetrical conditions.)4.376 F 1.626(Issue #1 is short-li)7.126 F
-.165(ve)-.275 G 4.376(da).165 G 1.626
(nd is an appropriate use of a spin-lock mute)-4.376 F(x)-.165 E 1.509
(\(consider: ho)58 422 R 4.259(wc)-.275 G 1.509
(an you use a semaphore as a mute)-4.259 F 4.26(x?\). Issue)-.165 F 1.51
(#2 is long-li)4.26 F -.165(ve)-.275 G 4.26(da).165 G 1.51(nd will mak)
-4.26 F 4.26(eu)-.11 G 1.51(se of the inherent)-4.26 F(sleep/w)58 435 Q
(ak)-.11 E(eup mechanism of the semaphore.)-.11 E/F3 11/Helvetica-Bold@0
SF(Pr)245.505 461 Q(ob)-.22 E(lem 4 -- T)-.11 E(est y)-.66 E(our FIFO)
-.275 E F0 .042(Create a frame)58 480 R -.11(wo)-.275 G .042
(rk for testing your FIFO implementation.).11 F .042(Establish a)5.542 F
F2 .042(struct fifo)2.792 F F0 .042(in shared memory and create)2.792 F
(tw)58 493 Q 3.038(ov)-.11 G .288(irtual processors, one of which will \
be the writer and the other the reader)-3.038 F 5.788(.H)-.605 G -2.475
-.22(av e)-5.788 H .288(the writer send a \214x)3.258 F .289(ed number)
-.165 F(of sequentially-numbered data using)58 506 Q F2(fifo_wr)2.75 E
F0(and ha)2.75 E .33 -.165(ve t)-.22 H(he reader read these and v).165 E
(erify that all were recei)-.165 E -.165(ve)-.275 G(d.).165 E(Ne)58 525
Q 1.669(xt, gi)-.165 F 1.999 -.165(ve y)-.275 H 1.669
(our system the acid test by creating multiple writers, b).165 F 1.669
(ut one reader)-.22 F 7.168(.I)-.605 G 4.418(nas)-7.168 G 1.668
(uccessful test, all of the)-4.418 F .368
(writers' streams will be recei)58 538 R -.165(ve)-.275 G 3.118(db).165
G 3.118(yt)-3.118 G .368(he reader complete, in \(relati)-3.118 F -.165
(ve)-.275 G 3.118(\)s).165 G .368
(equence, with no missing or duplicated items,)-3.118 F 1.418
(and all processes will e)58 551 R -.165(ve)-.275 G 1.418
(ntually run to completion and e).165 F 1.418(xit \(no hanging\).)-.165
F 4.168(As)6.918 G 1.417(uggested approach is to treat each)-4.168 F
2.142(datum \(32-bit w)58 564 R 2.142(ord\) as a bitwise w)-.11 F 2.143
(ord consisting of an ID for the writer and the sequence number)-.11 F
7.643(.\()-.605 G 2.143(It is not)-7.643 F
(necessary to test under multiple readers, b)58 577 Q
(ut your \214fo code should w)-.22 E(ork correctly for this case\))-.11
E .698(Use reasonable test parameters.)58 596 R(Remember)6.198 E 3.448
(,a)-.44 G 3.448(na)-3.448 G .698(cid test of a FIFO where the b)-3.448
F(uf)-.22 E .698(fer does not \214ll and empty quite a)-.275 F(fe)58 609
Q 3.308(wt)-.275 G .558(imes has a pH of 6.9, i.e. it isn')-3.308 F
3.308(tav)-.198 G .558(ery strong acid.)-3.473 F -1.21(Yo)6.059 G 3.309
(us)1.21 G .559(hould be able to demonstrate)-3.309 F/F4 11/Times-Bold@0
SF(failur)3.309 E(e)-.198 E F0 .559(by deliberately)3.309 F .616
(breaking something in your implementation, e.g. re)58 622 R -.165(ve)
-.275 G .615(rsing the order of tw).165 F 3.365(ol)-.11 G .615
(ocking operations.)-3.365 F -1.21(Yo)6.115 G 3.365(us)1.21 G .615
(hould then be)-3.365 F(able to demonstrate success under a v)58 635 Q
(ariety of strenuous conditions.)-.275 E/F5 11/Times-Italic@0 SF .136
(Submit all of the code comprising this \214nal test system, i.e)58 654
R 2.886(.y)-.165 G .136(our sem.[c)-2.886 F .136(h], \214fo.[c)-.165 F
.137(h] and main.c \214les, as well as output)-.165 F(fr)58 667 Q .864
(om your test pr)-.495 F -.11(og)-.495 G -.165(ra).11 G 3.613(ms).165 G
.863(howing it r)-3.613 F .863(an corr)-.165 F(ectly)-.407 E 6.363(.I)
-.605 G 3.613(ft)-6.363 G .863(he output is very verbose)-3.613 F 3.613
(,y)-.11 G .863(ou may trim the uninter)-3.613 F .863(esting stuf)-.407
F(f)-.198 E(with an appr)58 680 Q(opriate annotation.)-.495 E 0 Cg EP
%%Trailer
end
%%EOF
