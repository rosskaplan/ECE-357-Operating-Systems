%!PS-Adobe-3.0
%%Creator: groff version 1.19.1
%%CreationDate: Thu Oct 13 23:17:43 2016
%%DocumentNeededResources: font Times-Roman
%%+ font Times-Bold
%%+ font Courier
%%+ font Times-Italic
%%DocumentSuppliedResources: file procstate.eps
%%+ file ancestry.eps
%%+ file waitstat.eps
%%+ file filetables.eps
%%+ file maps.eps
%%+ procset grops 1.19 1
%%Pages: 30
%%PageOrder: Ascend
%%DocumentMedia: Default 612 792 0 () ()
%%Orientation: Portrait
%%EndComments
%%BeginDefaults
%%PageMedia: Default
%%EndDefaults
%%BeginProlog
%%BeginResource: procset grops 1.19 1
%!PS-Adobe-3.0 Resource-ProcSet
/setpacking where{
pop
currentpacking
true setpacking
}if
/grops 120 dict dup begin
/SC 32 def
/A/show load def
/B{0 SC 3 -1 roll widthshow}bind def
/C{0 exch ashow}bind def
/D{0 exch 0 SC 5 2 roll awidthshow}bind def
/E{0 rmoveto show}bind def
/F{0 rmoveto 0 SC 3 -1 roll widthshow}bind def
/G{0 rmoveto 0 exch ashow}bind def
/H{0 rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/I{0 exch rmoveto show}bind def
/J{0 exch rmoveto 0 SC 3 -1 roll widthshow}bind def
/K{0 exch rmoveto 0 exch ashow}bind def
/L{0 exch rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/M{rmoveto show}bind def
/N{rmoveto 0 SC 3 -1 roll widthshow}bind def
/O{rmoveto 0 exch ashow}bind def
/P{rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/Q{moveto show}bind def
/R{moveto 0 SC 3 -1 roll widthshow}bind def
/S{moveto 0 exch ashow}bind def
/T{moveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/SF{
findfont exch
[exch dup 0 exch 0 exch neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/MF{
findfont
[5 2 roll
0 3 1 roll
neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/level0 0 def
/RES 0 def
/PL 0 def
/LS 0 def
/MANUAL{
statusdict begin/manualfeed true store end
}bind def
/PLG{
gsave newpath clippath pathbbox grestore
exch pop add exch pop
}bind def
/BP{
/level0 save def
1 setlinecap
1 setlinejoin
72 RES div dup scale
LS{
90 rotate
}{
0 PL translate
}ifelse
1 -1 scale
}bind def
/EP{
level0 restore
showpage
}bind def
/DA{
newpath arcn stroke
}bind def
/SN{
transform
.25 sub exch .25 sub exch
round .25 add exch round .25 add exch
itransform
}bind def
/DL{
SN
moveto
SN
lineto stroke
}bind def
/DC{
newpath 0 360 arc closepath
}bind def
/TM matrix def
/DE{
TM currentmatrix pop
translate scale newpath 0 0 .5 0 360 arc closepath
TM setmatrix
}bind def
/RC/rcurveto load def
/RL/rlineto load def
/ST/stroke load def
/MT/moveto load def
/CL/closepath load def
/Fr{
setrgbcolor fill
}bind def
/setcmykcolor where{
pop
/Fk{
setcmykcolor fill
}bind def
}if
/Fg{
setgray fill
}bind def
/FL/fill load def
/LW/setlinewidth load def
/Cr/setrgbcolor load def
/setcmykcolor where{
pop
/Ck/setcmykcolor load def
}if
/Cg/setgray load def
/RE{
findfont
dup maxlength 1 index/FontName known not{1 add}if dict begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
/Encoding exch def
dup/FontName exch def
currentdict end definefont pop
}bind def
/DEFS 0 def
/EBEGIN{
moveto
DEFS begin
}bind def
/EEND/end load def
/CNT 0 def
/level1 0 def
/PBEGIN{
/level1 save def
translate
div 3 1 roll div exch scale
neg exch neg exch translate
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[]0 setdash
/setstrokeadjust where{
pop
false setstrokeadjust
}if
/setoverprint where{
pop
false setoverprint
}if
newpath
/CNT countdictstack def
userdict begin
/showpage{}def
/setpagedevice{}def
}bind def
/PEND{
clear
countdictstack CNT sub{end}repeat
level1 restore
}bind def
end def
/setpacking where{
pop
setpacking
}if
%%EndResource
%%EndProlog
%%BeginSetup
%%BeginFeature: *PageSize Default
<< /PageSize [ 612 792 ] /ImagingBBox null >> setpagedevice
%%EndFeature
%%IncludeResource: font Times-Roman
%%IncludeResource: font Times-Bold
%%IncludeResource: font Courier
%%IncludeResource: font Times-Italic
grops begin/DEFS 1 dict def DEFS begin/u{.001 mul}bind def end/RES 72
def/PL 792 def/LS false def/ENC0[/asciicircum/asciitilde/Scaron/Zcaron
/scaron/zcaron/Ydieresis/trademark/quotesingle/Euro/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/space/exclam/quotedbl/numbersign/dollar/percent
/ampersand/quoteright/parenleft/parenright/asterisk/plus/comma/hyphen
/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/circumflex
/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y
/z/braceleft/bar/braceright/tilde/.notdef/quotesinglbase/guillemotleft
/guillemotright/bullet/florin/fraction/perthousand/dagger/daggerdbl
/endash/emdash/ff/fi/fl/ffi/ffl/dotlessi/dotlessj/grave/hungarumlaut
/dotaccent/breve/caron/ring/ogonek/quotedblleft/quotedblright/oe/lslash
/quotedblbase/OE/Lslash/.notdef/exclamdown/cent/sterling/currency/yen
/brokenbar/section/dieresis/copyright/ordfeminine/guilsinglleft
/logicalnot/minus/registered/macron/degree/plusminus/twosuperior
/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guilsinglright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE
/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn
/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash
/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/Times-Italic@0 ENC0/Times-Italic RE/Courier@0 ENC0/Courier RE
/Times-Bold@0 ENC0/Times-Bold RE/Times-Roman@0 ENC0/Times-Roman RE
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)69.336 60 Q
(Unit 3/pg 1)55.998 E(\2512016 Jef)126.405 E 2.25(fH)-.225 G(akner)-2.25
E/F1 13/Times-Bold@0 SF(The UNIX Pr)215.823 120 Q(ocess)-.234 E/F2 13
/Times-Roman@0 SF 2.123(The UNIX process is a)33.336 150 R F1 2.123
(virtual computer)5.373 F F2 5.373(,t)C 2.122
(hat is to say the combination of a virtual)-5.373 F .083
(address space and a virtual processor \(or task\).)33.336 165 R .084
(The k)6.584 F .084(ernel pro)-.13 F .084(vides system calls to create)
-.195 F(ne)33.336 180 Q 4.041(wp)-.325 G .791(rocesses, to destro)-4.041
F 4.041(yp)-.13 G .791
(rocesses, and to change the program which is running within)-4.041 F
2.142(the process.)33.336 195 R 2.142
(The purpose of this unit is to mak)8.642 F 5.392(ea)-.13 G 5.392(ni)
-5.392 G 2.143(ntroductory e)-5.392 F 2.143(xploration of these)-.195 F
(mechanisms.)33.336 210 Q 2.895 -1.04(We w)33.336 240 T .814
(ill be looking at 3 important system calls which beha)1.04 F 1.204
-.195(ve o)-.26 H(ddly).195 E 4.064(,f)-.845 G .814(rom the standpoint)
-4.064 F 1.649(of con)33.336 255 R -.195(ve)-.52 G 1.65
(ntional programming.).195 F 1.65(These are fork, e)8.15 F 1.65
(xit and e)-.195 F -.195(xe)-.195 G 4.9(c. Y).195 F 1.65
(ou call these functions)-1.43 F(once, b)33.336 270 Q(ut the)-.26 E 3.25
(yr)-.195 G(eturn twice, ne)-3.25 E -.195(ve)-.325 G 1.04 -.52(r, o).195
H 3.25(ro).52 G(nce b)-3.25 E(ut in a dif)-.26 E
(ferent program, respecti)-.325 E -.195(ve)-.325 G(ly!).195 E 2.381
(Processes are identi\214ed by an inte)33.336 300 R(ger)-.195 E F1(Pr)
5.631 E 2.381(ocess ID \(pid\))-.234 F F2 8.881(.A)C 2.381
(ll processes ha)-8.881 F 2.771 -.195(ve a p)-.26 H(arent).195 E .923(w\
hich caused their creation, and thus the collection of processes at an)
33.336 315 R 4.173(yi)-.195 G .923(nstant forms an)-4.173 F .83
(ancestry tree.)33.336 330 R .829
(The pid of the current running process can be retrie)7.33 F -.195(ve)
-.325 G 4.079(dw).195 G .829(ith the)-4.079 F/F3 13/Courier@0 SF(getpid)
4.079 E F2(system call, and the)33.336 345 Q F3(getppid)3.25 E F2
(system call returns the parent')3.25 E 3.25(sp)-.715 G(rocess id.)-3.25
E .618(There are interf)33.336 375 R .618
(aces to get the list of all running processes \(pids\) on the system.)
-.13 F(The)7.119 E F3(ps)3.869 E F2 2.554
(command is commonly used for this.)33.336 390 R 2.553
(On Linux systems, it in turn uses the)9.054 F F3(/proc)5.803 E F2 4.491
(pseudo-\214lesystem. There)33.336 405 R 1.242
(is an entry under this directory for each running process, e.g.)4.491 F
F3(/proc/123)33.336 420 Q F2
(is a subdirectory which contains more information about pid #123.)3.25
E 1.234(Process #1 is al)33.336 450 R -.13(wa)-.13 G 1.233
(ys at the root of the tree, and is al).13 F -.13(wa)-.13 G 1.233
(ys running a specialized system).13 F .474(utility program called)
33.336 465 R F3(init)3.724 E F2(.)A F3(init)6.974 E F2 .474
(is started by the k)3.724 F .474(ernel after bootstrap, and it in turn)
-.13 F(spa)33.336 480 Q 4.321(wns of)-.195 F 7.571(fa)-.325 G 4.321
(dditional processes which pro)-7.571 F 4.321
(vide services and user interf)-.195 F 4.32(aces to the)-.13 F(computer)
33.336 495 Q(.)-.715 E F1(The V)158.402 525 Q(irtual Addr)-.481 E
(ess Space of a Pr)-.234 E(ocess)-.234 E F2 .83(All UNIX processes ha)
33.336 555 R 1.22 -.195(ve a v)-.26 H .83
(irtual address space which consists of a number of).195 F F1 -.234(re)
4.081 G(gions).234 E F2 .905(aka se)33.336 570 R .905(gments \(ho)-.195
F(we)-.325 E -.195(ve)-.325 G 4.155(rt).195 G .905(he term se)-4.155 F
.904(gment should not be confused with hardw)-.195 F .904(are address)
-.13 F(se)33.336 585 Q .448(gmentation as practiced on the x86 f)-.195 F
.448(amily of processors\).)-.13 F -.195(Fo)6.948 G 3.698(rag).195 G
-2.795 -.325(iv e)-3.698 H 3.698(nU).325 G .448(NIX operating)-3.698 F
.855(system v)33.336 600 R .854(ariant and processor type, there is a t\
ypical virtual memory layout of a process.)-.325 F .154
(Recall that virtual addresses are meaningful within a gi)33.336 615 R
-.195(ve)-.325 G 3.404(np).195 G .154(rocess only)-3.404 F 6.654(.T)
-.845 G .155(hus there is no)-6.654 F
(con\215ict when the same virtual addresses are used in dif)33.336 630 Q
(ferent processes.)-.325 E 0 Cg EP
%%Page: 2 2
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 3/pg 2)73.998 E(\2512016 Jef)144.405 E 2.25(fH)-.225 G(akner)-2.25
E 0 0 468 647 -390.603 540 33.336 510.603 PBEGIN
%%BeginDocument: maps.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: maps.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Wed Oct  5 22:35:20 2016
%%For: hak@lex ()
%%BoundingBox: 0 0 647 540
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 540 moveto 0 0 lineto 647 0 lineto 647 540 lineto closepath clip newpath
-70.0 577.3 translate
1 -1 scale

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proc char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def

% right30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<00030003000c000c0030003000c000c0030003000c000c00
	30003000c000c00000030003000c000c0030003000c000c0
	030003000c000c0030003000c000c000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P2 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/reencdict 12 dict def /ReEncode { reencdict begin
/newcodesandnames exch def /newfontname exch def /basefontname exch def
/basefontdict basefontname findfont def /newfont basefontdict maxlength dict def
basefontdict { exch dup /FID ne { dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put } ifelse } { pop pop } ifelse } forall
newfont /FontName newfontname put newcodesandnames aload pop
128 1 255 { newfont /Encoding get exch /.notdef put } for
newcodesandnames length 2 idiv { newfont /Encoding get 3 1 roll put } repeat
newfontname newfont definefont pop end } def
/isovec [
8#055 /minus 8#200 /grave 8#201 /acute 8#202 /circumflex 8#203 /tilde
8#204 /macron 8#205 /breve 8#206 /dotaccent 8#207 /dieresis
8#210 /ring 8#211 /cedilla 8#212 /hungarumlaut 8#213 /ogonek 8#214 /caron
8#220 /dotlessi 8#230 /oe 8#231 /OE
8#240 /space 8#241 /exclamdown 8#242 /cent 8#243 /sterling
8#244 /currency 8#245 /yen 8#246 /brokenbar 8#247 /section 8#250 /dieresis
8#251 /copyright 8#252 /ordfeminine 8#253 /guillemotleft 8#254 /logicalnot
8#255 /hyphen 8#256 /registered 8#257 /macron 8#260 /degree 8#261 /plusminus
8#262 /twosuperior 8#263 /threesuperior 8#264 /acute 8#265 /mu 8#266 /paragraph
8#267 /periodcentered 8#270 /cedilla 8#271 /onesuperior 8#272 /ordmasculine
8#273 /guillemotright 8#274 /onequarter 8#275 /onehalf
8#276 /threequarters 8#277 /questiondown 8#300 /Agrave 8#301 /Aacute
8#302 /Acircumflex 8#303 /Atilde 8#304 /Adieresis 8#305 /Aring
8#306 /AE 8#307 /Ccedilla 8#310 /Egrave 8#311 /Eacute
8#312 /Ecircumflex 8#313 /Edieresis 8#314 /Igrave 8#315 /Iacute
8#316 /Icircumflex 8#317 /Idieresis 8#320 /Eth 8#321 /Ntilde 8#322 /Ograve
8#323 /Oacute 8#324 /Ocircumflex 8#325 /Otilde 8#326 /Odieresis 8#327 /multiply
8#330 /Oslash 8#331 /Ugrave 8#332 /Uacute 8#333 /Ucircumflex
8#334 /Udieresis 8#335 /Yacute 8#336 /Thorn 8#337 /germandbls 8#340 /agrave
8#341 /aacute 8#342 /acircumflex 8#343 /atilde 8#344 /adieresis 8#345 /aring
8#346 /ae 8#347 /ccedilla 8#350 /egrave 8#351 /eacute
8#352 /ecircumflex 8#353 /edieresis 8#354 /igrave 8#355 /iacute
8#356 /icircumflex 8#357 /idieresis 8#360 /eth 8#361 /ntilde 8#362 /ograve
8#363 /oacute 8#364 /ocircumflex 8#365 /otilde 8#366 /odieresis 8#367 /divide
8#370 /oslash 8#371 /ugrave 8#372 /uacute 8#373 /ucircumflex
8#374 /udieresis 8#375 /yacute 8#376 /thorn 8#377 /ydieresis] def
/Times-Roman /Times-Roman-iso isovec ReEncode
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 50
% Polyline
15.000 slw
n 5760 1200 m 9360 1200 l 9360 9600 l 5760 9600 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 384.00 80.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 5760 1920 m 9360 1920 l 9360 2880 l 5760 2880 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 5760 5400 m 9360 5400 l 9360 6600 l 5760 6600 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 5760 7800 m 9360 7800 l 9360 9120 l 5760 9120 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
30.000 slw
gs  clippath
7530 6945 m 7350 6945 l 7350 7277 l 7440 7007 l 7530 7277 l cp
eoclip
n 7440 7800 m
 7440 6960 l gs col7 1.00 shd ef gr gs col0 s gr gr

% arrowhead
n 7530 7277 m 7440 7007 l 7350 7277 l 7440 7367 l 7530 7277 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
7830 7215 m 8010 7215 l 8010 6883 l 7920 7153 l 7830 6883 l cp
eoclip
n 7920 6600 m
 7920 7200 l gs col7 1.00 shd ef gr gs col0 s gr gr

% arrowhead
n 7830 6883 m 7920 7153 l 8010 6883 l 7920 6793 l 7830 6883 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 1200 1200 m 3600 1200 l 3600 5760 l 1200 5760 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 80.00 80.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1200 4440 m 3600 4440 l 3600 5520 l 1200 5520 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 1200 3000 m 3600 3000 l 3600 4200 l 1200 4200 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 1200 1200 m 3600 1200 l 3600 2520 l 1200 2520 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
gs  clippath
6166 2478 m 6101 2310 l 5691 2471 l 6060 2424 l 5757 2638 l cp
eoclip
n 3360 3480 m
 6120 2400 l gs col7 1.00 shd ef gr gs col0 s gr gr

% arrowhead
n 5757 2638 m 6060 2424 l 5691 2471 l 5757 2638 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
6156 4283 m 6112 4109 l 5685 4216 l 6057 4216 l 5729 4390 l cp
eoclip
n 3240 4920 m
 6120 4200 l gs col7 1.00 shd ef gr gs col0 s gr gr

% arrowhead
n 5729 4390 m 6057 4216 l 5685 4216 l 5729 4390 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
7.500 slw
gs  clippath
8415 2295 m 8366 2330 l 8457 2452 l 8410 2338 l 8505 2416 l cp
eoclip
n 10650 5325 m
 8400 2325 l gs col0 s gr gr

% arrowhead
n 8505 2416 m 8410 2338 l 8457 2452 l  col0 s
% Polyline
gs  clippath
8593 8089 m 8635 8131 l 8743 8024 l 8637 8088 l 8700 7981 l cp
eoclip
n 10575 6150 m
 8625 8100 l gs col0 s gr gr

% arrowhead
n 8700 7981 m 8637 8088 l 8743 8024 l  col0 s
% Polyline
15.000 slw
n 10500 3825 m 11925 3825 l 11925 6375 l 10500 6375 l
 cp gs col0 s gr 
% Polyline
7.500 slw
n 10500 4275 m
 11925 4275 l gs col0 s gr 
% Polyline
n 10500 4725 m
 11925 4725 l gs col0 s gr 
% Polyline
n 10500 5550 m
 11925 5550 l gs col0 s gr 
% Polyline
n 10500 5925 m
 11925 5925 l gs col0 s gr 
% Polyline
n 10500 5175 m
 11925 5175 l gs col0 s gr 
% Polyline
gs  clippath
8593 7789 m 8635 7831 l 8743 7724 l 8637 7788 l 8700 7681 l cp
eoclip
n 10650 5775 m
 8625 7800 l gs col0 s gr gr

% arrowhead
n 8700 7681 m 8637 7788 l 8743 7724 l  col0 s
% Polyline
15.000 slw
 [90] 0 sd
n 5760 4680 m 9360 4680 l 9360 5400 l 5760 5400 l
 cp gs col7 1.00 shd ef gr gs col0 s gr  [] 0 sd
% Polyline
7.500 slw
gs  clippath
4770 5340 m 4830 5340 l 4830 5188 l 4800 5308 l 4770 5188 l cp
eoclip
n 4800 4875 m
 4800 5325 l gs col0 s gr gr

% arrowhead
n 4770 5188 m 4800 5308 l 4830 5188 l  col0 s
/Times-Roman-iso ff 266.67 scf sf
7320 2520 m
gs 1 -1 sc (text) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 266.67 scf sf
7320 5160 m
gs 1 -1 sc (bss) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 266.67 scf sf
7320 6120 m
gs 1 -1 sc (heap) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 266.67 scf sf
7320 8520 m
gs 1 -1 sc (stack) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 233.33 scf sf
5640 1200 m
gs 1 -1 sc (00000000) dup sw pop neg 0 rm  col0 sh gr
/Times-Roman-iso ff 233.33 scf sf
5640 9600 m
gs 1 -1 sc (FFFFFFFF) dup sw pop neg 0 rm  col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
7320 840 m
gs 1 -1 sc (Run-Time Memory Image) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 266.67 scf sf
2280 3600 m
gs 1 -1 sc (.text) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 266.67 scf sf
2280 5040 m
gs 1 -1 sc (.data) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 266.67 scf sf
1440 2370 m
gs 1 -1 sc (exec_start_addr) col0 sh gr
/Times-Roman-iso ff 266.67 scf sf
2280 1560 m
gs 1 -1 sc (header:) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
2640 840 m
gs 1 -1 sc (a.out file) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
10950 4125 m
gs 1 -1 sc (%eax) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
10950 4575 m
gs 1 -1 sc (%ebx) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
10875 6225 m
gs 1 -1 sc (%ebp) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
10950 4950 m
gs 1 -1 sc (. . .) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
10875 5400 m
gs 1 -1 sc (%eip) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
10875 5850 m
gs 1 -1 sc (%esp) col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
11175 3600 m
gs 1 -1 sc (Processor) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
11175 3225 m
gs 1 -1 sc (Virtual) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 266.67 scf sf
1275 1800 m
gs 1 -1 sc (text_start,data_start) col0 sh gr
/Times-Roman-iso ff 266.67 scf sf
1350 2100 m
gs 1 -1 sc (bss_start,bss_size) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
5625 2100 m
gs 1 -1 sc (text_start) dup sw pop neg 0 rm  col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
5625 3975 m
gs 1 -1 sc (data_start) dup sw pop neg 0 rm  col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
5625 4800 m
gs 1 -1 sc (bss_start) dup sw pop neg 0 rm  col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
5700 5475 m
gs 1 -1 sc (+bss_size) dup sw pop neg 0 rm  col0 sh gr
% Polyline
15.000 slw
n 5760 3840 m 9360 3840 l 9360 4680 l 5760 4680 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
/Times-Roman-iso ff 266.67 scf sf
7320 4320 m
gs 1 -1 sc (data) dup sw pop 2 div neg 0 rm  col0 sh gr
% here ends figure;
$F2psEnd
rs
end
showpage
%%EndDocument
end PEND/F1 13/Times-Roman@0 SF -.195(Fo)33.336 552.603 S 3.697(rt).195
G .447(he purposes of simplicity)-3.697 F 3.697(,w)-.845 G 3.697(ew)
-3.697 G .447(ill assume a 32-bit architecture, and therefore virtual)
-3.697 F .669(address space ranges from 0 to 0xFFFFFFFF)33.336 567.603 R
7.169(.N)-1.04 G .67(ot all of this address space is populated.)-7.169 F
-.455(Tr)33.336 582.603 S(aditionally).455 E 3.25(,a)-.845 G
(ll UNIX systems use 4 re)-3.25 E(gions: te)-.195 E
(xt, data, bss and stack.)-.195 E 5.751<8354>33.336 597.603 S(he)-5.751
E/F2 13/Courier@0 SF(text)5.751 E F1(re)5.751 E 2.501(gion is the e)
-.195 F -.195(xe)-.195 G 2.501(cutable code of the program.).195 F 2.5
(Other read-only data are)9 F 1.126(sometimes placed in this re)33.336
612.603 R 1.126(gion, such as string literals in the C language.)-.195 F
1.127(The program)7.627 F .19(counter re)33.336 627.603 R .19(gister \(\
%eip on X86-32 architecture\) will generally be pointing into this re)
-.195 F(gion.)-.195 E 3.25<8354>33.336 642.603 S(he)-3.25 E F2(data)3.25
E F1(re)3.25 E(gion contains initialized global v)-.195 E(ariables.)
-.325 E 5.588<8354>33.336 657.603 S(he)-5.588 E F2(bss)5.588 E F1(re)
5.589 E 2.339(gion contains uninitialized globals.)-.195 F 2.339
(Lacking an e)8.839 F 2.339(xplicit initializer)-.195 F 5.589(,t)-.52 G
(hese)-5.589 E -.325(va)33.336 672.603 S 2.946
(riables are implicitly set to 0 when the program starts.).325 F 2.946
(According to the original)9.446 F 1.856(authors of UNIX, "bss" w)33.336
687.603 R 1.857
(as the name of an assembly-language pseudo-opcode "block)-.13 F .149
(started by symbol", and w)33.336 702.603 R .148
(as used to de\214ne an assembly symbol representing a v)-.13 F .148
(ariable or)-.325 F 1.86(array of \214x)33.336 717.603 R 1.861
(ed size without an initializer)-.195 F 8.361(.T)-.715 G 1.861
(he bss re)-8.361 F 1.861(gion is gro)-.195 F 1.861
(wn by requesting more)-.325 F 2.557(memory from the k)33.336 732.603 R
2.556(ernel, and this dynamically-allocated memory is often called "the)
-.13 F 0 Cg EP
%%Page: 3 3
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 3/pg 3)73.998 E(\2512016 Jef)144.405 E 2.25(fH)-.225 G(akner)-2.25
E/F1 13/Times-Roman@0 SF(heap".)33.336 120 Q 7.224<8354>33.336 135 S(he)
-7.224 E/F2 13/Courier@0 SF(stack)7.224 E F1(re)7.224 E 3.974
(gion is the function call stack of the running program.)-.195 F
(Function)10.474 E(ar)33.336 150 Q .357
(guments and return addresses are pushed and popped on this stack.)-.234
F 3.606(Ad)6.856 G(if)-3.606 E .356(ferent stack is)-.325 F 1.421
(used when the process is running in k)33.336 165 R 1.422
(ernel mode, ho)-.13 F(we)-.325 E -.195(ve)-.325 G 4.672(rt).195 G 1.422
(hat discussion will ha)-4.672 F 1.812 -.195(ve t)-.26 H(o).195 E -.13
(wa)33.336 180 S .027(it until a subsequent unit.).13 F .027
(The %esp and %ebp re)6.527 F .027
(gisters on X86-32 are pointing within)-.195 F(the stack re)33.336 195 Q
(gion.)-.195 E 3.191(There are additional memory re)33.336 225 R 3.191
(gions which can be created as well, such as shared)-.195 F .548
(libraries, and memory-mapped \214les.)33.336 240 R .548
(In Unit #5, we will e)7.048 F .548(xplore the properties of virtual)
-.195 F(memory in much greater detail.)33.336 255 Q/F3 13/Times-Bold@0
SF(Installing a new pr)169.777 285 Q(ogram with exec)-.234 E F1(The)
33.336 315 Q F2(exec)4.61 E F1 1.36
(system call replaces the currently running program with a ne)4.61 F
4.611(wo)-.325 G 4.611(ne. It)-4.611 F(does)4.611 E .362
(not change the process ID, b)33.336 330 R .361
(ut it does conceptually delete the entire virtual address space)-.26 F
.299(of the process and replace it with a brand ne)33.336 345 R 3.549
(wo)-.325 G .299(ne, into which the ne)-3.549 F 3.549(wp)-.325 G .299
(rogram is loaded)-3.549 F(and e)33.336 360 Q -.195(xe)-.195 G(cuted.)
.195 E -1.04(We)33.336 390 S -.13('l)1.04 G 4.992(lr).13 G -.325(ev)
-4.992 G(ie).325 E 4.992(wt)-.325 G 1.741(he e)-4.992 F -.195(xe)-.195 G
1.741(c\(2\) system call v).195 F 1.741(ery shortly)-.195 F 8.241(.I)
-.845 G 4.991(no)-8.241 G 1.741(rder to load and e)-4.991 F -.195(xe)
-.195 G 1.741(cute a ne).195 F(w)-.325 E(program into an e)33.336 405 Q
(xisting process, the UNIX k)-.195 E(ernel most be gi)-.13 E -.195(ve)
-.325 G 3.25(nt).195 G(he follo)-3.25 E(wing:)-.325 E 3.25<8354>33.336
420 S(he pathname of the e)-3.25 E -.195(xe)-.195 G(cutable \214le).195
E 3.25(\203Al)33.336 435 S(ist of ar)-3.25 E(guments \(the f)-.234 E
(amiliar C-style ar)-.13 E(gv[] array\))-.234 E 3.25(\203Al)33.336 450 S
(ist of strings kno)-3.25 E(wn as the)-.325 E F3(en)3.25 E(vir)-.52 E
(onment)-.234 E F1(which will be discussed belo)3.25 E -.845(w.)-.325 G
<83>33.336 480 Q/F4 13/Times-Italic@0 SF(Conceptually)6.669 E F1 6.669
(,t)C 3.42(he e)-6.669 F -.195(xe)-.195 G 6.67(cs).195 G 3.42
(ystem call, after making a cop)-6.67 F 6.67(yo)-.13 G 6.67(ft)-6.67 G
3.42(he 3 vital pieces of)-6.67 F 1.837(information abo)33.336 495 R
2.227 -.195(ve i)-.195 H 1.837(nto k).195 F 1.836(ernel memory)-.13 F
5.086(,d)-.845 G 1.836(iscards the entire virtual address space of the)
-5.086 F .564(process as it currently e)33.336 510 R 3.814(xists. Ag)
-.195 F .564(ain, conceptually)-.065 F 3.814(,t)-.845 G .565(he k)-3.814
F .565(ernel loads the e)-.13 F -.195(xe)-.195 G .565(cutable image).195
F 5.802(into \(virtual\) memory be)33.336 525 R 5.802
(ginning at some speci\214c absolute virtual address.)-.195 F(The)12.301
E -.195(exe)33.336 540 S(cutable \214le, or).195 E F2(a.out)3.25 E F1
3.25(,c)C(ontains:)-3.25 E 3.25<8354>33.336 555 S
(he loading virtual address and size of the te)-3.25 E(xt and data re)
-.195 E(gions.)-.195 E 3.25<8354>33.336 570 S
(he virtual address and initial size of the bss re)-3.25 E(gion.)-.195 E
3.25<8354>33.336 585 S
(he entrypoint \(virtual address of \214rst opcode\) of the program)
-3.25 E 4.215(The k)33.336 615 R 4.215(ernel creates the four basic re)
-.13 F 4.215(gions \(te)-.195 F 4.215
(xt, data, bss, stack\) according to the)-.195 F .806
(information in the)33.336 630 R F2(a.out)4.055 E F1 4.055(\214le. The)
4.055 F(te)4.055 E .805(xt and data re)-.195 F .805
(gions are initialized by loading their)-.195 F 1.69(image from the)
33.336 645 R F2(a.out)4.94 E F1 8.19(.T)C 1.69(he bss re)-8.19 F 1.69
(gion is initialized as all 0 bytes \(meaning that an)-.195 F(y)-.195 E
1.551(global v)33.336 660 R 1.551(ariables lacking an e)-.325 F 1.55
(xplicit initializer are implicitly initialized to 0\).)-.195 F 1.55
(An initial)8.05 F 2.052(stack re)33.336 675 R 2.052
(gion is created \(we will see in Unit #5 that it gro)-.195 F 2.053
(ws on demand\) and a small)-.325 F .364(portion of the stack, at the v)
33.336 690 R .364(ery highest address, is typically used to pass the en)
-.195 F(vironment)-.52 E -.325(va)33.336 705 S 1.26(riables and ar).325
F 1.26(gument strings.)-.234 F 1.26
(The stack pointer and frame pointer re)7.76 F 1.26(gisters are set to)
-.195 F .692(point to the correct place within the stack.)33.336 720 R
.691(The k)7.191 F .691(ernel establishes a stack frame as if the)-.13 F
2.805(entrypoint function had been called with)33.336 735 R F2 2.806
(\(int argc, char *argv[], char)6.055 F 0 Cg EP
%%Page: 4 4
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 3/pg 4)73.998 E(\2512016 Jef)144.405 E 2.25(fH)-.225 G(akner)-2.25
E/F1 13/Courier@0 SF(*envp[]\))33.336 120 Q/F2 13/Times-Roman@0 SF .258
(If you e)33.336 150 R .258(xamine the v)-.195 F .258
(alues of these pointers ar)-.325 F .258(gv and en)-.234 F .257
(vp, you')-.52 F 3.507<648c>-.65 G .257(nd that the)-3.507 F 3.507(yf)
-.195 G .257(all within)-3.637 F .52(the stack re)33.336 165 R 3.77
(gion. The)-.195 F -.13(ke)3.77 G .52
(rnel sets up the stack, starting from the highest address \(because).13
F .067(stacks gro)33.336 180 R 3.317(wt)-.325 G -2.73 -.325(ow a)-3.317
H .066(rds lo).325 F .066
(w-numbered addresses\), allocating space for the ar)-.325 F .066
(guments and the)-.234 F(en)33.336 195 Q 3.278(vironment. The)-.52 F
-.13(ke)3.278 G .029
(rnel then sets the stack pointer \(%esp on X86-32\) re).13 F .029
(gister to the ne)-.195 F(xt)-.195 E 1.231(free address and be)33.336
210 R 1.231(gins e)-.195 F -.195(xe)-.195 G 4.481(cution. Since).195 F
1.231(the ar)4.481 F 1.231(guments and en)-.234 F 1.23
(vironment are belo)-.52 F 4.48(wt)-.325 G(he)-4.48 E 1.354
(stack frame for the startup function, the)33.336 225 R 4.604(ya)-.195 G
1.354(re "stable" and may be passed around freely)-4.604 F 2.053(throug\
hout the program without fear that the associated memory may disappear \
or be)33.336 240 R(used for something else.)33.336 255 Q 1.849
(After the memory re)33.336 285 R 1.849
(gions are created and initialized, e)-.195 F -.195(xe)-.195 G 1.85
(cution of the program be).195 F(gins)-.195 E .753(when the k)33.336 300
R .752(ernel sets the program counter re)-.13 F .752
(gister to the start address which is contained)-.195 F
(in the a.out \214le, and then releases the virtual processor to be)
33.336 315 Q(gin e)-.195 E -.195(xe)-.195 G(cuting instructions.).195 E
1.42(Although the traditional vie)33.336 345 R 4.67(wi)-.325 G 4.67(st)
-4.67 G 1.42(hat e)-4.67 F -.195(xe)-.195 G 1.421
(cution of a C or C++ program be).195 F 1.421(gins with the)-.195 F
1.495(main\(\) function, in f)33.336 360 R 1.495
(act there are numerous hidden startup routines which e)-.13 F -.195(xe)
-.195 G 1.495(cute \214rst.).195 F 1.833(These are pro)33.336 375 R
1.833(vided by the standard library to initialize v)-.195 F 1.833
(arious modules of the library)-.325 F(,)-.845 E
(such as the stdio subsystem.)33.336 390 Q .637(During e)33.336 420 R
-.195(xe)-.195 G .636(c, some attrib).195 F .636
(utes of the process are retained for the ne)-.26 F .636
(xt program, and others)-.195 F 1.612(are reset.)33.336 435 R 1.613
(Of primary importance to this discussion is the f)8.113 F 1.613
(act that the virtual memory)-.13 F .027(space is reset to a fresh stat\
e for the incoming program, while the set of open \214les, current)
33.336 450 R(directory)33.336 465 Q 7.437(,p)-.845 G 4.187
(rocess id, parent process id, uid, and gid are retained across the e)
-7.437 F -.195(xe)-.195 G(c).195 E(boundary)33.336 480 Q(.)-.845 E/F3 13
/Times-Bold@0 SF(Exec system call)222.206 510 Q F2(The)33.336 540 Q F1
(exec)5.674 E F2 2.424(system call replaces the currently running progr\
am with another program.)5.674 F 2.84(There are actually se)33.336 555 R
-.195(ve)-.325 G 2.84(ral v).195 F 2.84(ariants of the)-.325 F F1(exec)
6.09 E F2 2.84(call, and under the Linux operating)6.09 F 2.088(system,\
 most are actually C library wrappers for the underlying system call, w\
hich is)33.336 570 R F1(execve)33.336 585 Q F2(.)A/F4 12/Courier@0 SF
(int execve \(char)40.536 600 Q(*path, char *argv [],char *envp[]\);)
14.4 E(int execv \(char *path, char *argv[]\);)40.536 615 Q
(int execvp \(char *file, char *argv[]\);)40.536 630 Q
(int execl \(char *path, char *arg, ...\);)40.536 645 Q
(int execlp \(char *file, char *arg, ...\);)40.536 660 Q
(int execle \(char *path, char *arg , ...,char * envp[]\);)40.536 675 Q
F2 .028(The ')33.336 696 R .028(l' v)-.13 F .028(ariants accept the ar)
-.325 F .028(gv v)-.234 F .028(ector of the ne)-.195 F 3.279(wp)-.325 G
.029(rogram in terms of a v)-3.279 F .029(ariable ar)-.325 F(gument)
-.234 E .38(list, terminated by NULL.)33.336 711 R .38(The ')6.88 F .38
(v' v)-.65 F .38(ariants, on the other hand, tak)-.325 F 3.629(eav)-.13
G(ector)-3.824 E 6.879(.A)-.715 G .379(lthough it)-6.879 F 2.176(is con)
33.336 726 R -.195(ve)-.52 G 2.176(ntion that).195 F F1(argv[0])5.426 E
F2 2.177(is the name of the program being in)5.426 F -.26(vo)-.52 G -.13
(ke).26 G 2.177(d, it is entirely).13 F
(possible for the caller to "lie" to the ne)33.336 741 Q
(xt program about)-.195 E F1(argv[0])3.25 E F2(!)A 0 Cg EP
%%Page: 5 5
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 3/pg 5)73.998 E(\2512016 Jef)144.405 E 2.25(fH)-.225 G(akner)-2.25
E/F1 13/Times-Roman@0 SF .96(The \214rst ar)33.336 120 R .96
(gument to an)-.234 F 4.21(ye)-.195 G -.195(xe)-4.405 G 4.21(cc).195 G
.959(all is the name of the program to e)-4.21 F -.195(xe)-.195 G 4.209
(cute. The).195 F -.325(va)4.209 G(riants).325 E .799
(without 'p' require a speci\214c pathname \(e.g. "/bin/ls"\).)33.336
135 R .799(The 'p' v)7.299 F .799(ariants will also accept)-.325 F 4.129
(an unquali\214ed name \("ls"\) and will search the components of the c\
olon-delimited)33.336 150 R(en)33.336 165 Q .235(vironment v)-.52 F
(ariable)-.325 E/F2 13/Courier@0 SF(PATH)3.485 E F1 .236(until an e)
3.486 F -.195(xe)-.195 G .236
(cutable \214le with that name is found \(this action is).195 F
(performed by the standard C library)33.336 180 Q 3.25(,n)-.845 G
(ot the k)-3.25 E(ernel\).)-.13 E/F3 13/Times-Bold@0 SF(Exec err)235.148
210 Q(ors)-.234 E F1 .799(The in)33.336 246 R -.26(vo)-.52 G .799
(king user must ha).26 F 1.189 -.195(ve exe)-.26 H .799
(cute permission for the e).195 F -.195(xe)-.195 G .799(cutable \214le.)
.195 F .799(This means not)7.299 F 2.922(only that the \214le has e)
33.336 261 R -.195(xe)-.195 G 2.922(cute permission set for the user)
.195 F 6.173(,b)-.52 G 2.923(ut also that all directory)-6.433 F .766
(components in the path to that \214le are tra)33.336 276 R -.195(ve)
-.26 G .766(rsable \(e).195 F -.195(xe)-.195 G .766
(cute permission is granted\).).195 F(Read)7.266 E(permission on the e)
33.336 291 Q -.195(xe)-.195 G
(cutable \214le \(or intermediate directories\) is not required for e)
.195 E -.195(xe)-.195 G(c.).195 E .872(The e)33.336 312 R -.195(xe)-.195
G .873(cutable \214le must be of the correct format to load on this ope\
rating system.).195 F(This)7.373 E 2.861(means that the binary processo\
r architecture, addressing model, run-time model, and)33.336 327 R .324
(other issues must be compatible.)33.336 342 R .324(I.e. the e)6.824 F
-.195(xe)-.195 G .324(cutable must ha).195 F .714 -.195(ve e)-.26 H .324
(ither been compiled on a).195 F .801(similar system, or ha)33.336 357 R
1.191 -.195(ve b)-.26 H .801(een cross-compiled with the tar).195 F .8
(get system type in mind.)-.234 F .8(E.g. a)7.3 F -.52(Wi)33.336 372 S
(ndo).52 E 2.752(ws .EXE \214le can not be run on a Linux system, e)
-.325 F -.195(ve)-.325 G 6.002(ni).195 G 6.002(fb)-6.002 G 2.752
(oth are 64-bit X86)-6.002 F .102(processors, because the run-time en)
33.336 387 R .102(vironment is not compatible \(b)-.52 F .102
(ut there are tools which)-.26 F .719(interpose the correct en)33.336
402 R .719(vironment and allo)-.52 F 3.969(wW)-.325 G(indo)-4.489 E .72
(ws programs to run under Linux, and)-.325 F(vice-v)33.336 417 Q 3.65
(ersa\). A)-.195 F .4(Linux a.out \214le compiled for an ARM processor \
is not going to run on an)3.65 F .296(X86 processor)33.336 432 R 6.796
(.T)-.715 G .296(he k)-6.796 F .296(ernel determines e)-.13 F -.195(xe)
-.195 G .297(cutable format compatability by e).195 F .297(xamining the)
-.195 F(header of the a.out \214le.)33.336 447 Q 1.09(There are se)
33.336 468 R -.195(ve)-.325 G 1.09
(ral other errors which might cause the e).195 F -.195(xe)-.195 G 4.339
(cs).195 G 1.089(ystem call to f)-4.339 F 1.089(ail, which are)-.13 F
(documented by)33.336 483 Q F2(man 2 execve)3.25 E F1(.)A 2.496(If e)
33.336 504 R -.195(xe)-.195 G 5.746(ci).195 G 5.746(ss)-5.746 G 2.496
(uccessful, from the standpoint of the calling program, it appears ne)
-5.746 F -.195(ve)-.325 G 5.746(rt).195 G(o)-5.746 E 4.202(return. On)
33.336 519 R(error)4.202 E 4.202(,e)-.52 G -.195(xe)-4.397 G 4.202(cr)
.195 G .952(eturns -1.)-4.202 F .952(The k)7.452 F .951
(ernel does not get to the point of discarding the)-.13 F .246
(old address space until it has done enough checking to ha)33.336 534 R
.636 -.195(ve r)-.26 H .246(easonable assurance that the).195 F(ne)
33.336 549 Q 4.018(we)-.325 G -.195(xe)-4.213 G .768
(cutable can actually be loaded.).195 F .768(Otherwise there w)7.268 F
.768(ould be no calling program to)-.13 F(return -1 to!)33.336 564 Q F3
(Executing via an inter)188.985 594 Q(pr)-.13 E(eter)-.234 E F1 5.507
(The e)33.336 624 R -.195(xe)-.195 G 5.507
(cutable must either be a nati).195 F 5.897 -.195(ve b)-.325 H 5.508
(inary \(consisting of machine language).195 F 1.556
(instructions that can be e)33.336 639 R -.195(xe)-.195 G 1.555
(cuted by that system\), or an interpreted script.).195 F 1.555
(In the latter)8.055 F(case, the e)33.336 654 Q -.195(xe)-.195 G
(cutable \214le will be).195 E(gin with:)-.195 E/F4 10/Courier@0 SF
(#!/path/to/interpreter arg)33.336 666 Q F2(/path/to/interpreter)33.336
681 Q F1 1.475(must be a quali\214ed path \(the P)4.724 F -1.443(AT)
-1.196 G 4.725(He)1.443 G -.52(nv)-4.725 G 1.475(ironment v).52 F
(ariable)-.325 E 2.871(will not be searched\) and must be a binary \214\
le \(not another interpreter\).)33.336 696 R 2.87(It will be)9.37 F
-.195(exe)33.336 711 S .691(cuted with ar).195 F .691(gv[0] set to ")
-.234 F F2(interpreter)A F1 3.941("\()C .691
(i.e. the last component of the interpreter)-3.941 F 4.213
(pathname\). If)33.336 726 R F2(arg)4.213 E F1 4.213(,w)C .963(hich is \
optional, is present in the #! line, it will be inserted as the)-4.213 F
(ne)33.336 741 Q .302(xt ar)-.195 F .302(gument \(ar)-.234 F 3.552
(gv[1]\). Then)-.234 F .302(the entire ar)3.552 F .302(gv v)-.234 F .302
(ector of the in)-.195 F -.26(vo)-.52 G -.13(ke).26 G 3.552(dp).13 G
.302(rogram is appended)-3.552 F 0 Cg EP
%%Page: 6 6
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 3/pg 6)73.998 E(\2512016 Jef)144.405 E 2.25(fH)-.225 G(akner)-2.25
E/F1 13/Times-Roman@0 SF 2.589(to ar)33.336 120 R(gv)-.234 E 9.089(.T)
-.845 G 2.589(his means that the name of the script \214le becomes ar)
-9.089 F 2.588(gv[1] \(ar)-.234 F 2.588(gv[2] if the)-.234 F(optional)
33.336 135 Q/F2 13/Courier@0 SF(arg)4.602 E F1 -.13(wa)4.602 G 4.602(ss)
.13 G 1.352(peci\214ed in the #! line\), and, in a break with tradition\
, it is the fully)-4.602 F 2.374(quali\214ed pathname of the script \
\214le, rather than just the base name.)33.336 150 R 2.374(This allo)
8.874 F 2.374(ws the)-.325 F(interpreter to open this \214le and be)
33.336 165 Q(gin to interpret \(e)-.195 E -.195(xe)-.195 G(cute\) it.)
.195 E -.195(Fo)33.336 186 S 4.374(rh).195 G 1.124
(istorical reasons, if the e)-4.374 F -.195(xe)-.195 G 1.124
(cutable \214le has e).195 F -.195(xe)-.195 G 1.125(cute permissions, b)
.195 F 1.125(ut is not a binary)-.26 F 1.467
(\214le, and does not contain an e)33.336 201 R 1.466
(xplicit #! interpreter in)-.195 F -.26(vo)-.52 G 1.466
(cation, it is interpreted with the).26 F
(shell /bin/sh, as if it had started with)33.336 216 Q F2(#!/bin/sh)3.25
E F1(.)A .997(Linux and most other UNIX systems support)33.336 237 R/F3
13/Times-Bold@0 SF .998(binary inter)4.248 F(pr)-.13 E(eters)-.234 E F1
7.498(.A)C .998(special section of)-3.25 F(the)33.336 252 Q F2(a.out)
6.533 E F1 3.283(\214le directs the k)6.533 F 3.283(ernel to e)-.13 F
-.195(xe)-.195 G 6.532(cas).195 G 3.282(peci\214ed interpreter)-6.532 F
6.532(,m)-.52 G 3.282(uch lik)-6.532 F 6.532(et)-.13 G(he)-6.532 E F2
(#!)6.532 E F1 .383(mechanism abo)33.336 267 R -.195(ve)-.195 G 3.633
(,b).195 G .383(ut no)-3.893 F 3.633(wt)-.325 G .383
(he a.out \214le can remain a binary \214le instead of a line-by-line)
-3.633 F(te)33.336 282 Q .739(xt \214le such as a shell, perl, a)-.195 F
.739(wk, p)-.195 F .739(ython, etc. script.)-.13 F .739
(The binary interpreter mechanism)7.239 F .015(is hea)33.336 297 R .015
(vily used: most commands are dynamically link)-.26 F .015
(ed and the dynamic link)-.13 F(er)-.13 E F2(ld.so)3.265 E F1(is)3.265 E
1.376(in f)33.336 312 R 1.375(act the program that completes the e)-.13
F -.195(xe)-.195 G 4.625(cp).195 G 4.625(rocess. Ho)-4.625 F(we)-.325 E
-.195(ve)-.325 G 2.415 -.52(r, t).195 H 1.375(his detail is dif).52 F
1.375(\214cult to)-.325 F -.195(ex)33.336 327 S
(plain at this point until we ha).195 E .39 -.195(ve ex)-.26 H
(plored memory mappings in Unit #5.).195 E F3(The En)218.417 357 Q(vir)
-.52 E(onment)-.234 E F1 .099(The en)33.336 393 R .099
(vironment is a set of strings of the form)-.52 F F2(variable=value)3.35
E F1 .1(which is used to pass)3.35 F 1.876
(along information from one program to the ne)33.336 408 R 5.125
(xt. The)-.195 F(en)5.125 E 1.875(vironment represents)-.52 F F3(opaque)
5.125 E(data)33.336 423 Q F1 1.9(to the k)5.15 F 1.9(ernel, i.e. the k)
-.13 F 1.901(ernel does not inspect or interpret its contents.)-.13 F
1.901(There are)8.401 F .972(UNIX con)33.336 438 R -.195(ve)-.52 G .971
(ntions that en).195 F .971(vironment v)-.52 F .971(ariables ha)-.325 F
1.361 -.195(ve u)-.26 H .971(ppercase names, and certain names).195 F
(ha)33.336 453 Q .447 -.195(ve c)-.26 H .057(ertain functions.).195 F
-1.196(PA)6.557 G .057(TH contains the search patch for e)-.247 F -.195
(xe)-.195 G 3.308(cutables. PS1).195 F .058(contains the)3.308 F .104
(shell prompt string.)33.336 468 R .104
(TERM is the terminal type of the controlling terminal.)6.604 F .104
(HOME is the)6.604 F 3.954(home directory of the current user)33.336 483
R 10.454(.T)-.715 G 3.954(he shell command)-10.454 F F2(env)7.204 E F1
3.955(displays the current)7.204 F(en)33.336 498 Q 1.931(vironment v)
-.52 F 1.931(ariables and v)-.325 F 5.181(alues. The)-.325 F 1.93
(shell command)5.18 F F2 1.93(export VARIABLE=value)5.18 F F1
(creates a ne)33.336 513 Q 3.25(we)-.325 G -.52(nv)-3.25 G(ironment v)
.52 E(ariable.)-.325 E 1.213(The standard C library routines)33.336 543
R F2(getenv)4.463 E F1(and)4.464 E F2(putenv)4.464 E F1 1.214
(can be used to query and create)4.464 F(en)33.336 558 Q(vironment v)
-.52 E(ariable settings.)-.325 E(The entire v)6.5 E(ector is also a)
-.195 E -.325(va)-.26 G(ilable as the global v).325 E(ariable:)-.325 E
/F4 10/Courier@0 SF(extern char **environ;)33.336 570 Q F1 5.196
(The 'e' v)33.336 585 R 5.196(ariants of e)-.325 F -.195(xe)-.195 G
8.446(ca).195 G 5.196(ccept a v)-8.446 F(ector)-.195 E 8.446(,a)-.52 G
5.195(nalogous to)-8.446 F F2(argv[])8.445 E F1 8.445(,s)C 5.195
(pecifying the)-8.445 F F3(en)33.336 600 Q(vir)-.52 E(onment)-.234 E F1
5.487(of the ne)8.737 F 8.737(wp)-.325 G 8.737(rogram. The)-8.737 F
5.487(non-'e' v)8.737 F 5.487(ariants pass along the current)-.325 F(en)
33.336 615 Q(vironment.)-.52 E .332(The en)33.336 645 R .332
(vironment is established by the k)-.52 F .332
(ernel prior to calling the program')-.13 F 3.582(ss)-.715 G .332
(tart function,)-3.582 F 2.73
(and has the same NULL-terminated array of strings format as ar)33.336
660 R(gv)-.234 E 9.23(.S)-.845 G 2.73(torage for the)-9.23 F(en)33.336
675 Q .776(vironment and ar)-.52 F .776(gument v)-.234 F .776
(ectors is allocated by the k)-.195 F .775
(ernel at the high end of the stack)-.13 F(re)33.336 690 Q(gion.)-.195 E
F3(Starting a new pr)177.525 711 Q(ocess with f)-.234 E(ork)-.325 E 0 Cg
EP
%%Page: 7 7
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 3/pg 7)73.998 E(\2512016 Jef)144.405 E 2.25(fH)-.225 G(akner)-2.25
E/F1 13/Times-Roman@0 SF .354(While the)33.336 120 R/F2 13/Courier@0 SF
(exec)3.604 E F1 .354
(system call replaces the currently running program with a ne)3.604 F
3.604(wp)-.325 G(rogram,)-3.604 E 1.7
(it does so inside the same virtual computer container \(or process\).)
33.336 135 R 1.7(The method which)8.2 F 1.399(UNIX uses to create ne)
33.336 150 R 4.649(wp)-.325 G 1.4
(rocesses is often confusing at \214rst, because it creates a ne)-4.649
F(w)-.325 E .582(process which is a cop)33.336 165 R 3.832(yo)-.13 G
3.832(ft)-3.832 G .582(he current process at that moment, b)-3.832 F
.581(ut does NO)-.26 F 3.831(Tc)-.52 G .581(hange the)-3.831 F 1.412
(running program.)33.336 180 R(The)7.912 E F2(fork)4.662 E F1 1.412
(system call is used to create a ne)4.662 F 4.663(wp)-.325 G 4.663
(rocess. The)-4.663 F(process)4.663 E 3.603(which called)33.336 195 R F2
(fork)6.853 E F1 3.603(is the)6.853 F/F3 13/Times-Bold@0 SF(par)6.853 E
(ent)-.234 E F1 3.603(process, and the ne)6.853 F -.845(w,)-.325 G F3
(child)7.698 E F1 3.603(process is an)6.853 F F3(exact)6.852 E
(duplicate)33.336 210 Q F1 3.497(of the parent process,)6.747 F 3.497
(including the entire virtual address space and the)9.997 F(re)33.336
225 Q(gister set of the virtual cpu, with three e)-.195 E(xceptions:)
-.195 E 3.25<8354>33.336 240 S(he child process will be assigned a ne)
-3.25 E 3.25(wp)-.325 G(rocess id.)-3.25 E 3.25<8354>33.336 255 S(he)
-3.25 E F3(par)3.25 E(ent pr)-.234 E(ocess id \(ppid\))-.234 E F1
(of the child will be set to the pid of the parent.)3.25 E 5.284<8354>
33.336 270 S(he)-5.284 E F2(fork)5.284 E F1 2.034(system call will retu\
rn 0 to the child process, and will return the child')5.284 F(s)-.715 E
(process id to the parent.)33.336 285 Q 2.238
(Note that fork does not pro)33.336 306 R 2.238
(vide for a change in the currently running program.)-.195 F(This)8.738
E 1.24(results in the strange programmatic sensation of calling a funct\
ion which returns)33.336 321 R F3(twice)4.49 E F1(.)A 1.603(Another w)
33.336 336 R 1.603(ay to vie)-.13 F 4.854(wt)-.325 G 1.604
(his is that the child process comes to life e)-4.854 F -.195(xe)-.195 G
1.604(cuting at the e).195 F(xact)-.195 E
(point of returning from the fork system call.)33.336 351 Q 1.111
(The fork system call is f)33.336 372 R 1.111(airly unique to UNIX.)-.13
F 1.11(Most other operating systems pro)7.61 F 1.11(vide a)-.195 F 1.052
(system call that combines fork with)33.336 387 R F2(exec)4.302 E F1
1.052(to both create a ne)4.302 F 4.302(wp)-.325 G 1.053
(rocess and associate it)-4.302 F 1.075(with a ne)33.336 402 R 4.324(wp)
-.325 G 1.074(rogram at the same time, i.e. a "spa)-4.324 F 1.074
(wn" system call.)-.195 F 1.074(This w)7.574 F 1.074(ould be useful)-.13
F 1.511(because, as we')33.336 417 R 1.511
(ll see, the most common system call to follo)-.13 F 4.762(wf)-.325 G
1.512(ork is e)-4.762 F -.195(xe)-.195 G 4.762(c. W).195 F(e')-1.04 E
1.512(ll also)-.13 F(see, in later units, ho)33.336 432 Q 3.25(wt)-.325
G(he UNIX k)-3.25 E(ernel optimizes this.)-.13 E/F4 10/Courier@0 SF
(int i;)33.336 444 Q(f\(\))33.336 468 Q({)33.336 480 Q(int pid;)39.336
492 Q(i=10;)81.336 504 Q(switch \(pid=fork\(\)\))81.336 516 Q({)81.336
528 Q(case -1:)87.336 540 Q(perror\("fork failed"\);exit\(1\);)129.336
552 Q 6(break; /*NOTREACHED*/)129.336 564 R(case 0:)87.336 576 Q
(printf\("In child\\\\n"\);)129.336 588 Q(i=1;)129.336 600 Q(break;)
129.336 612 Q(default:)87.336 624 Q
(printf\("In parent, new pid is %d\\n",pid\);)129.336 636 Q(break;)
129.336 648 Q(})81.336 660 Q(printf\("i==%d\\\\n",i\);)81.336 672 Q(})
33.336 684 Q F1 .103(If fork f)33.336 705 R .103
(ails, then no child process has been created, and a v)-.13 F .102
(alue of -1 \(which can ne)-.325 F -.195(ve)-.325 G 3.352(rb).195 G(e)
-3.352 E 3.25(al)33.336 720 S -2.925 -.195(eg a)-3.25 H 3.25(lp).195 G
(id as pids are positi)-3.25 E -.195(ve)-.325 G 3.25(\)i).195 G 3.25(sr)
-3.25 G(eturned.)-3.25 E .699(Although the child is an e)33.336 741 R
.699(xact cop)-.195 F 3.949(yo)-.13 G 3.949(ft)-3.949 G .7
(he parent, it is nonetheless an independent entity)-3.949 F 0 Cg EP
%%Page: 8 8
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 3/pg 8)73.998 E(\2512016 Jef)144.405 E 2.25(fH)-.225 G(akner)-2.25
E/F1 13/Times-Roman@0 SF 1.663
(and has an independent virtual memory space which starts of)33.336 120
R 4.913(fa)-.325 G 4.913(sa)-4.913 G 4.913(ne)-4.913 G 1.663(xact cop)
-5.108 F 4.913(yo)-.13 G 4.913(ft)-4.913 G(he)-4.913 E(parent')33.336
135 Q 5.875(s\()-.715 G(ag)-5.875 E 2.625
(ain, we will see in a later unit ho)-.065 F 5.875(wt)-.325 G 2.625
(he k)-5.875 F 2.625(ernel optimizes this and a)-.13 F -.26(vo)-.26 G
(ids).26 E .012(actually cop)33.336 150 R .012(ying ph)-.13 F .012
(ysical memory until it is necessary\).)-.065 F .012
(Therefore, in the e)6.512 F .011(xample abo)-.195 F -.195(ve)-.195 G(,)
.195 E(the child')33.336 165 Q 3.25(sm)-.715 G(odi\214cation of v)-3.25
E(ariable)-.325 E/F2 13/Courier@0 SF(i)3.25 E F1(does not af)3.25 E
(fect the parent')-.325 E 3.25(sc)-.715 G(op)-3.25 E -.845(y.)-.13 G
.519(Note that is)33.336 195 R/F3 13/Times-Bold@0 SF(indeterminate)3.769
E F1(whether)3.769 E 3.769(,a)-.52 G .519
(fter the fork system call completes, the parent runs)-3.769 F 6.322(\
\214rst, the child runs \214rst, or \(on a multiprocessor system\) both\
 processes run)33.336 210 R(simultaneously)33.336 225 Q 6.5(.P)-.845 G
(rogrammers should not assume an)-6.5 E 3.25(yp)-.195 G(articular case.)
-3.25 E F3(The \214le table and \214le descriptors)176.511 255 Q F1
2.456(There are in f)33.336 291 R 2.456(act tw)-.13 F 5.706(ol)-.13 G
2.456(ayers of tables between the \214le descriptor numbers used by a)
-5.706 F 1.284(process for I/O calls \(such as open, read, write, etc.\
\) and the actual \214les.)33.336 306 R 1.284(Each process)7.784 F .013
(maintains a \214le descriptor table, the entries of which in turn poin\
t to k)33.336 321 R .013(ernel data structures)-.13 F
(which are called \(in the Linux k)33.336 336 Q(ernel\))-.13 E F2
(struct file)3.25 E F1(.)A 0 Cg EP
%%Page: 9 9
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 3/pg 9)73.998 E(\2512016 Jef)144.405 E 2.25(fH)-.225 G(akner)-2.25
E 0 0 468 524 -528.733 592 33.336 648.733 PBEGIN
%%BeginDocument: filetables.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: filetables.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Tue Feb  7 23:32:28 2012
%%For: hak@lex ()
%%BoundingBox: 0 0 524 592
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 592 moveto 0 0 lineto 524 0 lineto 524 592 lineto closepath clip newpath
-41.0 612.7 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/reencdict 12 dict def /ReEncode { reencdict begin
/newcodesandnames exch def /newfontname exch def /basefontname exch def
/basefontdict basefontname findfont def /newfont basefontdict maxlength dict def
basefontdict { exch dup /FID ne { dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put } ifelse } { pop pop } ifelse } forall
newfont /FontName newfontname put newcodesandnames aload pop
128 1 255 { newfont /Encoding get exch /.notdef put } for
newcodesandnames length 2 idiv { newfont /Encoding get 3 1 roll put } repeat
newfontname newfont definefont pop end } def
/isovec [
8#055 /minus 8#200 /grave 8#201 /acute 8#202 /circumflex 8#203 /tilde
8#204 /macron 8#205 /breve 8#206 /dotaccent 8#207 /dieresis
8#210 /ring 8#211 /cedilla 8#212 /hungarumlaut 8#213 /ogonek 8#214 /caron
8#220 /dotlessi 8#230 /oe 8#231 /OE
8#240 /space 8#241 /exclamdown 8#242 /cent 8#243 /sterling
8#244 /currency 8#245 /yen 8#246 /brokenbar 8#247 /section 8#250 /dieresis
8#251 /copyright 8#252 /ordfeminine 8#253 /guillemotleft 8#254 /logicalnot
8#255 /hyphen 8#256 /registered 8#257 /macron 8#260 /degree 8#261 /plusminus
8#262 /twosuperior 8#263 /threesuperior 8#264 /acute 8#265 /mu 8#266 /paragraph
8#267 /periodcentered 8#270 /cedilla 8#271 /onesuperior 8#272 /ordmasculine
8#273 /guillemotright 8#274 /onequarter 8#275 /onehalf
8#276 /threequarters 8#277 /questiondown 8#300 /Agrave 8#301 /Aacute
8#302 /Acircumflex 8#303 /Atilde 8#304 /Adieresis 8#305 /Aring
8#306 /AE 8#307 /Ccedilla 8#310 /Egrave 8#311 /Eacute
8#312 /Ecircumflex 8#313 /Edieresis 8#314 /Igrave 8#315 /Iacute
8#316 /Icircumflex 8#317 /Idieresis 8#320 /Eth 8#321 /Ntilde 8#322 /Ograve
8#323 /Oacute 8#324 /Ocircumflex 8#325 /Otilde 8#326 /Odieresis 8#327 /multiply
8#330 /Oslash 8#331 /Ugrave 8#332 /Uacute 8#333 /Ucircumflex
8#334 /Udieresis 8#335 /Yacute 8#336 /Thorn 8#337 /germandbls 8#340 /agrave
8#341 /aacute 8#342 /acircumflex 8#343 /atilde 8#344 /adieresis 8#345 /aring
8#346 /ae 8#347 /ccedilla 8#350 /egrave 8#351 /eacute
8#352 /ecircumflex 8#353 /edieresis 8#354 /igrave 8#355 /iacute
8#356 /icircumflex 8#357 /idieresis 8#360 /eth 8#361 /ntilde 8#362 /ograve
8#363 /oacute 8#364 /ocircumflex 8#365 /otilde 8#366 /odieresis 8#367 /divide
8#370 /oslash 8#371 /ugrave 8#372 /uacute 8#373 /ucircumflex
8#374 /udieresis 8#375 /yacute 8#376 /thorn 8#377 /ydieresis] def
/Times-Roman /Times-Roman-iso isovec ReEncode
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 100
% Polyline
7.500 slw
n 1200 900 m 1800 900 l 1800 3600 l 1200 3600 l
 cp gs col0 s gr 
% Polyline
n 1200 1200 m
 1800 1200 l gs col0 s gr 
% Polyline
n 1200 1500 m
 1800 1500 l gs col0 s gr 
% Polyline
n 1200 1800 m
 1800 1800 l gs col0 s gr 
% Polyline
n 1200 2100 m
 1800 2100 l gs col0 s gr 
% Polyline
n 1200 2400 m
 1800 2400 l gs col0 s gr 
% Polyline
n 1200 2700 m
 1800 2700 l gs col0 s gr 
% Polyline
n 1200 3000 m
 1800 3000 l gs col0 s gr 
% Polyline
n 1200 3300 m
 1800 3300 l gs col0 s gr 
% Polyline
n 1200 4200 m 1800 4200 l 1800 6900 l 1200 6900 l
 cp gs col0 s gr 
% Polyline
n 1200 4500 m
 1800 4500 l gs col0 s gr 
% Polyline
n 1200 4800 m
 1800 4800 l gs col0 s gr 
% Polyline
n 1200 5100 m
 1800 5100 l gs col0 s gr 
% Polyline
n 1200 5400 m
 1800 5400 l gs col0 s gr 
% Polyline
n 1200 5700 m
 1800 5700 l gs col0 s gr 
% Polyline
n 1200 6000 m
 1800 6000 l gs col0 s gr 
% Polyline
n 1200 6300 m
 1800 6300 l gs col0 s gr 
% Polyline
n 1200 6600 m
 1800 6600 l gs col0 s gr 
% Polyline
n 1200 7500 m 1800 7500 l 1800 10200 l 1200 10200 l
 cp gs col0 s gr 
% Polyline
n 1200 7800 m
 1800 7800 l gs col0 s gr 
% Polyline
n 1200 8100 m
 1800 8100 l gs col0 s gr 
% Polyline
n 1200 8400 m
 1800 8400 l gs col0 s gr 
% Polyline
n 1200 8700 m
 1800 8700 l gs col0 s gr 
% Polyline
n 1200 9000 m
 1800 9000 l gs col0 s gr 
% Polyline
n 1200 9300 m
 1800 9300 l gs col0 s gr 
% Polyline
n 1200 9600 m
 1800 9600 l gs col0 s gr 
% Polyline
n 1200 9900 m
 1800 9900 l gs col0 s gr 
/Times-Roman-iso ff 200.00 scf sf
4950 6075 m
gs 1 -1 sc (f_mode:R  f_flags:0) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4950 6315 m
gs 1 -1 sc (f_pos:111) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4950 6555 m
gs 1 -1 sc (f_count:1) col0 sh gr
% Polyline
n 8205 900 m 8100 900 8100 1695 105 arcto 4 {pop} repeat
  8100 1800 9195 1800 105 arcto 4 {pop} repeat
  9300 1800 9300 1005 105 arcto 4 {pop} repeat
  9300 900 8205 900 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
n 8205 2100 m 8100 2100 8100 2895 105 arcto 4 {pop} repeat
  8100 3000 9195 3000 105 arcto 4 {pop} repeat
  9300 3000 9300 2205 105 arcto 4 {pop} repeat
  9300 2100 8205 2100 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
n 8205 5400 m 8100 5400 8100 6195 105 arcto 4 {pop} repeat
  8100 6300 9195 6300 105 arcto 4 {pop} repeat
  9300 6300 9300 5505 105 arcto 4 {pop} repeat
  9300 5400 8205 5400 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
gs  clippath
4624 2103 m 4643 2046 l 4499 1998 l 4604 2065 l 4480 2055 l cp
eoclip
n 1575 1050 m
 4620 2070 l gs col0 s gr gr

% arrowhead
n 4480 2055 m 4604 2065 l 4499 1998 l  col0 s
% Polyline
gs  clippath
4628 2162 m 4641 2104 l 4493 2070 l 4604 2126 l 4480 2128 l cp
eoclip
n 1500 1425 m
 4620 2130 l gs col0 s gr gr

% arrowhead
n 4480 2128 m 4604 2126 l 4493 2070 l  col0 s
% Polyline
gs  clippath
4601 2011 m 4608 1951 l 4457 1935 l 4574 1978 l 4451 1995 l cp
eoclip
n 1500 1650 m
 4590 1980 l gs col0 s gr gr

% arrowhead
n 4451 1995 m 4574 1978 l 4457 1935 l  col0 s
% Polyline
gs  clippath
4746 1225 m 4732 1167 l 4585 1201 l 4709 1204 l 4598 1260 l cp
eoclip
n 1500 1950 m
 4725 1200 l gs col0 s gr gr

% arrowhead
n 4598 1260 m 4709 1204 l 4585 1201 l  col0 s
% Polyline
gs  clippath
4648 3993 m 4677 3940 l 4543 3868 l 4635 3952 l 4515 3921 l cp
eoclip
n 1500 2250 m
 4650 3960 l gs col0 s gr gr

% arrowhead
n 4515 3921 m 4635 3952 l 4543 3868 l  col0 s
% Polyline
gs  clippath
4709 2236 m 4675 2186 l 4550 2272 l 4666 2229 l 4584 2322 l cp
eoclip
n 1500 4425 m
 4680 2220 l gs col0 s gr gr

% arrowhead
n 4584 2322 m 4666 2229 l 4550 2272 l  col0 s
% Polyline
gs  clippath
4739 2265 m 4704 2216 l 4582 2307 l 4697 2260 l 4618 2355 l cp
eoclip
n 1500 4650 m
 4710 2250 l gs col0 s gr gr

% arrowhead
n 4618 2355 m 4697 2260 l 4582 2307 l  col0 s
% Polyline
gs  clippath
4770 2293 m 4732 2247 l 4616 2345 l 4727 2291 l 4654 2391 l cp
eoclip
n 1500 5025 m
 4740 2280 l gs col0 s gr gr

% arrowhead
n 4654 2391 m 4727 2291 l 4616 2345 l  col0 s
% Polyline
gs  clippath
4712 1326 m 4665 1289 l 4572 1408 l 4670 1333 l 4619 1445 l cp
eoclip
n 1575 5250 m
 4680 1320 l gs col0 s gr gr

% arrowhead
n 4619 1445 m 4670 1333 l 4572 1408 l  col0 s
% Polyline
gs  clippath
4676 4131 m 4651 4076 l 4513 4139 l 4635 4117 l 4538 4194 l cp
eoclip
n 1500 5550 m
 4650 4110 l gs col0 s gr gr

% arrowhead
n 4538 4194 m 4635 4117 l 4513 4139 l  col0 s
% Polyline
n 8205 6900 m 8100 6900 8100 7695 105 arcto 4 {pop} repeat
  8100 7800 9195 7800 105 arcto 4 {pop} repeat
  9300 7800 9300 7005 105 arcto 4 {pop} repeat
  9300 6900 8205 6900 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
gs  clippath
4752 5944 m 4724 5891 l 4590 5963 l 4710 5933 l 4618 6016 l cp
eoclip
n 1500 7650 m
 4725 5925 l gs col0 s gr gr

% arrowhead
n 4618 6016 m 4710 5933 l 4590 5963 l  col0 s
% Polyline
gs  clippath
4669 7452 m 4659 7392 l 4510 7418 l 4634 7428 l 4520 7477 l cp
eoclip
n 1500 7950 m
 4650 7425 l gs col0 s gr gr

% arrowhead
n 4520 7477 m 4634 7428 l 4510 7418 l  col0 s
% Polyline
gs  clippath
4597 7525 m 4581 7467 l 4435 7506 l 4559 7504 l 4450 7564 l cp
eoclip
n 1500 8325 m
 4575 7500 l gs col0 s gr gr

% arrowhead
n 4450 7564 m 4559 7504 l 4435 7506 l  col0 s
% Polyline
gs  clippath
4742 5078 m 4697 5038 l 4596 5150 l 4699 5082 l 4640 5191 l cp
eoclip
n 1500 8625 m
 4710 5070 l gs col0 s gr gr

% arrowhead
n 4640 5191 m 4699 5082 l 4596 5150 l  col0 s
% Polyline
n 4800 900 m 6600 900 l 6600 1800 l 4800 1800 l
 cp gs col0 s gr 
% Polyline
n 4800 1800 m 6600 1800 l 6600 2700 l 4800 2700 l
 cp gs col0 s gr 
% Polyline
n 4800 3600 m 6600 3600 l 6600 4500 l 4800 4500 l
 cp gs col0 s gr 
% Polyline
n 4800 4500 m 6600 4500 l 6600 5400 l 4800 5400 l
 cp gs col0 s gr 
% Polyline
n 4800 7200 m 6600 7200 l 6600 8100 l 4800 8100 l
 cp gs col0 s gr 
% Polyline
n 4800 5775 m 6600 5775 l 6600 6675 l 4800 6675 l
 cp gs col0 s gr 
% Polyline
 [60] 0 sd
gs  clippath
8040 7530 m 8040 7470 l 7888 7470 l 8008 7500 l 7888 7530 l cp
eoclip
n 6225 7500 m
 8025 7500 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 7888 7530 m 8008 7500 l 7888 7470 l  col0 s
% Polyline
 [60] 0 sd
gs  clippath
8190 5955 m 8190 5895 l 8038 5895 l 8158 5925 l 8038 5955 l cp
eoclip
n 6225 5925 m
 8175 5925 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 8038 5955 m 8158 5925 l 8038 5895 l  col0 s
% Polyline
 [60] 0 sd
gs  clippath
8058 1800 m 8005 1772 l 7934 1907 l 8017 1815 l 7987 1935 l cp
eoclip
n 6375 4950 m
 8025 1800 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 7987 1935 m 8017 1815 l 7934 1907 l  col0 s
% Polyline
 [60] 0 sd
gs  clippath
8058 1502 m 8007 1471 l 7927 1600 l 8016 1514 l 7979 1632 l cp
eoclip
n 6375 4200 m
 8025 1500 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 7979 1632 m 8016 1514 l 7927 1600 l  col0 s
% Polyline
 [60] 0 sd
gs  clippath
8040 2430 m 8040 2370 l 7888 2370 l 8008 2400 l 7888 2430 l cp
eoclip
n 6225 2400 m
 8025 2400 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 7888 2430 m 8008 2400 l 7888 2370 l  col0 s
% Polyline
 [60] 0 sd
gs  clippath
8115 1455 m 8115 1395 l 7963 1395 l 8083 1425 l 7963 1455 l cp
eoclip
n 6150 1425 m
 8100 1425 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 7963 1455 m 8083 1425 l 7963 1395 l  col0 s
/Times-Roman-iso ff 200.00 scf sf
8250 1425 m
gs 1 -1 sc (/tmp/foo) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
8175 2700 m
gs 1 -1 sc (/dev/pts/3) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
8250 6075 m
gs 1 -1 sc (/tmp/bar) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
8325 7575 m
gs 1 -1 sc (/dev/pts/5) col0 sh gr
/Times-Roman-iso ff 233.33 scf sf
1500 525 m
gs 1 -1 sc (Per-Process) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 233.33 scf sf
1500 795 m
gs 1 -1 sc (File Descriptors) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 233.33 scf sf
5700 750 m
gs 1 -1 sc (struct file) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 233.33 scf sf
8700 750 m
gs 1 -1 sc (In-core inodes) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4950 1125 m
gs 1 -1 sc (f_mode: R  f_flags:0) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4950 1365 m
gs 1 -1 sc (f_pos:45) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4950 1605 m
gs 1 -1 sc (f_count:2) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4950 2025 m
gs 1 -1 sc (f_mode:RW f_flags:0) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4950 2265 m
gs 1 -1 sc (f_pos: N/A) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4950 2505 m
gs 1 -1 sc (f_count:6) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4950 4065 m
gs 1 -1 sc (f_pos:4000) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4950 4305 m
gs 1 -1 sc (f_count:2) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4950 4725 m
gs 1 -1 sc (f_mode:R  f_flags:0) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4950 4965 m
gs 1 -1 sc (f_pos:10) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4950 5205 m
gs 1 -1 sc (f_count:1) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4950 7425 m
gs 1 -1 sc (f_mode:RW  f_flags:0) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4950 7665 m
gs 1 -1 sc (f_pos: N/A) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4950 7905 m
gs 1 -1 sc (f_count:2) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4875 3825 m
gs 1 -1 sc (mode:W flags:APPEND) col0 sh gr
% here ends figure;
$F2psEnd
rs
showpage
%%EndDocument
end PEND/F1 13/Courier@0 SF(struct file)33.336 675.733 Q/F2 13
/Times-Roman@0 SF(contains man)3.25 E 3.25<798c>-.195 G 3.25
(elds. Right)-3.25 F(no)3.25 E 1.69 -.845(w, w)-.325 H 3.25(ea).845 G
(re concerned with the follo)-3.25 E(wing:)-.325 E<83>33.336 690.733 Q
F1(f_mode)3.25 E F2 3.25(:T)C(he mode under which the \214le w)-3.25 E
(as opened \(RDONL)-.13 E 3.354 -1.677(Y, W)-1.3 H -.52(RO)1.677 G(NL)
.52 E 3.354 -1.677(Y, R)-1.3 H -.39(DW)1.677 G(R\).).39 E<83>33.336
705.733 Q F1(f_flags)4.414 E F2 4.414(:T)C 1.164
(he remainder of the second ar)-4.414 F 1.163
(gument to the open system call.)-.234 F 1.163(There are)7.663 F(man)
33.336 720.733 Q 5.669(ye)-.195 G 2.419(soteric \215ags, such as the ab\
ility to request non-blocking I/O \(O_NOBLOCK\).)-5.669 F .802
(The only important one at this point in the course is)33.336 735.733 R
F1(O_APPEND)4.051 E F2 4.051(,w)C .801(hich causes all write)-4.051 F 0
Cg EP
%%Page: 10 10
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 3/pg 10)71.748 E(\2512016 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 13/Times-Roman@0 SF
(requests to \214rst seek to the current end of \214le.)33.336 120 Q<83>
33.336 135 Q/F2 13/Courier@0 SF(f_count)3.403 E F1 3.403(:T)C .153
(he reference count of ho)-3.403 F 3.403(wm)-.325 G(an)-3.403 E 3.403
(ye)-.195 G .153(ntries in process \214le descriptor tables are)-3.403 F
(pointing to this particular)33.336 150 Q F2(struct file)3.25 E F1(.)A
<83>33.336 165 Q F2(f_pos)3.25 E F1 3.25(:T)C(he byte of)-3.25 E
(fset in the \214le where the last read or write left of)-.325 E(f.)
-.325 E 4.472<8354>33.336 180 S 1.222
(hrough an intermediate data structure, the k)-4.472 F 1.222
(ernel can \214nd an in-memory cop)-.13 F 4.472(yo)-.13 G 4.472(ft)
-4.472 G(he)-4.472 E(inode for the \214le, which is necessary for actua\
lly performing read or write operations.)33.336 195 Q(The)33.336 225 Q
F2(f_pos)3.29 E F1 .04(\214eld maintains a)3.29 F/F3 13/Times-Bold@0 SF
(cursor)3.29 E F1 .04(into the \214le.)3.29 F .041
(It is initialized to 0 when the \214le is \214rst)6.54 F 3.766
(opened. Normally)33.336 240 R 3.766(,ar)-.845 G .516
(ead or write system be)-3.766 F .515(gins at byte of)-.195 F(fset)-.325
E F2(f_pos)3.765 E F1 3.765(,a)C .515(nd then)-3.765 F F2(f_pos)3.765 E
F1 2.842(is incremented by the number of bytes read or written.)33.336
255 R 2.842(Therefore, reads and writes)9.342 F .187
(appear to be sequential.)33.336 270 R F2(f_pos)6.687 E F1 .187
(can be queried or changed using the)3.437 F F2(lseek)3.436 E F1 .186
(system call.)3.436 F 1.886(When the \214le has been opened with)33.336
285 R F2(O_APPEND)5.136 E F1 5.136(,a)C 1.886
(ll writes automatically be)-5.136 F 1.886(gin at the)-.195 F .511(curr\
ent size of the \214le, i.e. all writes will append to the \214le and n\
e)33.336 300 R -.195(ve)-.325 G 3.76(ro).195 G -.195(ve)-3.955 G -.26
(r-).195 G .51(write an).26 F 3.76(yp)-.195 G(art)-3.76 E(of it.)33.336
315 Q(After the append,)6.5 E F2(f_pos)3.25 E F1(contains the ne)3.25 E
3.25(ws)-.325 G(ize of the \214le.)-3.25 E(The act of)33.336 336 Q F2
(open)3.25 E F1 .001(ing a \214le creates both a ne)B 3.251<778c>-.325 G
.001(le descriptor and and ne)-3.251 F(w)-.325 E F2 .001(struct file)
3.251 F F1(.)A 3.623(Af)33.336 351 S .373(ork mak)-3.623 F .373(es an e)
-.13 F .373(xact cop)-.195 F 3.623(yo)-.13 G 3.623(ft)-3.623 G .373
(he parent')-3.623 F 3.623<738c>-.715 G .372
(le descriptor table, resulting in an additional)-3.623 F .919
(reference to each \214le table entry \(see dup belo)33.336 366 R 4.17
(w\). This)-.325 F .92(sharing of open \214les means that)4.17 F .814(w\
hen e.g. the child process reads from a \214le, the parent process will\
 see a change in the)33.336 381 R(\214le position \(e.g. through)33.336
396 Q F2(lseek)3.25 E F1(\).)A(A)33.336 417 Q F2(close)3.782 E F1 .532(\
on a \214le descriptor \(assuming the \214le descriptor actually refers\
 to a v)3.782 F .533(alid open)-.325 F .381
(\214le\) NULLS out that \214le descriptor table entry)33.336 432 R F3
-.325(fo)3.631 G 3.631(rt).325 G .381(he calling pr)-3.631 F .38
(ocess only)-.234 F F1 .38(and remo)3.63 F -.195(ve)-.195 G(s).195 E
4.337(one acti)33.336 447 R 4.727 -.195(ve r)-.325 H 4.337
(eference to the corresponding).195 F F2 4.337(struct file)7.587 F F1
10.837(.W)C 4.338(hen the number of)-10.837 F .899(references f)33.336
462 R .899(alls to 0, the)-.13 F F2 .899(struct file)4.149 F F1 .899
(itself is destro)4.149 F 4.149(yed. That)-.13 F .899
(deletes one particular)4.149 F .957(instance of ha)33.336 477 R .957
(ving the inode open, b)-.26 F .957(ut as illustrated abo)-.26 F -.195
(ve)-.195 G 4.208(,t).195 G .958(here may be other)-4.208 F F2(struct)
4.208 E(file)33.336 492 Q F1
(objects which reference the same inode and thus hold it open.)3.25 E
.217(In the diagram abo)33.336 513 R -.195(ve)-.195 G 3.467(,o).195 G
.217(ne process, running on terminal /de)-3.467 F .216
(v/pts/3, had apparently opened)-.325 F 1.128
(the \214le /tmp/foo twice, once O_RDONL)33.336 528 R 4.482 -1.677(Y, a)
-1.3 H 1.129(nd the second time O_RD)1.677 F(WR|O_APPEND.)-.39 E 2.648
(This process fork)33.336 543 R 2.648(ed, and so the top and middle per)
-.13 F 2.648(-process \214le descriptor tables are)-.26 F 1.444
(identical at this moment.)33.336 558 R 1.444
(Another process is running on /de)7.944 F 4.694(v/pts/5. It)-.325 F
1.444(has also opened)4.694 F .524(/tmp/foo, O_RDONL)33.336 573 R 7.128
-1.677(Y. W)-1.3 H 3.774(ea).637 G .524
(lso see that its standard input has been redirected to the \214le)
-3.774 F(/tmp/bar)33.336 588 Q 6.5(.T)-.715 G
(his mechanism to do this will no)-6.5 E 3.25(wb)-.325 G 3.25(ee)-3.25 G
(xplained.)-3.445 E F3(Dup and I/O r)200.217 618 Q(edir)-.234 E(ection)
-.234 E F1(The)33.336 654 Q F2(dup)3.715 E F1 .465
(system call allocates a ne)3.715 F 3.715<778c>-.325 G .466
(le descriptor table entry for the process and points)-3.715 F 1.299
(it to the same)33.336 669 R F2 1.298(struct file)4.549 F F1 1.298
(as an e)4.548 F 1.298(xisting \214le descriptor)-.195 F 7.798(.T)-.715
G 1.298(he ne)-7.798 F 4.548<778c>-.325 G 1.298(le descriptor is)-4.548
F F3 1.162(exactly equi)33.336 684 R -.13(va)-.13 G(lent).13 E F1 1.163
(to the original one, as can be inferred by the diagram abo)4.412 F
-.195(ve)-.195 G 7.663(.T).195 G(here)-7.663 E
(are strong analogies here to)33.336 699 Q F2(link)3.25 E F1(.)A 1.159
(dup comes in tw)33.336 720 R 4.409<6f8d>-.13 G -.26(avo)-4.409 G 1.159
(rs: original).26 F F2(dup)4.409 E F1 4.409(,w)C 1.159
(hich picks a \214le descriptor for you \(as usual,)-4.409 F .25(the lo)
33.336 735 R .25(west a)-.325 F -.325(va)-.26 G .25
(ilable fd number is chosen\), or).325 F F2(dup2)3.5 E F1 .25
(which allo)3.5 F .251(ws you to pick the ne)-.325 F 3.501<778c>-.325 G
(le)-3.501 E 0 Cg EP
%%Page: 11 11
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 3/pg 11)71.748 E(\2512016 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 13/Times-Roman@0 SF(descriptor number)33.336 120 Q 3.25(,w)
-.52 G(hich is \214rst)-3.25 E/F2 13/Courier@0 SF(close)3.25 E F1 3.25
(di)C 3.25(fa)-3.25 G(lready open.)-3.25 E 2.171(The most frequent appl\
ication of dup is to redirect standard input, standard output or)33.336
141 R(standard error:)33.336 156 Q/F3 10/Courier@0 SF
(if \(\(fd=open\(logfnm,O_CREAT|O_APPEND|O_WRONLY,0666\)\)<0\))33.336
183 Q({)33.336 195 Q(fprintf\(stderr,"Can't open log file %s",logfnm\);)
90.936 207 Q(perror\(""\);)90.936 219 Q(return -1;)90.936 231 Q(})33.336
243 Q(if \(dup2\(fd,2\)<0\) {)33.336 255 Q
(perror\("Can't dup2 logfile to stderr"\);)90.936 267 Q(return -1;)
90.936 279 Q(})33.336 291 Q(close\(fd\);)33.336 303 Q(if \(execlp\("/us\
r/local/bin/nextprog","nextprog","arg1","arg2",NULL\)<0\))33.336 315 Q
({)33.336 327 Q
(perror\("Whoops, can't exec /usr/local/bin/nextprog!"\);)90.936 339 Q
(return -1;)90.936 351 Q(})33.336 363 Q F1 1.534(In this e)33.336 384 R
1.535(xample, ne)-.195 F 1.535(xtprog is in)-.195 F -.26(vo)-.52 G -.13
(ke).26 G 4.785(dw).13 G 1.535
(ith stderr redirected to a log \214le whose name is)-4.785 F .22
(contained in the char * v)33.336 399 R .22(ariable logfnm.)-.325 F .22
(Note the close\(fd\).)6.72 F .22(After the dup2 call, both \214le)6.72
F 3.525(descriptor fd AND \214le descriptor 2 \(standard error\) point \
to the ne)33.336 414 R 3.526(wly-opened \214le)-.325 F F2(logfnm)33.336
429 Q F1 7.744(.I)C 4.494(tw)-7.744 G 1.244
(ould be a "bad idea" to start the ne)-4.624 F 4.494(wp)-.325 G 1.244
(rogram with an e)-4.494 F 1.244(xtra reference to)-.195 F(this \214le.)
33.336 444 Q/F4 13/Times-Bold@0 SF -.325(fo)177.766 474 S
(rk and the \214le descriptor table).325 E F1 1.227(The ef)33.336 504 R
1.228(fect of a fork is to create, in the child process, a \214le descr\
iptor table which is an)-.325 F -.195(ex)33.336 519 S .545(act cop).195
F 3.795(yo)-.13 G 3.795(ft)-3.795 G .545(he parent process.)-3.795 F
.545(The reference counts in the)7.045 F F2 .545(struct file)3.795 F F1
(structures)3.795 E 1.444(are incremented accordingly)33.336 534 R 7.944
(.I)-.845 G 4.694(nt)-7.944 G 1.444(he diagram abo)-4.694 F -.195(ve)
-.195 G 4.694(,t).195 G 1.444(he top and middle processes ha)-4.694 F
-.195(ve)-.26 G(fork)33.336 549 Q 1.234
(ed, and share all \214le descriptors.)-.13 F 1.233(It is as if the)
7.733 F F2 1.233(struct file)4.483 F F1 4.483(sh)C -2.925 -.26(av e)
-4.483 H(been)4.743 E F2(dup)4.483 E F1 -.65('d)C(,).65 E -.195(ex)
33.336 564 S
(cept the referencing \214le descriptor table entries are in a dif).195
E(ferent process.)-.325 E F4 -.962(Ty)189.505 594 S(pical shell I/O r)
.962 E(edir)-.234 E(ection)-.234 E F1 2.794
(The shell uses dup or dup2 to establish I/O redirection for spa)33.336
630 R 2.794(wned commands.)-.195 F -1.04(To)9.294 G .716
(isolate possible errors from the main shell process, generally the)
33.336 645 R F2(fork)3.966 E F1 .716(is done \214rst, and)3.966 F(the o\
pening of \214les and redirection of \214le descriptors is performed in\
 the child process.)33.336 660 Q 2.203(In the classic UNIX en)33.336 681
R 2.203(vironment, the only w)-.52 F 2.204(ay tw)-.13 F 5.454(op)-.13 G
2.204(rocesses can share an open \214le)-5.454 F .061(instance \()33.336
696 R F2 .061(struct file)B F1 3.311(\)i)C 3.311(si)-3.311 G 3.311(ft)
-3.311 G(he)-3.311 E 3.311(ys)-.195 G .061
(hare a common ancestor which performed the open,)-3.311 F .972(and the\
 referencing \214le descriptors were thus inherited through forks.)
33.336 711 R .972(In modern UNIX)7.472 F -.13(ke)33.336 726 S .922
(rnels, there are other mechanisms, be).13 F .922
(yond the scope of this lecture, which can violate)-.195 F
(this principle.)33.336 741 Q 0 Cg EP
%%Page: 12 12
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 3/pg 12)71.748 E(\2512016 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 13/Times-Bold@0 SF(Expected \214le descriptor en)164.987 120
Q(vir)-.52 E(onment)-.234 E/F2 13/Times-Roman@0 SF .202
(It is a UNIX programming con)33.336 150 R -.195(ve)-.52 G .203
(ntion that, unless otherwise speci\214ed, a program e).195 F(xpects)
-.195 E .872
(to start life with just the 3 standard \214le descriptors open.)33.336
165 R .872(This means that an)7.372 F 4.121(yo)-.195 G .871(utput or)
-4.121 F 2.593(errors which the program produces will go some)33.336 180
R 2.594(where, and there is someplace from)-.325 F
(which to solicit input if needed.)33.336 195 Q 3.679 -1.04(To h)33.336
216 T -2.925 -.26(av e)1.04 H -.195(ex)5.108 G 1.598
(tra \214le descriptors open when the program be).195 F 1.598
(gins is generally an error)-.195 F 4.848(,a)-.52 G(nd)-4.848 E .578
(may cause problems.)33.336 231 R .578(These e)7.078 F .578
(xtra open \214le descriptors create, from the standpoint of the)-.195 F
3.392(program, an une)33.336 246 R 3.392
(xpected connection to something else on the system, and from the)-.195
F .035(standpoint of the system administrator)33.336 261 R 3.285(,d)-.52
G .036(angling and dead references which might pre)-3.285 F -.195(ve)
-.325 G(nt).195 E(resources from being freed.)33.336 276 Q .075
(It is lik)33.336 297 R -.325(ew)-.13 G .075(ise an error if the standa\
rd 3 \214le descriptors are not open when a program starts,).325 F .77
(or are not open correctly \(e.g. fd#1 is opened with O_RDONL)33.336 312
R 4.02(Ym)-1.3 G 4.02(ode\). This)-4.02 F .77(will cause)4.02 F(une)
33.336 327 Q(xpected errors when attempted to read/write to/from the st\
andard descriptors.)-.195 E F1(Pr)212.034 357 Q(ocess termination)-.234
E F2 1.539(Processes terminate either when the)33.336 393 R 4.789(yc)
-.195 G 1.539(all the)-4.789 F/F3 13/Courier@0 SF(exit)4.789 E F2 1.539
(system call or the)4.789 F 4.789(yr)-.195 G(ecei)-4.789 E 1.929 -.195
(ve c)-.325 H(ertain).195 E(types of)33.336 408 Q F1(signals)3.25 E F2
(\(which will be co)3.25 E -.195(ve)-.195 G(red in the ne).195 E
(xt unit\).)-.195 E(The)33.336 429 Q F3(exit)4.192 E F2 .942
(system call tak)4.192 F .942(es a single inte)-.13 F .943(ger ar)-.195
F .943(gument, which is called the)-.234 F F1 -.234(re)4.193 G(tur).234
E 4.193(nc)-.195 G(ode)-4.193 E F2(.)A .478(By con)33.336 444 R -.195
(ve)-.52 G .478(ntion, a return code of 0 is used to \215ag the normal \
and successful conclusion of).195 F 5.916(ap)33.336 459 S 2.666
(rogram, an)-5.916 F 2.666
(ything else indicates an error or abnormal end \("ABEND" for an)-.195 F
5.916(yo)-.195 G(ld)-5.916 E .181(mainframers out there\).)33.336 474 R
(Equi)6.681 E -.325(va)-.325 G(lently).325 E 3.431(,w)-.845 G .181
(hen the function)-3.431 F F3(main\(\))3.431 E F2 .18
(returns, it is equi)3.431 F -.325(va)-.325 G(lent).325 E 3.916
(to calling)33.336 489 R F3(exit)7.166 E F2 7.166(,a)C 3.916
(nd the return v)-7.166 F 3.917
(alue of main is used as the return code.)-.325 F(Good)10.417 E 2.149
(programming practice calls for main to ha)33.336 504 R 2.539 -.195
(ve a)-.26 H 5.399(ne).195 G(xplicit)-5.594 E F3(return)5.399 E F2 2.149
(so that a consistent)5.399 F 1.305(return code is generated, typically\
 0 since a normal return from main is usually a good)33.336 519 R(sign.)
33.336 534 Q .146(Although it is commonly stated that C program e)33.336
555 R -.195(xe)-.195 G .146(cution be).195 F .146
(gins with the function)-.195 F F3(main)3.396 E F2(,)A 2.002
(that is not entirely true.)33.336 570 R(The)8.502 E F1(entrypoint)5.252
E F2 2.002(of a program is the virtual address at which)5.252 F -.195
(exe)33.336 585 S .154(cution be).195 F .153
(gins, and is found in the e)-.195 F -.195(xe)-.195 G .153
(cutable \214le.).195 F .153(When a program has been compiled)6.653 F
.175(with the standard C library)33.336 600 R 3.425(,t)-.845 G .175
(he entrypoint is a function called)-3.425 F F3(__start)3.425 E F2 3.425
(,w)C .175(hich performs)-3.425 F(an)33.336 615 Q 4.184(yr)-.195 G .934
(equired library initializations and then in)-4.184 F -.26(vo)-.52 G
-.13(ke).26 G(s).13 E F3(main)4.184 E F2 7.433(.W)C(hen)-7.433 E F3
(main)4.183 E F2 .933(returns, library)4.183 F .845
(cleanup is performed.)33.336 630 R .846(In particular)7.346 F 4.096(,n)
-.52 G .846(ote that stdio b)-4.096 F(uf)-.26 E .846
(fers are \215ushed here, so that e)-.325 F -.195(ve)-.325 G(n).195 E
2.057(when a programmer has been slopp)33.336 645 R 5.307(ya)-.13 G
2.057(nd has allo)-5.307 F(wed)-.325 E F3(main)5.307 E F2 2.057
(to return without calling)5.307 F F3(fclose)33.336 660 Q F2 3.25(,d)C
(ata are not lost.)-3.25 E/F4 10/Courier@0 SF
(_start\(int argc,char **argv,char **envp\))33.336 672 Q({)33.336 684 Q
(int rc;)33.336 696 Q(extern char **environ;)33.336 708 Q
(/* perform initialization of stdio and other libs */)90.936 720 Q
(environ=envp;)90.936 732 Q 0 Cg EP
%%Page: 13 13
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 3/pg 13)71.748 E(\2512016 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 10/Courier@0 SF(rc=main\(argc,argv,envp\);)90.936 117 Q
(exit\(rc\);)90.936 129 Q(void exit\(int rc\))33.336 153 Q
(/* The exit\(3\) library fn */)70.8 E({)33.336 165 Q
(/* execute atexit callbacks */)90.936 177 Q
(/* close and flush all stdio streams */)90.936 189 Q
(/* other library cleanup */)90.936 201 Q 49.2(_exit\(rc\); /*)90.936
213 R(The real exit system call */)6 E(})33.336 225 Q/F2 13
/Times-Roman@0 SF .972(On man)33.336 246 R 4.222(yU)-.195 G .972
(NIX systems, a mechanism called)-4.222 F/F3 13/Courier@0 SF(atexit)
4.223 E F2 .973(is pro)4.223 F 4.223(vided. Additional)-.195 F(cleanup)
4.223 E(functions can be re)33.336 261 Q(gistered by calling ate)-.195 E
(xit:)-.195 E F1(f_cleanup\(void\))33.336 273 Q({)33.336 285 Q
(fprintf\(stderr,"I'm going away now\\n"\);)90.936 297 Q(})33.336 309 Q
(main\(\))33.336 333 Q({)33.336 345 Q(....)90.936 357 Q
(atexit\(f_cleanup\);)90.936 369 Q(...)90.936 381 Q(})33.336 393 Q F2
(The re)33.336 408 Q(gistered cleanup routines are called in re)-.195 E
-.195(ve)-.325 G(rse order of their re).195 E(gistration.)-.195 E F3
(exit\(3\))33.336 429 Q F2 3.289(,w)C .039
(hich is a standard library function.)-3.289 F .039
(There is a system call which is the "real")6.539 F -.195(ex)33.336 444
S(it,).195 E F3(exit\(2\))4.769 E F2 8.02(.T)C 1.52
(his system call forces the)-8.02 F/F4 13/Times-Bold@0 SF(immediate)4.77
E F2 1.52(termination of the process.)4.77 F(In)8.02 E 3.66
(contrast, the library function)33.336 459 R F3(exit\(3\))6.91 E F2 3.66
(\214rst e)6.91 F -.195(xe)-.195 G 3.659
(cutes all of the cleanup and ate).195 F(xit)-.195 E 1.208
(routines, then calls _e)33.336 474 R 4.458(xit. The)-.195 F 1.208
(result is that both calling)4.458 F F3(exit)4.458 E F2 1.208
(or returning from)4.458 F F3(main)4.459 E F2(ha)33.336 489 Q .39 -.195
(ve i)-.26 H(dentical semantics.).195 E 6.106(Ap)33.336 510 S 2.856
(rocess can also be terminated when it recei)-6.106 F -.195(ve)-.325 G
6.106(sa).195 G F4(signal)A F2 9.355(.A)C 2.855(signal is the virtual)
-3.25 F .292(computer equi)33.336 525 R -.325(va)-.325 G .292
(lent of an interrupt.).325 F .292
(It can be sent from another process, or can be raised)6.792 F(ag)33.336
540 Q 2.382(ainst the process by the operating system because the proce\
ss performed an ille)-.065 F -.065(ga)-.195 G(l).065 E 3.014
(operation, attempted to access a bad memory location, or for v)33.336
555 R 3.014(arious other reasons.)-.325 F 1.218(Signals do not al)33.336
570 R -.13(wa)-.13 G 1.218(ys result in termination.).13 F 1.218
(Some signals may be ignored, deferred, or)7.718 F 3.25
(handled. Signals)33.336 585 R(will be co)3.25 E -.195(ve)-.195 G
(red in depth in subsequent units.).195 E 1.028
(Processes that die because of a signal will not ha)33.336 606 R 1.418
-.195(ve a c)-.26 H 1.028(hance to run the standard library).195 F -.195
(ex)33.336 621 S .803(it functions, therefore stdio b).195 F(uf)-.26 E
.803(fers will not be \215ushed, etc.)-.325 F .802
(This is one of the reasons)7.302 F(wh)33.336 636 Q(y)-.065 E F3(stderr)
5.708 E F2 2.458(is, by def)5.708 F 2.459(ault, unb)-.13 F(uf)-.26 E
5.709(fered. In)-.325 F 2.459(the e)5.709 F -.195(ve)-.325 G 2.459
(nt that the process is killed, it is).195 F(bene\214cial to see all of\
 the error messages leading up to that point.)33.336 651 Q(Re)33.336 672
Q -.065(ga)-.195 G 1.294(rdless of the termination reason, when a proce\
ss terminates, all \214le descriptors are).065 F 1.593(closed by the k)
33.336 687 R 1.593(ernel as if)-.13 F F3(close)4.843 E F2 1.593
(had been called on them.)4.843 F 1.594(All resources used by the)8.094
F 1.739(process \(such as memory\) are freed \(unless the)33.336 702 R
4.989(ya)-.195 G 1.739(re also being shared by other e)-4.989 F(xtant)
-.195 E 3.25(processes\). Other)33.336 717 R(state information \(such a\
s locks held by the process\) is also adjusted.)3.25 E 1.667(The e)
33.336 738 R 1.667(xiting process becomes a)-.195 F F4(zombie)4.917 E F2
4.917(,c)C 1.667(onsuming no resources, b)-4.917 F 1.668
(ut still possessing a)-.26 F 0 Cg EP
%%Page: 14 14
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 3/pg 14)71.748 E(\2512016 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 13/Times-Roman@0 SF 2.531(process id.)33.336 120 R 2.53(The \
function of the zombie is to hold the statistics about the life of the)
9.031 F(process.)33.336 135 Q 2.34(If the e)33.336 156 R 2.34
(xiting process has an)-.195 F 5.59(ys)-.195 G(urvi)-5.59 E 2.34
(ving children, the)-.325 F 5.59(yb)-.195 G 2.34(ecome orphans.)-5.59 F
2.34(Their parent)8.84 F .666(process id \(ppid\) is reset to 1.)33.336
171 R .665(This, you may recall, is the process id of the init process,)
7.165 F(which inherits all orphaned processes on the system.)33.336 186
Q -1.04(Ty)33.336 207 S(pically)1.04 E 3.89(,t)-.845 G .64
(he parent process claims its zombie child by e)-3.89 F -.195(xe)-.195 G
.64(cuting the).195 F/F2 13/Courier@0 SF(wait)3.89 E F1 .64
(system call.)3.89 F .894(The e)33.336 222 R .894
(xit status of the process will be pack)-.195 F .894
(ed into a 16-bit inte)-.13 F(ger)-.195 E 7.393(.I)-.715 G 4.143(tw)
-7.393 G .893(ill indicate either)-4.143 F .258
(that the process terminated by calling e)33.336 237 R .258
(xit, and will supply the return code \(truncated to 8)-.195 F .295
(bits\), or that the process terminated from a signal.)33.336 252 R .294
(There are macros to decode this status)6.795 F -.13(wo)33.336 267 S
(rd, for e).13 E(xample:)-.195 E 0 0 468 578 -119.024 147 33.336 407.024
PBEGIN
%%BeginDocument: waitstat.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: waitstat.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Wed Sep 20 02:01:21 2006
%%For: hak@lex ()
%%BoundingBox: 0 0 578 147
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 147 moveto 0 0 lineto 578 0 lineto 578 147 lineto closepath clip newpath
-71.3 253.7 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 100
% Polyline
7.500 slw
n 10800 1800 m
 10800 3000 l gs col0 s gr 
% Polyline
 [60] 0 sd
n 7200 1800 m
 7200 3000 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 7800 1800 m
 7800 3000 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 8400 1800 m
 8400 3000 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 9000 1800 m
 9000 3000 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 9600 1800 m
 9600 3000 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 10200 1800 m
 10200 3000 l gs col0 s gr  [] 0 sd
% Polyline
n 6600 1800 m
 6600 3000 l gs col0 s gr 
% Polyline
gs  clippath
6330 3060 m 6270 3060 l 6270 3212 l 6300 3092 l 6330 3212 l cp
eoclip
n 7200 3300 m 6300 3300 l
 6300 3075 l gs col0 s gr gr

% arrowhead
n 6330 3212 m 6300 3092 l 6270 3212 l  col0 s
% Polyline
gs  clippath
10680 3060 m 10620 3060 l 10620 3212 l 10650 3092 l 10680 3212 l cp
eoclip
n 10425 4050 m 10650 4050 l
 10650 3075 l gs col0 s gr gr

% arrowhead
n 10680 3212 m 10650 3092 l 10620 3212 l  col0 s
/Times-Roman ff 600.00 scf sf
6900 2700 m
gs 1 -1 sc (Signal Number) col0 sh gr
/Times-Roman ff 210.00 scf sf
6150 2025 m
gs 1 -1 sc (C) col0 sh gr
/Times-Roman ff 210.00 scf sf
6225 2175 m
gs 1 -1 sc (O) col0 sh gr
/Times-Roman ff 210.00 scf sf
6300 2325 m
gs 1 -1 sc (R) col0 sh gr
/Times-Roman ff 210.00 scf sf
6375 2475 m
gs 1 -1 sc (E) col0 sh gr
/Times-Roman ff 210.00 scf sf
6075 2475 m
gs 1 -1 sc (D) col0 sh gr
/Times-Roman ff 210.00 scf sf
6150 2625 m
gs 1 -1 sc (U) col0 sh gr
/Times-Roman ff 210.00 scf sf
6225 2775 m
gs 1 -1 sc (M) col0 sh gr
/Times-Roman ff 210.00 scf sf
6375 2925 m
gs 1 -1 sc (P) col0 sh gr
/Times-Roman ff 210.00 scf sf
7275 3375 m
gs 1 -1 sc (Set if a core dump file was produced) col0 sh gr
/Times-Roman ff 210.00 scf sf
7200 3900 m
gs 1 -1 sc (Signal # which killed the process, or 0) col0 sh gr
/Times-Roman ff 210.00 scf sf
7200 4170 m
gs 1 -1 sc (if the process exited normally) col0 sh gr
% Polyline
 [60] 0 sd
n 1800 1800 m
 1800 3000 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 1800 m
 2400 3000 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 3000 1800 m
 3000 3000 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 3600 1800 m
 3600 3000 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 4200 1800 m
 4200 3000 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 4875 1800 m
 4875 3000 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 5400 1800 m
 5400 3000 l gs col0 s gr  [] 0 sd
% Polyline
gs  clippath
3630 3060 m 3570 3060 l 3570 3212 l 3600 3092 l 3630 3212 l cp
eoclip
n 3600 3450 m
 3600 3075 l gs col0 s gr gr

% arrowhead
n 3630 3212 m 3600 3092 l 3570 3212 l  col0 s
/Times-Roman ff 600.00 scf sf
1950 2700 m
gs 1 -1 sc (Return Code) col0 sh gr
/Times-Roman ff 210.00 scf sf
2025 3750 m
gs 1 -1 sc (Return code value, or 0 if process) col0 sh gr
/Times-Roman ff 210.00 scf sf
2025 4020 m
gs 1 -1 sc (was terminated with a signal) col0 sh gr
% Polyline
n 1200 1800 m 10800 1800 l 10800 3000 l 1200 3000 l
 cp gs col0 s gr 
% Polyline
n 6000 1800 m
 6000 3000 l gs col0 s gr 
% here ends figure;
$F2psEnd
rs
showpage
%%EndDocument
end PEND 0 Cg EP
%%Page: 15 15
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 3/pg 15)71.748 E(\2512016 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 10/Courier@0 SF(#include <sys/wait.h>)33.336 117 Q
(#include <wstat.h>)33.336 129 Q(pid_t cpid;)33.336 153 Q
(unsigned status;)33.336 165 Q(if \(\(cpid=wait\(&status\)\)== -1\))
33.336 189 Q({)33.336 201 Q(perror\("wait failed"\);)90.936 213 Q(})
33.336 225 Q(else)33.336 237 Q({)33.336 249 Q
(fprintf\(stderr,"Process %d ",cpid\);)90.936 261 Q(if \(status!=0\))
90.936 273 Q({)90.936 285 Q(if \(WIFSIGNALED\(status\)\))148.536 297 Q
({)148.536 309 Q(fprintf\(stderr,"Exited with signal %d\\n",)206.136 321
Q(WTERMSIG\(status\)\);)263.736 333 Q(else)177.336 345 Q
(fprintf\(stderr,"Exited with nz return val %d\\n",)225.336 357 Q
(WEXITSTATUS\(status\)\);)273.336 369 Q(return -1;)177.336 381 Q(})
129.336 393 Q(})90.936 405 Q(else)90.936 417 Q
(fprintf\(stderr,"Exited normally\\n"\);)148.536 429 Q(})33.336 441 Q/F2
13/Times-Roman@0 SF 3.987(Another form of w)33.336 456 R 3.987(ait is)
-.13 F/F3 13/Courier@0 SF(wait3)7.237 E F2 3.987
(which can be used to obtain the resource usage)7.237 F
(information for the child process:)33.336 471 Q F1
(#include <sys/wait.h>)33.336 483 Q(#include <sys/time.h>)33.336 495 Q
(#include <sys/resource.h>)33.336 507 Q(struct rusage ru;)33.336 531 Q
(int cpid;)33.336 543 Q(unsigned status;)33.336 555 Q
(if \(wait3\(&status,0,&ru\)== -1\))90.936 567 Q({)90.936 579 Q
(perror\("wait3"\);)148.536 591 Q(})90.936 603 Q(else)90.936 615 Q({)
90.936 627 Q(fprintf\(stderr,"Child process %d consumed)148.536 639 Q
(%ld.%.6d seconds of user time\\n",)206.136 651 Q(pid,)206.136 663 Q
(ru.ru_utime.tv_sec,)206.136 675 Q(ru.ru_utime.tv_usec\);)206.136 687 Q
(})90.936 699 Q(})33.336 711 Q F2 .687
(Among the resource usage information k)33.336 732 R .687
(ept for each process is the total)-.13 F/F4 13/Times-Bold@0 SF .687
(user CPU time)3.937 F 0 Cg EP
%%Page: 16 16
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 3/pg 16)71.748 E(\2512016 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 13/Times-Roman@0 SF(and)33.336 120 Q/F2 13/Times-Bold@0 SF
.182(system CPU time)3.432 F F1 6.682(.U)C .182
(ser time is time accumulated e)-6.682 F -.195(xe)-.195 G .182
(cuting user).195 F(-le)-.26 E -.195(ve)-.325 G 3.432(lc).195 G 3.432
(ode. I.e.)-3.432 F(the)3.432 E .166(total amount of time that the virt\
ual processor \(the process\) had use of a ph)33.336 135 R .165
(ysical CPU, in)-.065 F 2.403(user mode.)33.336 150 R(Lik)8.904 E -.325
(ew)-.13 G 2.404(ise, system time is the time accumulated e).325 F -.195
(xe)-.195 G 2.404(cuting k).195 F 2.404(ernel code on)-.13 F .312
(behalf of the process.)33.336 165 R .311
(The sum of user+system time is the total amount of CPU time that)6.811
F 1.896(the process consumed during its lifetime.)33.336 180 R 1.896
(This will al)8.396 F -.13(wa)-.13 G 1.896(ys be less than the).13 F F2
-.234(re)5.147 G 1.897(al time).234 F F1 1.526
(elapsed between process start and process termination, since the ph)
33.336 195 R 1.525(ysical processor \(or)-.065 F 2.21(processors\) is s\
hared among numerous virtual processors, as well as system o)33.336 210
R -.195(ve)-.195 G(rhead).195 E(functions.)33.336 225 Q 1.16
(There are additional calls such as)33.336 246 R/F3 13/Courier@0 SF
(waitpid)4.41 E F1 1.16(which will not return until a speci\214c child)
4.41 F .034(process has e)33.336 261 R .034(xited \(as opposed to)-.195
F F3(wait)3.285 E F1 .035(which will return when an)3.285 F 3.285(yc)
-.195 G .035(hild has e)-3.285 F .035(xited\), and)-.195 F F3(wait4)
33.336 276 Q F1 .343(which is lik)3.593 F(e)-.13 E F3(wait3)3.593 E F1
.343(with the semantics of)3.593 F F3(waitpid)3.593 E F1 6.842(.M)C .342
(ore detail can be found)-6.842 F(in the man pages.)33.336 291 Q 4.346
(Ap)33.336 312 S 1.096(arent process that does not perform a w)-4.346 F
1.096(ait to pick up its zombie children will cause)-.13 F .3(the syste\
m process table to become cluttered with a lot of <zombie> processes.)
33.336 327 R .299(\(There is)6.8 F 4.313(aw)33.336 342 S 1.063
(ay around this which will be mentioned in conjunction with the)-4.443 F
F3(SIGCHLD)4.314 E F1 1.064(signal in)4.314 F .83
(Unit #4\) If a parent e)33.336 357 R .829
(xits before the child, then who will collect the zombie status?)-.195 F
(The)7.329 E(answer is the)33.336 372 Q F3(init)3.25 E F1
(process, which becomes the parent of an)3.25 E 3.25(yo)-.195 G
(rphaned process.)-3.25 E F2 -.962(Ty)191.318 402 S(pical f).962 E
(ork/exec \215o)-.325 E 3.25(wc)-.13 G(ycle)-3.25 E 0 0 468 793 -141.639
240 33.336 579.639 PBEGIN
%%BeginDocument: ancestry.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ancestry.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Tue Feb  7 23:18:26 2012
%%For: hak@lex ()
%%BoundingBox: 0 0 793 240
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 240 moveto 0 0 lineto 793 0 lineto 793 240 lineto closepath clip newpath
-48.8 297.7 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 50
% Polyline
7.500 slw
gs  clippath
2865 2880 m 2865 2820 l 2713 2820 l 2833 2850 l 2713 2880 l cp
eoclip
n 2175 2850 m
 2850 2850 l gs col0 s gr gr

% arrowhead
n 2713 2880 m 2833 2850 l 2713 2820 l  col0 s
/Times-Roman ff 200.00 scf sf
2250 2700 m
gs 1 -1 sc (EXEC) col0 sh gr
% Polyline
gs  clippath
4890 2880 m 4890 2820 l 4738 2820 l 4858 2850 l 4738 2880 l cp
eoclip
n 4200 2850 m
 4875 2850 l gs col0 s gr gr

% arrowhead
n 4738 2880 m 4858 2850 l 4738 2820 l  col0 s
/Times-Roman ff 200.00 scf sf
4275 2700 m
gs 1 -1 sc (EXEC) col0 sh gr
% Polyline
gs  clippath
6915 4605 m 6915 4545 l 6763 4545 l 6883 4575 l 6763 4605 l cp
eoclip
n 6225 4575 m
 6900 4575 l gs col0 s gr gr

% arrowhead
n 6763 4605 m 6883 4575 l 6763 4545 l  col0 s
/Times-Roman ff 200.00 scf sf
6300 4425 m
gs 1 -1 sc (EXEC) col0 sh gr
% Polyline
gs  clippath
11640 4605 m 11640 4545 l 11488 4545 l 11608 4575 l 11488 4605 l cp
eoclip
n 10950 4575 m
 11625 4575 l gs col0 s gr gr

% arrowhead
n 11488 4605 m 11608 4575 l 11488 4545 l  col0 s
/Times-Roman ff 200.00 scf sf
11025 4425 m
gs 1 -1 sc (EXEC) col0 sh gr
% Polyline
n 825 975 m 2175 975 l 2175 1875 l 825 1875 l
 cp gs col0 s gr 
% Polyline
n 825 2400 m 2175 2400 l 2175 3300 l 825 3300 l
 cp gs col0 s gr 
% Polyline
gs  clippath
1470 2415 m 1530 2415 l 1530 2263 l 1500 2383 l 1470 2263 l cp
eoclip
n 1500 1875 m
 1500 2400 l gs col0 s gr gr

% arrowhead
n 1470 2263 m 1500 2383 l 1530 2263 l  col0 s
% Polyline
n 2850 2400 m 4200 2400 l 4200 3300 l 2850 3300 l
 cp gs col0 s gr 
% Polyline
n 4875 2400 m 6225 2400 l 6225 3300 l 4875 3300 l
 cp gs col0 s gr 
% Polyline
n 4875 4050 m 6225 4050 l 6225 4950 l 4875 4950 l
 cp gs col0 s gr 
% Polyline
gs  clippath
5445 4065 m 5505 4065 l 5505 3913 l 5475 4033 l 5445 3913 l cp
eoclip
n 5475 3300 m
 5475 4050 l gs col0 s gr gr

% arrowhead
n 5445 3913 m 5475 4033 l 5505 3913 l  col0 s
% Polyline
n 6900 4050 m 8250 4050 l 8250 4950 l 6900 4950 l
 cp gs col0 s gr 
% Polyline
gs  clippath
7140 2880 m 7140 2820 l 6988 2820 l 7108 2850 l 6988 2880 l cp
eoclip
n 6225 2850 m
 7125 2850 l gs col0 s gr gr

% arrowhead
n 6988 2880 m 7108 2850 l 6988 2820 l  col0 s
% Polyline
gs  clippath
8640 4530 m 8640 4470 l 8488 4470 l 8608 4500 l 8488 4530 l cp
eoclip
n 8250 4500 m
 8625 4500 l gs col0 s gr gr

% arrowhead
n 8488 4530 m 8608 4500 l 8488 4470 l  col0 s
% Polyline
 [60] 0 sd
gs  clippath
7812 3119 m 7767 3158 l 7866 3273 l 7811 3163 l 7912 3234 l cp
eoclip
n 8775 4275 m
 7800 3150 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 7912 3234 m 7811 3163 l 7866 3273 l  col0 s
% Polyline
gs  clippath
10065 2880 m 10065 2820 l 9913 2820 l 10033 2850 l 9913 2880 l cp
eoclip
n 8100 2850 m
 10050 2850 l gs col0 s gr gr

% arrowhead
n 9913 2880 m 10033 2850 l 9913 2820 l  col0 s
% Polyline
gs  clippath
9945 4065 m 10005 4065 l 10005 3913 l 9975 4033 l 9945 3913 l cp
eoclip
n 9975 2925 m
 9975 4050 l gs col0 s gr gr

% arrowhead
n 9945 3913 m 9975 4033 l 10005 3913 l  col0 s
% Polyline
n 9600 4050 m 10950 4050 l 10950 4950 l 9600 4950 l
 cp gs col0 s gr 
% Polyline
n 11625 4050 m 12975 4050 l 12975 4950 l 11625 4950 l
 cp gs col0 s gr 
% Polyline
gs  clippath
13365 4530 m 13365 4470 l 13213 4470 l 13333 4500 l 13213 4530 l cp
eoclip
n 12975 4500 m
 13350 4500 l gs col0 s gr gr

% arrowhead
n 13213 4530 m 13333 4500 l 13213 4470 l  col0 s
% Polyline
gs  clippath
11340 2880 m 11340 2820 l 11188 2820 l 11308 2850 l 11188 2880 l cp
eoclip
n 10200 2850 m
 11325 2850 l gs col0 s gr gr

% arrowhead
n 11188 2880 m 11308 2850 l 11188 2820 l  col0 s
% Polyline
 [60] 0 sd
gs  clippath
12004 3041 m 11970 3091 l 12097 3175 l 12014 3084 l 12130 3125 l cp
eoclip
n 13575 4125 m
 12000 3075 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 12130 3125 m 12014 3084 l 12097 3175 l  col0 s
% Polyline
gs  clippath
13740 2880 m 13740 2820 l 13588 2820 l 13708 2850 l 13588 2880 l cp
eoclip
n 12150 2850 m
 13725 2850 l gs col0 s gr gr

% arrowhead
n 13588 2880 m 13708 2850 l 13588 2820 l  col0 s
/Times-Roman ff 200.00 scf sf
975 1200 m
gs 1 -1 sc (pid=1) col0 sh gr
/Times-Roman ff 200.00 scf sf
1125 1500 m
gs 1 -1 sc (init) col0 sh gr
/Times-Roman ff 200.00 scf sf
1575 2250 m
gs 1 -1 sc (FORK) col0 sh gr
/Times-Roman ff 200.00 scf sf
900 2625 m
gs 1 -1 sc (pid=100) col0 sh gr
/Times-Roman ff 200.00 scf sf
2925 2625 m
gs 1 -1 sc (pid=100) col0 sh gr
/Times-Roman ff 200.00 scf sf
2925 3135 m
gs 1 -1 sc ( login) col0 sh gr
/Times-Roman ff 200.00 scf sf
5025 2625 m
gs 1 -1 sc (pid=100) col0 sh gr
/Times-Roman ff 200.00 scf sf
5025 3135 m
gs 1 -1 sc (sh) col0 sh gr
/Times-Roman ff 200.00 scf sf
5550 3675 m
gs 1 -1 sc (FORK) col0 sh gr
/Times-Roman ff 200.00 scf sf
5025 4275 m
gs 1 -1 sc (pid=120) col0 sh gr
/Times-Roman ff 200.00 scf sf
5400 4800 m
gs 1 -1 sc (sh) col0 sh gr
/Times-Roman ff 200.00 scf sf
1275 3075 m
gs 1 -1 sc (init) col0 sh gr
/Times-Roman ff 200.00 scf sf
7050 4275 m
gs 1 -1 sc (pid=120) col0 sh gr
/Times-Roman ff 200.00 scf sf
7050 4785 m
gs 1 -1 sc (ls) col0 sh gr
/Times-Roman ff 200.00 scf sf
7200 2850 m
gs 1 -1 sc (WAIT) col0 sh gr
/Times-Roman ff 200.00 scf sf
7200 3105 m
gs 1 -1 sc (syscall) col0 sh gr
/Times-Roman ff 200.00 scf sf
8625 4500 m
gs 1 -1 sc (EXIT) col0 sh gr
/Times-Roman ff 200.00 scf sf
8625 4755 m
gs 1 -1 sc (syscall) col0 sh gr
/Times-Roman ff 200.00 scf sf
9675 4275 m
gs 1 -1 sc (pid=121) col0 sh gr
/Times-Roman ff 200.00 scf sf
9675 4785 m
gs 1 -1 sc (   sh) col0 sh gr
/Times-Roman ff 200.00 scf sf
11700 4350 m
gs 1 -1 sc (pid=121) col0 sh gr
/Times-Roman ff 200.00 scf sf
11700 4860 m
gs 1 -1 sc (   cat) col0 sh gr
/Times-Roman ff 200.00 scf sf
13425 4425 m
gs 1 -1 sc (EXIT) col0 sh gr
/Times-Roman ff 200.00 scf sf
13425 4680 m
gs 1 -1 sc (syscall) col0 sh gr
/Times-Roman ff 200.00 scf sf
11475 2775 m
gs 1 -1 sc (WAIT) col0 sh gr
/Times-Roman ff 200.00 scf sf
11475 3030 m
gs 1 -1 sc (syscall) col0 sh gr
% here ends figure;
$F2psEnd
rs
showpage
%%EndDocument
end PEND F1 .872
(When the system is \214rst booted, there is only one user)33.336
615.639 R(-le)-.26 E -.195(ve)-.325 G 4.122(lp).195 G .872
(rocess, which is kno)-4.122 F .872(wn as)-.325 F F3(init)33.336 630.639
Q F1 2.979(and has pid of 1.)6.229 F F3(init)9.479 E F1 2.979
(is responsible for the user)6.229 F(-le)-.26 E -.195(ve)-.325 G 6.229
(li).195 G 2.978(nitialization of the)-6.229 F 1.12
(system, starting the user interf)33.336 645.639 R 1.12
(ace, starting system services, etc.)-.13 F 1.12(In the abo)7.62 F 1.511
-.195(ve ex)-.195 H(tremely).195 E .353(simpli\214ed vie)33.336 660.639
R -.845(w,)-.325 G F3(init)4.448 E F1 .353(has spa)3.603 F .353
(wned \(by fork and e)-.195 F -.195(xe)-.195 G .352
(c\) a process which listens on a login).195 F 1.033
(terminal \(e.g. one of the virtual consoles on Linux\).)33.336 675.639
R 1.033(This program,)7.533 F F3(login)4.283 E F1 4.283(,a)C 1.033
(ccepts the)-4.283 F 1.09(user name and passw)33.336 690.639 R 1.09
(ord, v)-.13 F 1.09(eri\214es the credentials, and then e)-.195 F -.195
(xe)-.195 G 1.09(cs itself into a command-).195 F(line shell.)33.336
705.639 Q(The def)6.5 E(ault shell is)-.13 E F3(/bin/sh)3.25 E F1(.)A
-1.04(Ty)33.336 726.639 S(pically)1.04 E 3.304(,t)-.845 G .054
(he shell recei)-3.304 F -.195(ve)-.325 G 3.304(sac).195 G .054
(ommand as a line of te)-3.304 F .055(xt, parses it, and forks and e)
-.195 F -.195(xe)-.195 G .055(cs the).195 F .346
(command so it runs in a ne)33.336 741.639 R 3.595(wp)-.325 G 3.595
(rocess. Unless)-3.595 F .345(the command is follo)3.595 F .345
(wed by the)-.325 F F3(&)3.595 E F1(symbol,)3.595 E 0 Cg EP
%%Page: 17 17
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 3/pg 17)71.748 E(\2512016 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 13/Times-Roman@0 SF 1.07(it runs in the)33.336 120 R/F2 13
/Times-Italic@0 SF(for)4.32 E -.52(eg)-.481 G -.585(ro).52 G(und).585 E
F1 1.07(and the shell w)4.32 F 1.071(aits for the child process to e)
-.13 F 4.321(xit. It)-.195 F 1.071(collects the)4.321 F -.195(ex)33.336
135 S 2.279(it status \(via one of the w).195 F 2.278(ait system call v)
-.13 F 2.278(ariants abo)-.325 F -.195(ve)-.195 G 5.528(\)a).195 G 2.278
(nd then accepts the ne)-5.528 F(xt)-.195 E 4.449(command. One)33.336
150 R 1.199(can vie)4.449 F 4.449(wt)-.325 G 1.2(he e)-4.449 F 1.2
(xit status of the last command through the shell v)-.195 F(ariable)
-.325 E/F3 13/Courier@0 SF($?)33.336 165 Q F1 3.25(,e)C(.g.)-3.25 E/F4
10/Courier@0 SF 6($l)33.336 177 S 6(s-)-6 G(foobargument)-6 E
(ls: invalid option -- e)33.336 189 Q
(Try `ls --help' for more information.)33.336 201 Q 6($e)33.336 225 S
(cho $?)-6 E(1)33.336 237 Q/F5 13/Times-Bold@0 SF(Backgr)205.638 267 Q
(ound pr)-.234 E(ocesses)-.234 E F1 .848(If one in)33.336 297 R -.26(vo)
-.52 G -.13(ke).26 G(s).13 E F3 .848(command &)4.098 F F1 .847
(from the shell prompt, a ne)4.098 F 4.097(wp)-.325 G .847
(rocess is fork)-4.097 F .847(ed by the shell)-.13 F .175(and e)33.336
312 R -.195(xe)-.195 G .175(cs command, b).195 F .175
(ut the shell does NO)-.26 F 3.426(Tw)-.52 G .176
(ait around for child process completion.)-3.556 F(It)6.676 E 4.086
(instead issues a command prompt and e)33.336 327 R -.195(xe)-.195 G
4.085(cutes the ne).195 F 4.085(xt command while the \214rst)-.195 F
.124(command also runs.)33.336 342 R .124
(The \214rst command is then said to be a "background process".)6.624 F
(There)6.625 E 1.322
(are some complications: what happens if the child process w)33.336 357
R 1.322(ants to read from standard)-.13 F 8.099(input? It)33.336 372 R
-.13(wo)8.099 G 4.849
(uld be "competing" for characters with the shell itself, and/or with)
.13 F 1.021(subsequent commands.)33.336 387 R 3.101 -1.04(We c)7.521 H
(an')1.04 E 4.271(tr)-.234 G 1.021(eally e)-4.271 F 1.02
(xplore this topic further without understanding)-.195 F .51
(signals and the)33.336 402 R F3(tty)3.76 E F1(layer)3.76 E 3.761(,s)
-.52 G 3.761(ot)-3.761 G .511
(he interested reader could consult some online tutorials on)-3.761 F
(using job control and background processes in UNIX.)33.336 417 Q F5(Pr)
230.812 447 Q(ocess State)-.234 E F1 2.735
(As we will discuss further in Unit #5, the k)33.336 477 R 2.735
(ernel e)-.13 F -.195(xe)-.195 G 2.735(cutes in one big shared virtual)
.195 F 1.212(address space \(whereas user)33.336 492 R 1.213
(-mode processes are contained in distinct V)-.26 F 4.463(As)-1.755 G
4.463(paces\). This)-4.463 F(allo)33.336 507 Q .357(ws the k)-.325 F
.357(ernel to create data structures and use pointers without w)-.13 F
.357(orrying about which)-.13 F 1.228(address space the)33.336 522 R
4.478(ya)-.195 G 1.228(re part of.)-4.478 F 1.228(The k)7.728 F 1.228
(ernel maintains information about each process in)-.13 F -.13(ke)33.336
537 S(rnel memory).13 E(.)-.845 E 2.244(In the Linux k)33.336 567 R
2.244(ernel, a)-.13 F F3 2.244(struct task_struct)5.494 F F1 2.244
(is allocated for each process \(to be)5.494 F .418(precise, it is allo\
cated for each schedulable task, which equates to each thread in the ca\
se)33.336 582 R .921(multi-threaded programs\).)33.336 597 R .921
(This is a f)7.421 F .921(airly lar)-.13 F .921
(ge structure and contains either directly)-.234 F 4.17(,o)-.845 G(r)
-4.17 E .745
(indirectly through other structures pointed at, just about e)33.336 612
R -.195(ve)-.325 G .746(rything one w).195 F .746(ould e)-.13 F -.195
(ve)-.325 G 3.996(rw).195 G(ant)-4.126 E 3.795(to kno)33.336 627 R 7.045
(wa)-.325 G 3.795(bout a process.)-7.045 F 3.795(Some e)10.295 F 3.795
(xamples of the process state maintained via the)-.195 F(task_struct:)
33.336 642 Q 4.446<8352>33.336 657 S 1.197(elationships with other proc\
esses: parent pid, list of children, list of siblings, lists of)-4.446 F
(process and session groups.)33.336 672 Q 3.631<8343>33.336 687 S .381
(redentials: uid, primary gid, list of gids that we are a member of, ef)
-3.631 F(fecti)-.325 E .77 -.195(ve u)-.325 H .38(id and gid).195 F
(when e)33.336 702 Q -.195(xe)-.195 G
(cuting setuid or setgid programs, etc.).195 E 3.25<834f>33.336 717 S
(pen \214le descriptor table \(a lot more about that later this unit\))
-3.25 E 4.743<8352>33.336 732 S 1.494(esource usage counters: accumulat\
ed user and system cpu time, memory usage, I/O)-4.743 F 0 Cg EP
%%Page: 18 18
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 3/pg 18)71.748 E(\2512016 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 13/Times-Roman@0 SF(usage, etc.)33.336 120 Q 3.25<8350>33.336
135 S(rocess address space layout \(lots more about this in Unit 5\))
-3.25 E 3.25<8343>33.336 150 S(urrent w)-3.25 E(orking directory)-.13 E
3.25<8343>33.336 165 S(urrently e)-3.25 E -.195(xe)-.195 G
(cuting program, command-line ar).195 E(guments)-.234 E .994
(There is a global v)33.336 186 R .993(ariable called)-.325 F/F2 13
/Courier@0 SF(current)4.243 E F1 .993(which the k)4.243 F .993
(ernel maintains as a point to the)-.13 F .393
(task_struct of the currently running process.)33.336 201 R .393
(On a multi-CPU machine, each CPU has its)6.893 F -.325(ow)33.336 216 S
4.132(ns).325 G .882(ense of)-4.132 F F2(current)4.132 E F1 7.381(.[)C
.881(In f)-7.381 F .881(act, this global v)-.13 F .881
(ariable is implemented as a macro which)-.325 F(accesses the per)33.336
231 Q(-cpu pri)-.26 E -.325(va)-.325 G(te data area in k).325 E
(ernel memory].)-.13 E(As an e)6.5 E(xample:)-.195 E/F3 10/Courier@0 SF
7.2(pid=current->pid; //Get)33.336 243 R
(the PID of the current process ** See note below!)6 E 102
(uid=current->credentials->uid; //)33.336 255 R
(Get the uid of the current process)6 E 86.4(cputime=current->utime; //)
33.336 267 R(Get the accumulated user-mode CPU time)6 E/F4 13
/Times-Bold@0 SF(Multi-thr)147.515 297 Q(eaded pr)-.234 E
(ogram / clone system call)-.234 E F1 1.882
(All modern UNIX systems support multi-threaded processes.)33.336 327 R
1.883(Our de\214nition of)8.383 F F4(multi-)5.133 E(thr)33.336 342 Q
(eaded)-.234 E F1 1.201(shall be: a process in which tw)4.451 F 4.451
(oo)-.13 G 4.451(rm)-4.451 G 1.201
(ore independent, schedulable threads of)-4.451 F 2.687(control co-e)
33.336 357 R 2.687(xist within a shared address space.)-.195 F 2.688
(The POSIX standard, which go)9.188 F -.195(ve)-.195 G(rns).195 E 2.299
(compatibility issues among UNIX v)33.336 372 R 2.298
(ariants, says that in a multi-threaded program, all)-.325 F 1.996
(threads share the same pid, because the)33.336 387 R 5.246(ya)-.195 G
1.996(re, after all, part of the same process.)-5.246 F(The)8.496 E F2
(gettid)33.336 402 Q F1 .677
(system call is de\214ned to return a unique inte)3.927 F .677
(ger for each thread within a multi-)-.195 F(threaded process.)33.336
417 Q(Dif)33.336 447 Q 2.605(ferent UNIX v)-.325 F 2.605
(ariants \(e.g. Linux, BSD, Solaris\) ha)-.325 F 2.996 -.195(ve d)-.26 H
(if).195 E 2.606(ferent w)-.325 F 2.606(ays of making a)-.13 F 2.196
(multi-threaded program.)33.336 462 R 4.276 -1.04(We w)8.696 H 2.196
(ill look at the Linux approach, in which a system call)1.04 F F2(clone)
33.336 477 Q F1(is de\214ned:)3.25 E F3(int clone\( int \(*start_fn\)\(\
void *\), void *child_stack, int flags, void *arg\))33.336 504 Q F1 .546
(The clone system call is lik)33.336 534 R 3.796(ef)-.13 G .546(ork, e)
-3.796 F .546(xcept all of the things that fork "copies" for the child)
-.195 F 1.547(process are no)33.336 549 R 4.797(wa)-.325 G(llo)-4.797 E
1.547(wed to be speci\214ed piecemeal.)-.325 F(The)8.047 E F2(flags)
4.797 E F1(ar)4.797 E 1.547(gument is a bitwise)-.234 F 22.278
(combination of \215ags specifying this beha)33.336 564 R(vior)-.26 E
28.779(.F)-.715 G 22.279(or e)-28.974 F(xample,)-.195 E F2
(CLONE_VM|CLONE_FILES)33.336 579 Q F1 .901
(means that parent and child will fore)4.151 F -.195(ve)-.325 G(r).195 E
/F5 13/Times-Italic@0 SF(shar)4.151 E(e)-.481 E F1 .9(the address)4.151
F .052(space and the \214le descriptor table.)33.336 594 R .052
(Therefore if the child thread opens a \214le and stores the)6.552 F
2.923(\214le descriptor in a global v)33.336 609 R 2.923
(ariable, the parent thread can reference that same global)-.325 F -.325
(va)33.336 624 S .597(riable and can use that same \214le descriptor)
.325 F(.)-.715 E F2(fork)7.097 E F1 .597(then becomes equi)3.847 F -.325
(va)-.325 G .597(lent to).325 F F2(clone)3.847 E F1 .95(where the)33.336
639 R F2(flags)4.2 E F1 .95
(are set to 0 : all aspects of the parent are copied to the child b)4.2
F .949(ut then)-.26 F .464(become independent for fork.)33.336 654 R
.464(In f)6.964 F .464(act, the Linux k)-.13 F .465
(ernel implements fork and clone as the)-.13 F(same system call.)33.336
669 Q .046({Aside: the name)33.336 699 R F2(CLONE_XX)3.296 E F1 .046
(has an in)3.296 F -.195(ve)-.52 G .046(rted sense.).195 F .045(It w)
6.545 F .045(ould ha)-.13 F .435 -.195(ve p)-.26 H .045
(erhaps been better to).195 F .732(call the \215ags)33.336 714 R F2
(SHARE_XX)3.982 E F1 .733
(since When such a \215ag is set, the corresponding data structure)3.982
F(is shared rather than copied \(cloned\).)33.336 729 Q
(Alas, this is ho)6.5 E 3.25(wL)-.325 G(inux named it})-3.25 E 0 Cg EP
%%Page: 19 19
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 3/pg 19)71.748 E(\2512016 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 13/Times-Roman@0 SF .363(If we look at the)33.336 120 R/F2 13
/Courier@0 SF .362(struct task_struct)3.612 F F1 3.612(,t)C .362
(his is implemented by ha)-3.612 F .362(ving each of these)-.26 F .861
(things that can be shared vs. copied track)33.336 135 R .861
(ed via a struct which is pointed to by the main)-.13 F 3.863
(task_struct. If)33.336 150 R .613
(the corresponding bitwise \215ag is 0 \(e.g CLONE_FILES\), then a ne)
3.863 F 3.863(ws)-.325 G(ub-)-3.863 E 1.133
(structure is allocated and copied from the parent')33.336 165 R 1.134
(s, and the child points to the ne)-.715 F 4.384(ws)-.325 G(ub-)-4.384 E
4.229(structure. This)33.336 180 R .979(is kno)4.229 F .979
(wn in data structures theory as a "deep cop)-.325 F 4.229(y". If)-.13 F
.978(the \215ag is 1, the)4.229 F
(child simply points to the same sub-structure, which is a "shallo)
33.336 195 Q 3.25(wc)-.325 G(op)-3.25 E(y".)-.13 E -.195(Fo)33.336 225 S
7.837(rm).195 G 4.587(ultiple threads to w)-7.837 F 4.587
(ork correctly in a shared address space, there must be)-.13 F .052
(independent stacks for each.)33.336 240 R .052
(Otherwise, function calls and local v)6.552 F .052(ariables w)-.325 F
.052(ould interfere)-.13 F 2.648(with each other!)33.336 255 R(The)9.148
E F2(child_stack)5.899 E F1 2.649(parameter gi)5.899 F 3.039 -.195(ve t)
-.325 H 2.649(he address of a ne).195 F 5.899(wm)-.325 G(emory)-5.899 E
(re)33.336 270 Q 3.77
(gion \(see Unit 5\) that the parent has created for the child')-.195 F
7.02(ss)-.715 G 7.02(tack. Unlik)-7.02 F 7.02(ef)-.13 G(ork,)-7.02 E
-.195(exe)33.336 285 S 1.498(cution of the child thread be).195 F 1.498
(gins not at the ne)-.195 F 1.499
(xt line of code after the clone system)-.195 F .183(call, b)33.336 300
R .183(ut by calling \(*start_fn\)\(ar)-.26 F 3.433(g\); When)-.234 F
.183(this function returns, the child thread dies, and)3.433 F .52
(the return v)33.336 315 R .521(alue of the function becomes the e)-.325
F .521(xit code of the thread, much lik)-.195 F 3.771(et)-.13 G .521
(he return)-3.771 F -.325(va)33.336 330 S(lue of main in a con).325 E
-.195(ve)-.52 G(ntional single-threaded program.).195 E 3.502 -1.04
(To f)33.336 360 T 1.422(urther confuse things, the)1.04 F F2(clone)
4.672 E F1 1.421(that you see is really a library wrapper function.)
4.672 F 2.101(The real, underlying)33.336 375 R F2(sys_clone)5.351 E F1
2.101(system call w)5.351 F 2.101(orks more lik)-.13 F 5.352(ef)-.13 G
5.352(ork. Moreo)-5.352 F -.195(ve)-.195 G 3.142 -.52(r, m).195 H(ost)
.52 E 6.96(applications programmers use additional wrapper libraries to\
 do multi-threaded)33.336 390 R 8.201(programming. The)33.336 405 R
4.952(most common library is the POSIX Threads \(pthreads\), with)8.201
F(functions such as)33.336 420 Q F2(pthread_create)3.25 E F1(to mak)3.25
E 3.25(ean)-.13 G .65 -.325(ew t)-3.25 H(hread.).325 E -1.3(Ye)33.336
450 S 3.821(ta)1.3 G .57(nother area of confusion will be in reading k)
-3.821 F .57(ernel source code.)-.13 F .57(Because of the w)7.07 F(ay)
-.13 E 6.16(Linux historically approached multi-threading, within the k)
33.336 465 R 6.161(ernel, each thread is)-.13 F 1.365
(associated with a unique)33.336 480 R F2(task_struct)4.615 E F1 1.365
(and a unique)4.615 F F2(pid)4.615 E F1 7.865(.T)C 1.365(he k)-7.865 F
1.365(ernel uses the term)-.13 F 2.529("thread group ID" \()33.336 495 R
F2(current->tgid)A F1 5.779(\)a)C 5.779(sa)-5.779 G 5.78(ni)-5.779 G
2.53(denti\214er for a collection of threads as)-5.78 F 3.131
(typically found in a multi-threaded program.)33.336 510 R 5.211 -1.04
(To c)9.631 H 3.13(omply with POSIX, the)1.04 F F2(getpid)6.38 E F1 .647
(system call actually returns the)33.336 525 R F2(current->tgid)3.898 E
F1 3.898(,a)C .648(nd the)-3.898 F F2(gettid)3.898 E F1 .648
(system call returns)3.898 F F2(current->pid)33.336 540 Q F1(.)A 1.576
(Programs which are multi-threaded are much harder to deb)33.336 585 R
4.826(ug. Ho)-.26 F(we)-.325 E -.195(ve)-.325 G 2.616 -.52(r, a g).195 H
1.576(reat man).52 F(y)-.195 E 2.123
(applications are well-suited to the thread paradigm.)33.336 600 R 2.123
(These include serv)8.623 F 2.123(er applications)-.195 F 2.821(\(e.g. \
web and email service\) and programs which present a graphical user int\
erf)33.336 615 R(ace.)-.13 E(That')33.336 630 Q 5.442(sa)-.715 G 2.192
(bout all we')-5.442 F 2.192
(ll say about multi-threaded programming for no)-.13 F 7.133 -.845(w. T)
-.325 H 2.193(he interested).845 F(reader is referred to the)33.336 645
Q F2(man 2 clone)3.25 E F1(and)3.25 E F2(man 7 pthreads)3.25 E/F3 13
/Times-Bold@0 SF(Pr)150.901 675 Q(eempti)-.234 E .26 -.13(ve a)-.13 H
(nd Cooperati).13 E .26 -.13(ve M)-.13 H(ultitasking).13 E F1 5.126
-1.04(We h)33.336 711 T -2.925 -.26(av e)1.04 H 3.046(seen ho)6.556 F
6.296(wt)-.325 G 3.046(he k)-6.296 F 3.046
(ernel uses time-slicing to pro)-.13 F 3.045
(vide an illusion: that a single)-.195 F 1.266
(processor is actually running multiple simultaneous tasks.)33.336 726 R
1.267(On a multiprocessor system,)7.766 F 4.304
(the illusion is that the total number of tasks can e)33.336 741 R 4.304
(xceed the number of ph)-.195 F(ysical)-.065 E 0 Cg EP
%%Page: 20 20
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 3/pg 20)71.748 E(\2512016 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 13/Times-Roman@0 SF(processors.)33.336 120 Q 3.278
(Simple operating systems use)33.336 141 R/F2 13/Times-Bold@0 SF
(cooperati)6.528 E 3.539 -.13(ve m)-.13 H(ultitasking).13 E F1 9.779(.A)
C 3.279(task which is currently)-3.25 F 1.673
(running on the processor v)33.336 156 R 1.673(oluntarily gi)-.26 F
-.195(ve)-.325 G 4.923(su).195 G 4.923(pt)-4.923 G 1.673
(he processor and allo)-4.923 F 1.673(ws another task to)-.325 F(run.)
33.336 171 Q .989(Most operating systems designed for general multiuser\
 use recognize that tasks can')33.336 192 R 4.24(tb)-.234 G(e)-4.24 E
2.366(trusted to relinquish the processor)33.336 207 R(.)-.715 E F2(Pr)
8.866 E(e-empti)-.234 E 2.626 -.13(ve m)-.13 H(ultitasking).13 E F1
2.366(means that a currently)5.616 F 4.61
(running task can be forcefully suspended and a conte)33.336 222 R 4.611
(xt switch made to another)-.195 F(,)-.52 E(presumably `)33.336 237 Q
(`better')-.962 E 3.25('t)-.962 G(ask to run.)-3.25 E 1.4
(The trigger for preemption may be based on priority)33.336 258 R 4.649
(,i)-.845 G 1.399(.e. a higher)-4.649 F 1.399(-priority task has just)
-.26 F .502(become ready to run.)33.336 273 R .502
(It may also be based on time-slicing, in which each task is gi)7.002 F
-.195(ve)-.325 G 3.753(na).195 G .562
(certain amount of time and then another task is gi)33.336 288 R -.195
(ve)-.325 G 3.811(nt).195 G .561(he CPU.)-3.811 F .561(This requires a)
7.061 F F2 -.26(Pe)3.811 G(riodic).26 E(Inter)33.336 303 Q -.13(va)-.13
G 3.926(lT).13 G(imer)-4.16 E F1 3.926(interrupt. Or)3.926 F 3.927(,i)
-.52 G 3.927(tt)-3.927 G .677
(he trigger could be a blend of priority and time.)-3.927 F .677(In the)
7.177 F .14(Linux k)33.336 318 R .14(ernel, it is the)-.13 F/F3 13
/Courier@0 SF(scheduler)3.389 E F1 .139(subsystem which mak)3.389 F .139
(es the decision as to which task)-.13 F(to run and when.)33.336 333 Q
.88(In a future unit, we will see ho)33.336 354 R 4.13(wt)-.325 G .88
(he k)-4.13 F .88(ernel actually implements a task switch.)-.13 F(\(F)
7.38 E .88(or our)-.195 F .189(purposes, a "task" is the same as a thre\
ad, and in a single-threaded process, is the same as)33.336 369 R 3.25
(ap)33.336 384 S 3.25(rocess\). Let)-3.25 F(us, for no)3.25 E 1.69 -.845
(w, l)-.325 H(ook at the basic concepts.).845 E F2(Pr)216.005 414 Q
(ocess/task states)-.234 E F1(Uni)33.336 450 Q -.195(ve)-.325 G
(rsal among multitasking operating systems is the notion of task).195 E
F2(states)3.25 E F1(.)A 8.151(As)33.336 471 S 4.901
(imple model of task states is presented belo)-8.151 F 9.841 -.845(w. T)
-.325 H 4.901(he state names chosen are).845 F 1.06
(generalized, and not necessarily the names used in an)33.336 486 R 4.31
(yp)-.195 G 1.06(articular UNIX k)-4.31 F 4.31(ernel. W)-.13 F 4.31(ea)
-1.04 G(re)-4.31 E(also ignoring certain subtleties, such as job contro\
l and process tracing.)33.336 501 Q 0 Cg EP
%%Page: 21 21
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 3/pg 21)71.748 E(\2512016 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E 0 0 468 479 -323.399 331 33.336 443.399 PBEGIN
%%BeginDocument: procstate.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: procstate.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Tue Nov 26 19:24:51 2013
%%For: hak@lex ()
%%BoundingBox: 0 0 479 331
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 331 moveto 0 0 lineto 479 0 lineto 479 331 lineto closepath clip newpath
-107.5 365.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/reencdict 12 dict def /ReEncode { reencdict begin
/newcodesandnames exch def /newfontname exch def /basefontname exch def
/basefontdict basefontname findfont def /newfont basefontdict maxlength dict def
basefontdict { exch dup /FID ne { dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put } ifelse } { pop pop } ifelse } forall
newfont /FontName newfontname put newcodesandnames aload pop
128 1 255 { newfont /Encoding get exch /.notdef put } for
newcodesandnames length 2 idiv { newfont /Encoding get 3 1 roll put } repeat
newfontname newfont definefont pop end } def
/isovec [
8#055 /minus 8#200 /grave 8#201 /acute 8#202 /circumflex 8#203 /tilde
8#204 /macron 8#205 /breve 8#206 /dotaccent 8#207 /dieresis
8#210 /ring 8#211 /cedilla 8#212 /hungarumlaut 8#213 /ogonek 8#214 /caron
8#220 /dotlessi 8#230 /oe 8#231 /OE
8#240 /space 8#241 /exclamdown 8#242 /cent 8#243 /sterling
8#244 /currency 8#245 /yen 8#246 /brokenbar 8#247 /section 8#250 /dieresis
8#251 /copyright 8#252 /ordfeminine 8#253 /guillemotleft 8#254 /logicalnot
8#255 /hyphen 8#256 /registered 8#257 /macron 8#260 /degree 8#261 /plusminus
8#262 /twosuperior 8#263 /threesuperior 8#264 /acute 8#265 /mu 8#266 /paragraph
8#267 /periodcentered 8#270 /cedilla 8#271 /onesuperior 8#272 /ordmasculine
8#273 /guillemotright 8#274 /onequarter 8#275 /onehalf
8#276 /threequarters 8#277 /questiondown 8#300 /Agrave 8#301 /Aacute
8#302 /Acircumflex 8#303 /Atilde 8#304 /Adieresis 8#305 /Aring
8#306 /AE 8#307 /Ccedilla 8#310 /Egrave 8#311 /Eacute
8#312 /Ecircumflex 8#313 /Edieresis 8#314 /Igrave 8#315 /Iacute
8#316 /Icircumflex 8#317 /Idieresis 8#320 /Eth 8#321 /Ntilde 8#322 /Ograve
8#323 /Oacute 8#324 /Ocircumflex 8#325 /Otilde 8#326 /Odieresis 8#327 /multiply
8#330 /Oslash 8#331 /Ugrave 8#332 /Uacute 8#333 /Ucircumflex
8#334 /Udieresis 8#335 /Yacute 8#336 /Thorn 8#337 /germandbls 8#340 /agrave
8#341 /aacute 8#342 /acircumflex 8#343 /atilde 8#344 /adieresis 8#345 /aring
8#346 /ae 8#347 /ccedilla 8#350 /egrave 8#351 /eacute
8#352 /ecircumflex 8#353 /edieresis 8#354 /igrave 8#355 /iacute
8#356 /icircumflex 8#357 /idieresis 8#360 /eth 8#361 /ntilde 8#362 /ograve
8#363 /oacute 8#364 /ocircumflex 8#365 /otilde 8#366 /odieresis 8#367 /divide
8#370 /oslash 8#371 /ugrave 8#372 /uacute 8#373 /ucircumflex
8#374 /udieresis 8#375 /yacute 8#376 /thorn 8#377 /ydieresis] def
/Times-Roman /Times-Roman-iso isovec ReEncode
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 0
% Ellipse
7.500 slw
n 7200 3600 600 600 0 360 DrawEllipse gs col-1 s gr

% Ellipse
30.000 slw
n 4800 3600 600 600 0 360 DrawEllipse gs col-1 s gr

% Ellipse
n 4800 1200 600 600 0 360 DrawEllipse gs col-1 s gr

% Ellipse
7.500 slw
n 2400 3600 600 600 0 360 DrawEllipse gs col-1 s gr

% Ellipse
n 3750 5400 675 675 0 360 DrawEllipse gs col-1 s gr

% Ellipse
n 6071 5323 675 675 0 360 DrawEllipse gs col-1 s gr

% Polyline
gs  clippath
2985 3570 m 2985 3630 l 3137 3630 l 3017 3600 l 3137 3570 l cp
eoclip
n 4200 3600 m
 3000 3600 l gs col-1 s gr gr

% arrowhead
n 3137 3570 m 3017 3600 l 3137 3630 l  col-1 s
% Polyline
gs  clippath
7785 3570 m 7785 3630 l 7937 3630 l 7817 3600 l 7937 3570 l cp
eoclip
n 8550 3600 m
 7800 3600 l gs col-1 s gr gr

% arrowhead
n 7937 3570 m 7817 3600 l 7937 3630 l  col-1 s
% Polyline
gs  clippath
6615 3630 m 6615 3570 l 6463 3570 l 6583 3600 l 6463 3630 l cp
eoclip
n 5400 3600 m
 6600 3600 l gs col-1 s gr gr

% arrowhead
n 6463 3630 m 6583 3600 l 6463 3570 l  col-1 s
% Polyline
gs  clippath
3946 4707 m 3978 4758 l 4106 4676 l 3989 4716 l 4074 4626 l cp
eoclip
n 4800 4200 m
 3975 4725 l gs col-1 s gr gr

% arrowhead
n 4074 4626 m 3989 4716 l 4106 4676 l  col-1 s
% Polyline
gs  clippath
7228 4217 m 7196 4166 l 7068 4248 l 7186 4209 l 7100 4298 l cp
eoclip
n 6375 4725 m
 7200 4200 l gs col-1 s gr gr

% arrowhead
n 7100 4298 m 7186 4209 l 7068 4248 l  col-1 s
% Polyline
gs  clippath
5250 3090 m 5250 3150 l 5402 3150 l 5282 3120 l 5402 3090 l cp
eoclip
n 6810 3120 m
 5265 3120 l gs col-1 s gr gr

% arrowhead
n 5402 3090 m 5282 3120 l 5402 3150 l  col-1 s
% Polyline
gs  clippath
4830 1785 m 4770 1785 l 4770 1937 l 4800 1817 l 4830 1937 l cp
eoclip
n 4800 1800 m
 4800 3000 l gs col-1 s gr gr

% arrowhead
n 4830 1937 m 4800 1817 l 4770 1937 l  col-1 s
% Polyline
gs  clippath
4620 3015 m 4680 3015 l 4680 2863 l 4650 2983 l 4620 2863 l cp
eoclip
n 4650 3000 m
 4650 1800 l gs col-1 s gr gr

% arrowhead
n 4620 2863 m 4650 2983 l 4680 2863 l  col-1 s
% Polyline
 [60] 0 sd
gs  clippath
4785 2370 m 4785 2430 l 4937 2430 l 4817 2400 l 4937 2370 l cp
eoclip
n 7200 2400 m
 4800 2400 l gs col-1 s gr gr
 [] 0 sd
% arrowhead
n 4937 2370 m 4817 2400 l 4937 2430 l  col-1 s
% Polyline
gs  clippath
6701 3995 m 6675 3941 l 6538 4007 l 6660 3982 l 6565 4061 l cp
eoclip
n 4350 5100 m
 6675 3975 l gs col-1 s gr gr

% arrowhead
n 6565 4061 m 6660 3982 l 6538 4007 l  col-1 s
% Polyline
gs  clippath
5770 4758 m 5804 4709 l 5679 4622 l 5761 4716 l 5645 4671 l cp
eoclip
n 5025 4200 m
 5775 4725 l gs col-1 s gr gr

% arrowhead
n 5645 4671 m 5761 4716 l 5679 4622 l  col-1 s
% Polyline
gs  clippath
7532 4134 m 7488 4093 l 7385 4204 l 7489 4137 l 7429 4245 l cp
eoclip
n 6672 5020 m
 7500 4125 l gs col-1 s gr gr

% arrowhead
n 7429 4245 m 7489 4137 l 7385 4204 l  col-1 s
% Polyline
2 slj
gs  clippath
4282 3257 m 4296 3199 l 4148 3164 l 4259 3221 l 4135 3223 l cp
eoclip
n 4575 3000 m 4574 2998 l 4572 2995 l 4569 2989 l 4563 2979 l 4556 2966 l
 4546 2948 l 4534 2927 l 4519 2902 l 4503 2875 l 4485 2844 l
 4465 2812 l 4444 2779 l 4423 2745 l 4400 2710 l 4377 2676 l
 4353 2642 l 4329 2610 l 4304 2579 l 4278 2549 l 4252 2520 l
 4225 2494 l 4198 2470 l 4169 2449 l 4140 2431 l 4110 2416 l
 4080 2405 l 4050 2400 l 4021 2400 l 3994 2405 l 3969 2413 l
 3946 2425 l 3925 2438 l 3907 2453 l 3890 2469 l 3876 2485 l
 3863 2502 l 3851 2519 l 3840 2536 l 3830 2553 l 3821 2570 l
 3812 2588 l 3804 2605 l 3796 2623 l 3789 2642 l 3781 2662 l
 3774 2683 l 3767 2705 l 3760 2728 l 3754 2753 l 3749 2779 l
 3744 2806 l 3742 2835 l 3741 2865 l 3744 2895 l 3750 2925 l
 3762 2958 l 3779 2989 l 3799 3018 l 3822 3043 l 3848 3065 l
 3876 3086 l 3905 3104 l 3936 3120 l 3967 3135 l 4000 3148 l
 4033 3160 l 4066 3171 l 4099 3181 l 4131 3190 l 4161 3198 l
 4189 3205 l 4213 3211 l 4233 3216 l 4249 3219 l
 4275 3225 l gs col-1 s gr gr

% arrowhead
0 slj
n 4135 3223 m 4259 3221 l 4148 3164 l  col-1 s
/Times-Roman-iso ff 200.00 scf sf
4800 1275 m
gs 1 -1 sc (RUNNING) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman-iso ff 200.00 scf sf
4800 1050 m
gs 1 -1 sc (USER) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman-iso ff 200.00 scf sf
4800 3450 m
gs 1 -1 sc (KERNEL) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman-iso ff 200.00 scf sf
4800 3720 m
gs 1 -1 sc (RUNNING) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman-iso ff 200.00 scf sf
7200 3675 m
gs 1 -1 sc (READY) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman-iso ff 200.00 scf sf
8625 3675 m
gs 1 -1 sc (CREATION) col-1 sh gr
/Times-Roman-iso ff 233.33 scf sf
2400 3675 m
gs 1 -1 sc (ZOMBIE) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman-iso ff 233.33 scf sf
3600 3900 m
gs 1 -1 sc (exit) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman-iso ff 200.00 scf sf
3600 1950 m
gs 1 -1 sc (System Call,) col-1 sh gr
/Times-Roman-iso ff 200.00 scf sf
5400 2250 m
gs 1 -1 sc (Return) dup sw pop neg 0 rm  col-1 sh gr
/Times-Roman-iso ff 200.00 scf sf
7275 2550 m
gs 1 -1 sc (Check for) col-1 sh gr
/Times-Roman-iso ff 200.00 scf sf
7275 2790 m
gs 1 -1 sc (signals) col-1 sh gr
/Times-Roman-iso ff 200.00 scf sf
3555 2160 m
gs 1 -1 sc (Interrupt,Fault) col-1 sh gr
/Times-Roman-iso ff 200.00 scf sf
6210 3045 m
gs 1 -1 sc (Scheduled-IN) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman-iso ff 200.00 scf sf
6060 3555 m
gs 1 -1 sc (Scheduled-OUT) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman-iso ff 200.00 scf sf
3720 2925 m
gs 1 -1 sc (Page Fault) dup sw pop neg 0 rm  col-1 sh gr
/Times-Roman-iso ff 200.00 scf sf
3750 2700 m
gs 1 -1 sc (Interrupt,) dup sw pop neg 0 rm  col-1 sh gr
/Times-Roman-iso ff 200.00 scf sf
3825 5175 m
gs 1 -1 sc (SLEEPING) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman-iso ff 200.00 scf sf
6075 4425 m
gs 1 -1 sc (woken up) col-1 sh gr
/Times-Roman-iso ff 200.00 scf sf
5175 4500 m
gs 1 -1 sc (waiting) dup sw pop neg 0 rm  col-1 sh gr
/Times-Roman-iso ff 200.00 scf sf
6075 5100 m
gs 1 -1 sc (SLEEPING) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman-iso ff 166.67 scf sf
6075 5400 m
gs 1 -1 sc (INTERRUPTIBLE) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman-iso ff 166.67 scf sf
3750 5550 m
gs 1 -1 sc (INTERRUPTIBLE) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman-iso ff 166.67 scf sf
3750 5400 m
gs 1 -1 sc (NON) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman-iso ff 200.00 scf sf
6975 4875 m
gs 1 -1 sc (received) col-1 sh gr
/Times-Roman-iso ff 200.00 scf sf
6975 5100 m
gs 1 -1 sc (signal) col-1 sh gr
% here ends figure;
$F2psEnd
rs
showpage
%%EndDocument
end PEND/F1 13/Times-Roman@0 SF(The state diagram depicts the task stat\
e transitions, from the perspecti)33.336 470.399 Q .39 -.195(ve o)-.325
H 3.25(ft).195 G(he task.)-3.25 E(USER R)33.336 491.399 Q
(UNNING: The task currently has a CPU and is running a user program.)
-.52 E .466(KERNEL R)33.336 512.399 R .466(UNNING: The task is being e)
-.52 F -.195(xe)-.195 G .466(cuted in k).195 F .466
(ernel mode, as the result of system)-.13 F(call, f)33.336 527.399 Q
(ault or \(asynchronous\) interrupt.)-.13 E(READ)33.336 548.399 Q 2.89
-1.196(Y: T)-.715 H .497(he task is ready to run, b)1.196 F .497
(ut does not currently ha)-.26 F .887 -.195(ve a C)-.26 H 3.747(PU. A)
.195 F(READ)3.747 E 3.747(Yt)-.715 G .497(ask is)-3.747 F
(found on a run queue.)33.336 563.399 Q .373(SLEEPING: The task is a)
33.336 584.399 R -.13(wa)-.195 G .373(iting some e).13 F -.195(ve)-.325
G .374(nt and is therefore not runnable.).195 F 3.624(At)6.874 G .374
(ask in the)-3.624 F .314
(SLEEPING state has been temporarily suspended.)33.336 599.399 R -.195
(Fo)6.814 G 3.564(re).195 G .314(xample, if a read system call has)
-3.759 F 2.434(been performed to read the ne)33.336 614.399 R 2.434
(xt character from the tty)-.195 F 5.685(,t)-.845 G 2.435
(he task must sleep until the)-5.685 F 1.105(character actually arri)
33.336 629.399 R -.195(ve)-.325 G 4.355(s. A).195 F 1.105
(sleeping task will ne)4.355 F -.195(ve)-.325 G 4.355(rb).195 G 4.355
(es)-4.355 G 1.105(cheduled until it is w)-4.355 F(ok)-.13 E 1.105
(en up.)-.13 F 3.938(As)33.336 644.399 S .688(leeping task is al)-3.938
F -.13(wa)-.13 G .688(ys in k).13 F .688
(ernel mode, and got there synchronously)-.13 F 3.938(,v)-.845 G .689
(ia a system call)-3.938 F(or f)33.336 659.399 Q(ault handler)-.13 E 6.5
(.I)-.715 G(nterrupt \(asynchronous\) handlers can ne)-6.5 E -.195(ve)
-.325 G 3.25(rc).195 G(ause sleeping.)-3.25 E 4.81 -1.04(We m)33.336
680.399 T 2.73(ay further distinguish between INTERR)1.04 F 2.73
(UPTIBLE and NON-INTERR)-.52 F(UPTIBLE)-.52 E 5.883(sleeps. This)33.336
695.399 R 2.634(decision is made when the task puts itself to sleep.)
5.883 F(INTERR)9.134 E(UPTIBLE)-.52 E .963
(sleeps will be terminated if a signal arri)33.336 710.399 R -.195(ve)
-.325 G 4.213(s\().195 G 4.213(e.g. Control-C)-4.213 F .963
(from the terminal\), whereas)4.213 F 1.114(in a NON-INTERR)33.336
725.399 R 1.114(UPTIBLE sleep deli)-.52 F -.195(ve)-.325 G 1.115
(ry of the signal will be deferred.).195 F 1.115(Signals will)7.615 F
(be de\214ned in Unit #4.)33.336 740.399 Q 0 Cg EP
%%Page: 22 22
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 3/pg 22)71.748 E(\2512016 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 13/Times-Roman@0 SF .313
(ZOMBIE: A task which has terminated b)33.336 120 R .313
(ut whose statistics ha)-.26 F .703 -.195(ve n)-.26 H .313
(ot yet been claimed by).195 F 2.388(the parent.)33.336 135 R 2.388
(Once the zombie status has been claimed by the parent through the w)
8.888 F(ait)-.13 E -.13(fa)33.336 150 S
(mily of system calls, the task no longer e).13 E(xists.)-.195 E/F2 13
/Times-Bold@0 SF -1.196(Ta)184.935 180 S(sk Scheduling and F)1.196 E
(air)-.325 E(ness)-.195 E F1 .371
(Under most circumstances, time spent e)33.336 216 R -.195(xe)-.195 G
.37(cuting on a CPU is a scarce resource for which).195 F .177
(tasks compete.)33.336 231 R .177(This mak)6.677 F .177(es the)-.13 F F2
(scheduler)3.427 E F1 .177(part of the k)3.427 F .178
(ernel an interesting problem that is)-.13 F .564
(often studied in OS research.)33.336 246 R .564
(Scheduling algorithms ha)7.064 F .954 -.195(ve v)-.26 H .564
(aried widely from OS to OS,)-.13 F(and e)33.336 261 Q -.195(ve)-.325 G
3.25(nf).195 G(rom one v)-3.25 E(ersion to another)-.195 E 6.5(.W)-.715
G 3.25(ec)-7.54 G(an generalize a fe)-3.25 E 3.25(wb)-.325 G
(road principles:)-3.25 E 3.851<8354>33.336 276 S .601
(asks tend to be either)-4.891 F F2(compute-bound)3.852 E F1(or)3.852 E
F2(I/O-bound)3.852 E F1 3.852(.T)C .602(he former spend most of their)
-3.852 F 2.552(time computing and thus ha)33.336 291 R 2.942 -.195
(ve a h)-.26 H(ea).195 E 2.552(vy appetite for user)-.26 F 2.552
(-mode CPU time.)-.26 F 2.552(The latter)9.052 F .323
(spend most of their time w)33.336 306 R .323(aiting for I/O.)-.13 F
.323(These classical de\214nitions are often stressed by)6.823 F .974
(media applications, e.g. a streaming video serv)33.336 321 R .974
(er which is both I/O bound with netw)-.195 F(ork)-.13 E(traf)33.336 336
Q 1.942
(\214c and compute-bound with compression and decompression algorithms.)
-.325 F(Compute)8.442 E .671(time among CPU-bound processes should be f)
33.336 351 R .671(airly distrib)-.13 F .671
(uted so that jobs complete in a)-.26 F 1.918(reasonable time.)33.336
366 R 1.919(Note that a gi)8.418 F -.195(ve)-.325 G 5.169(nt).195 G
1.919(ask may change its nature, e.g. a process such as)-5.169 F 1.786
(Matlab which spends most of its time w)33.336 381 R 1.785
(aiting for user input \(I/O bound\) b)-.13 F 1.785(ut then has)-.26 F
-.26(bu)33.336 396 S
(rsts of high CPU demand when it calculates results.).26 E 4.238<8345>
33.336 411 S .988(ach task has an "importance", or)-4.238 F F2 .988
(static priority)4.238 F F1 4.238(,w)C .988
(hich can be con\214gured directly or)-4.238 F .68
(indirectly by the system administrator to allo)33.336 426 R 3.93(wa)
-.325 G .679(task to recei)-.001 F 1.069 -.195(ve a l)-.325 H(ar).195 E
.679(ger or smaller share)-.234 F(of CPU time.)33.336 441 Q 5.763<8354>
33.336 456 S 2.513(he scheduler should allocate CPU time "f)-5.763 F
5.764(airly". T)-.13 F 2.514(asks that are at the same static)-1.04 F
.727(priority le)33.336 471 R -.195(ve)-.325 G 3.977(ls).195 G .727
(hould, o)-3.977 F -.195(ve)-.195 G 3.977(ral).195 G .727
(ong sample period, recei)-3.977 F 1.117 -.195(ve a)-.325 H .727
(pproximately the same amount).195 F .325(of CPU time.)33.336 486 R
-1.04(Ta)6.825 G .325(sks at dif)1.04 F .325(ferent static priority le)
-.325 F -.195(ve)-.325 G .325(ls should recei).195 F .715 -.195(ve p)
-.325 H .325(roportional amounts).195 F(of CPU time.)33.336 501 Q 3.99
<8354>33.336 516 S .74(asks should appear as responsi)-5.03 F 1.129
-.195(ve a)-.325 H 3.989(sp).195 G .739(ossible to interacti)-3.989 F
1.129 -.195(ve e)-.325 H -.195(ve)-.13 G 3.989(nts. E.g.).195 F .739
(when a k)3.989 F 1.129 -.195(ey i)-.13 H(s).195 E
(pressed or the mouse is mo)33.336 531 Q -.195(ve)-.195 G
(d, the application should respond quickly).195 E(.)-.845 E 4.703<8354>
33.336 546 S 1.453(he scheduler system itself should ha)-4.703 F 1.843
-.195(ve a l)-.26 H 2.103 -.325(ow o).195 H -.195(ve).13 G 4.704
(rhead. The).195 F(conte)4.704 E 1.454(xt switch is not a)-.195 F
(good time to be e)33.336 561 Q -.195(xe)-.195 G
(cuting complicated, long-winded algorithms.).195 E F2
(The Context Switch)212.45 591 Q F1(A)33.336 627 Q F2 2.059
(Context Switch)B F1 2.058
(is when one task is replaced by another on a gi)5.309 F -.195(ve)-.325
G 5.308(nC).195 G 5.308(PU. W)-5.308 F 5.308(ew)-1.04 G(ill)-5.308 E(co)
33.336 642 Q -.195(ve)-.195 G 4.964(rt).195 G 1.714
(he mechanics in later units.)-4.964 F 1.714
(At this stage, it is important to understand when a)8.214 F(conte)
33.336 657 Q(xt switch happens:)-.195 E 5.392<8357>33.336 687 S 2.142
(hen the current task enters a non-READ)-5.392 F 5.391(Ys)-.715 G 2.141
(tate, e.g. because it mak)-5.391 F 2.141(es a blocking)-.13 F
(system call.)33.336 702 Q 5.465<8357>33.336 732 S 2.215
(hen the current task v)-5.465 F 2.216
(oluntarily yields the CPU, e.g. through the)-.26 F/F3 13/Courier@0 SF
(sched_yield)5.466 E 0 Cg EP
%%Page: 23 23
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 3/pg 23)71.748 E(\2512016 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 13/Times-Roman@0 SF(system call.)33.336 120 Q 3.635<8357>
33.336 150 S .385(hen the scheduler subsystem of the k)-3.635 F .385
(ernel decides that the current task')-.13 F 3.634(st)-.715 G .384
(urn is done,)-3.634 F .423(and it is time for another task to ha)33.336
165 R .814 -.195(ve t)-.26 H .424(he CPU.).195 F .424(This is kno)6.924
F .424(wn as)-.325 F/F2 13/Times-Bold@0 SF(pr)3.674 E(e-emption)-.234 E
F1 6.924(.I)C 3.674(no)-6.924 G(rder)-3.674 E 1.249
(to this to happen, the k)33.336 180 R 1.249
(ernel must be in control, i.e. pre-emption only tak)-.13 F 1.248
(es place when)-.13 F 1.574(the task is in the KERNEL_R)33.336 195 R
1.574(UNNING state.)-.52 F 1.574(As the state diagram abo)8.074 F 1.964
-.195(ve d)-.195 H 1.574(epicts, this).195 F
(transition happens during a system call, f)33.336 210 Q
(ault or interrupt.)-.13 E F2(The Clock T)224.475 240 Q(ick)-.234 E F1
(Re)33.336 276 Q -.065(ga)-.195 G .564(rding the last point, one speci\
\214c interrupt is of great importance to scheduling.).065 F .563(It is)
7.063 F(the)33.336 291 Q F2 -.26(Pe)3.647 G .397(riodic Inter).26 F -.13
(va)-.13 G 3.647(lT).13 G(imer)-3.881 E F1(or)3.647 E F2('tick')3.647 E
F1 .397(interrupt which arri)3.647 F -.195(ve)-.325 G 3.647(sa).195 G
3.647(tag)-3.647 G -2.795 -.325(iv e)-3.647 H 3.647(nf).325 G(requenc)
-3.647 E 3.647(y\()-.195 G -2.795 -.325(ev e)-3.647 H(ry).325 E .058
(ms is typical\).)33.336 306 R .057(This gi)6.558 F -.195(ve)-.325 G
3.307(st).195 G .057(he k)-3.307 F .057
(ernel the opportunity to pre-empt the task and gi)-.13 F .447 -.195
(ve a)-.325 H(nother).195 E .578(task a chance to run, e)33.336 321 R
-.195(ve)-.325 G 3.829(ni).195 G 3.829(ft)-3.829 G .579
(he current task does not mak)-3.829 F 3.829(eas)-.13 G .579
(ystem call or incur a f)-3.829 F(ault)-.13 E .589
(and there is no other hardw)33.336 336 R .589(are interrupt acti)-.13 F
.588(vity on the system.)-.325 F .588(The tick interrupt is also)7.088 F
1.204(the timebase for the system time-of-day)33.336 351 R 4.454(,t)
-.845 G 1.204(hings with timeout v)-4.454 F 1.204(alues such as the)
-.325 F/F3 13/Courier@0 SF(alarm)4.454 E F1(system call and netw)33.336
366 Q(ork protocols, etc.)-.13 E .114
(When the clock tick interrupt arri)33.336 387 R -.195(ve)-.325 G 3.364
(sa).195 G .114(nd control re-enters the k)-3.364 F .114
(ernel, the interrupt routine)-.13 F .675
(is able to determine if control came from user mode or k)33.336 402 R
.675(ernel mode.)-.13 F .676(It then "char)7.175 F .676(ges" a)-.234 F
(tick ag)33.336 417 Q(ainst the appropriate resource usage counter)-.065
E 6.5(.I)-.715 G 3.25(np)-6.5 G(seudo-code:)-3.25 E/F4 10/Courier@0 SF
(/* Make-believe kernel code*.)33.336 429 Q(clock_intr_handler\(\))
33.336 441 Q({)33.336 453 Q(if \(came_from_user_mode\))90.936 465 Q 7.2
(current->utime++; //)148.536 477 R(See above for meaning of current)6 E
(else)90.936 489 Q(current->stime++;)148.536 501 Q 76.8
(clock_ticker++; /*)90.936 513 R
(Increment global monotonic counter of ticks*/)6 E 34.8
(time_subsystem_tick\(\); /*)90.936 525 R
(Update time of day, run timeout)6 E(callbacks, etc. */)321.336 537 Q
7.2(scheduler_tick\(\); /*)90.936 549 R(Possibly switch tasks */)6 E
(/* Returns from interrupt */)90.936 561 Q(})33.336 573 Q F2
(UNIX Static Priority Model)190.252 618 Q F1(Historically)33.336 648 Q
3.676(,t)-.845 G .426
(he static priorities in UNIX were represented by so-called)-3.676 F F3
.425(nice values)3.675 F F1(,)A 1.772
(ranging from -19 to +20, with a def)33.336 663 R 1.772(ault v)-.13 F
1.772(alue of 0.)-.325 F(Positi)8.272 E 2.162 -.195(ve ")-.325 H 1.772
(nice" v).195 F 1.772(alues gi)-.325 F 2.162 -.195(ve a t)-.325 H(ask)
.195 E/F5 13/Times-Italic@0 SF(poor)33.336 678 Q(er)-.481 E F1 .493
(static priority)3.743 F 3.742(,i)-.845 G 3.742(.e. the)-3.742 F 3.742
(ym)-.195 G(ak)-3.742 E 3.742(ei)-.13 G 3.742(t")-3.742 G .492
(nicer" to other)-3.742 F 3.742(,c)-.52 G .492(ompeting tasks with a)
-3.742 F -.195(ve)-.26 G .492(rage \(0\)).195 F .166(nice v)33.336 693 R
3.416(alue. Classically)-.325 F 3.416(,a)-.845 G .556 -.195(ny t)-3.416
H .166(ask can increment its nice v).195 F .166(alue, using the)-.325 F
F3(nice)3.417 E F1 .167(system call)3.417 F 1.274(or command, b)33.336
708 R 1.273(ut only a task running as the superuser \(uid==0\) can decr\
ement the nice)-.26 F -.325(va)33.336 723 S 1.426(lue and gi).325 F
1.816 -.195(ve i)-.325 H 1.426(tself "better" static priority).195 F
7.926(.\()-.845 G 1.426(In modern UNIX k)-7.926 F 1.426(ernels, the pri)
-.13 F(vile)-.325 E 1.426(ge of)-.195 F(gi)33.336 738 Q 2.214
(ving oneself ne)-.325 F -.065(ga)-.195 G(ti).065 E 2.604 -.195(ve n)
-.325 H 2.213(ice v).195 F 2.213
(alues is more \214ne-grained and can be assigned directly)-.325 F(,)
-.845 E 0 Cg EP
%%Page: 24 24
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 3/pg 24)71.748 E(\2512016 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 13/Times-Roman@0 SF(without the process ha)33.336 120 Q
(ving to be the all-po)-.26 E(werful, uid 0 superuser)-.325 E(.\))-.715
E 1.378(Inside the k)33.336 150 R 1.379
(ernel, other numbers may be used to represent static priority)-.13 F
4.629(,a)-.845 G 1.379(nd the)-4.629 F 4.629(ym)-.195 G(ay)-4.629 E(ha)
33.336 165 Q .67 -.195(ve a)-.26 H 3.53(ne).195 G .28(ntirely dif)-3.53
F .28(ferent interpretation from the traditional nice v)-.325 F 3.529
(alues. E.g.)-.325 F .279(some Linux)3.529 F -.13(ke)33.336 180 S 3.105
(rnels use a 0 to 99 scale, where 0 is the w).13 F 3.105
(orst and 99 is the best.)-.13 F 5.185 -1.04(To m)9.605 H(aintain)1.04 E
.278(compatibility with POSIX standards, all k)33.336 195 R .278
(ernels translate their internal priority number to)-.13 F
(the traditional -19..+20 nice v)33.336 210 Q(alue.)-.325 E/F2 13
/Times-Bold@0 SF(The Quantum)228.147 240 Q F1 4.726(At)33.336 276 S
1.476(erm used in the operating systems \214eld re)-4.726 F -.065(ga)
-.195 G 1.476(rding scheduling is).065 F F2(quantum)4.726 E F1 1.476
(or ")4.726 F F2(time-)A(slice)33.336 291 Q F1 4.036(". This)B .786(is \
the amount of time that a CPU-bound task runs before being pre-empted.)
4.036 F 2.435(Scheduling algorithms v)33.336 306 R 2.435(ary re)-.325 F
-.065(ga)-.195 G 2.435(rding their assignment of quantum.).065 F 2.436
(Some algorithms)8.936 F(ha)33.336 321 Q 2.147 -.195(ve a)-.26 H 5.006
(ne).195 G 1.756(ntirely \214x)-5.006 F 1.756
(ed quantum, others a completely v)-.195 F 1.756(ariable number)-.325 F
5.006(,a)-.52 G 1.756(nd others some)-5.006 F .214
(intermediate solution \(e.g. earlier Linux k)33.336 336 R .214
(ernel schedulers used a v)-.13 F .214(ariable quantum which)-.325 F
-.13(wa)33.336 351 S 3.35(sc).13 G .1
(omputed only when the task is scheduled in.)-3.35 F .099(Current k)
6.599 F .099(ernels ef)-.13 F(fecti)-.325 E -.195(ve)-.325 G .099
(ly re-compute).195 F(the quantum at e)33.336 366 Q -.195(ve)-.325 G
(ry tick\)).195 E F2(Multi-pr)155.51 396 Q
(ocessor systems and run queues)-.234 E F1 .903
(On a single-processor system, the list of all tasks which are READ)
33.336 432 R 4.154(Yt)-.715 G 4.154(or)-4.154 G .904(un is kno)-4.154 F
.904(wn as)-.325 F F2 1.746(the run queue)33.336 447 R F1 8.245(.I)C
4.995(ti)-8.245 G 4.995(sn)-4.995 G 1.745
(ot really a queue in the FIFO sense, because a task with better)-4.995
F 1.568(static priority can "jump the line" and get scheduled sooner th\
an a poorer priority task)33.336 462 R(that w)33.336 477 Q(aits longer)
-.13 E 6.5(.S)-.715 G 3.25(oi)-6.5 G 3.25(ti)-3.25 G 3.25(sm)-3.25 G
(ore of a rude queue with tasks cutting the line.)-3.25 E 2.35(On a mul\
ti-processor system, there is one "run queue" for each processor)33.336
498 R 8.849(.T)-.715 G(ypically)-9.889 E(,)-.845 E 1.537
(when a task becomes READ)33.336 513 R 4.788(Yt)-.715 G 4.788(or)-4.788
G 1.538(un, the k)-4.788 F 1.538
(ernel decides which processor has the least)-.13 F -.13(wo)33.336 528 S
2.215(rkload and puts the task on that CPU').13 F 5.464(sr)-.715 G 2.214
(un queue.)-5.464 F(Thereafter)8.714 E 5.464(,a)-.52 G 5.464(sl)-5.464 G
2.214(ong as the task)-5.464 F 1.748(remains READ)33.336 543 R 5.102
-1.677(Y, i)-.715 H 4.998(tt)1.677 G 1.748
(ypically remains on that CPU.)-4.998 F 1.749
(This is because the cache for that)8.249 F .3(CPU w)33.336 558 R .3
(ould still be "w)-.13 F .3
(arm" with respect to the instructions and data that the task recently)
-.13 F 4.283(accessed. Under)33.336 573 R 1.033
(some circumstances, tasks can be migrated to a dif)4.283 F 1.033
(ferent CPU if loads)-.325 F(get se)33.336 588 Q -.195(ve)-.325 G
(rely out of balance.).195 E F2(Normal Linux Scheduling / CFS)178.123
633 Q F1 .937
(The scheduling algorithm used for "normal" tasks by the Linux k)33.336
669 R .937(ernel \(scheduling class)-.13 F/F3 13/Courier@0 SF
(SCHED_NORMAL)33.336 684 Q F1 4.281(\)i)C 4.281(sk)-4.281 G(no)-4.281 E
1.031(wn as the Completely F)-.325 F 1.031(air Scheduler \(CFS\).)-.195
F 1.032(It aims to satisfy)7.532 F 1.157(the principles set forth abo)
33.336 699 R -.195(ve)-.195 G 7.657(.B).195 G 1.157
(ecause CPU speeds ha)-7.657 F 1.547 -.195(ve i)-.26 H 1.157
(ncreased greatly).195 F 4.407(,b)-.845 G 1.157(ut the tick)-4.667 F
(frequenc)33.336 714 Q 4.312(yi)-.195 G 4.312(ss)-4.312 G 1.062
(till generally 1ms, we can af)-4.312 F 1.062(ford a more comple)-.325 F
4.312(xa)-.195 G 1.062(lgorithm that performs)-4.312 F .174
(more calculations at e)33.336 729 R -.195(ve)-.325 G .174(ry tick.).195
F .174(The CFS algorithm attempts to pro)6.674 F .174
(vide "ideal latenc)-.195 F .174(y" to)-.195 F 1.851
(all CPU-bound processes.)33.336 744 R(Latenc)8.351 E 5.101(yi)-.195 G
5.101(sd)-5.101 G 1.851(e\214ned as ho)-5.101 F 5.101(wm)-.325 G 1.851
(uch time elapses from when a)-5.101 F 0 Cg EP
%%Page: 25 25
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 3/pg 25)71.748 E(\2512016 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 13/Times-Roman@0 SF
(task is pre-empted to when it gets the CPU ag)33.336 120 Q(ain.)-.065 E
.298(As a practical matter)33.336 141 R 3.547(,t)-.52 G .297(he latenc)
-3.547 F 3.547(yh)-.195 G .297(as a lo)-3.547 F .297
(wer bound, because otherwise the system w)-.325 F(ould)-.13 E 1.113
(spend most of its time in task switches, instead of doing useful w)
33.336 156 R 4.364(ork. Let)-.13 F 1.114(us call P the)4.364 F(latenc)
33.336 171 Q 4.342(yp)-.195 G 1.091
(eriod, and let us say this tunable v)-4.342 F 1.091
(alue has been set to 10ms.)-.325 F 1.091(If there are N=2)7.591 F .646
(runnable tasks of equal static priority)33.336 186 R 3.896(,e)-.845 G
.647(ach could run for 5ms and this w)-3.896 F .647(ould satisfy that)
-.13 F 1.502(the latenc)33.336 201 R 4.752(yp)-.195 G 1.502(eriod, P)
-4.752 F 4.752(,t)-1.443 G 1.502(hat each tasks sees should be 10mS.)
-4.752 F(Ho)8.002 E(we)-.325 E -.195(ve)-.325 G 2.542 -.52(r, a).195 H
4.752(sNg).52 G(ro)-4.752 E 1.501(ws, this)-.325 F -.13(wo)33.336 216 S
1.084(uld imply smaller and smaller time slices, and e).13 F -.195(ve)
-.325 G 1.085(ntually the o).195 F -.195(ve)-.195 G 1.085
(rhead of scheduling).195 F 1.004(and conte)33.336 231 R 1.004
(xt switching will become prohibiti)-.195 F -.195(ve)-.325 G 1.003
(ly high.).195 F 1.003(Another tunable parameter)7.503 F 4.253(,G)-.52 G
4.253(,i)-4.253 G(s)-4.253 E .036(the scheduler granularity)33.336 246 R
3.286(,t)-.845 G .036(he minimum time slice that tasks could ha)-3.286 F
-.195(ve)-.26 G 6.536(.I).195 G 3.287(fP)-6.536 G .037(/N<G, then P)
-3.287 F 1.117(is capped at G.)33.336 261 R 1.117(By def)7.617 F 1.117
(ault, in the Linux k)-.13 F 1.116
(ernel, P is 5ms and G is 1mS, so if there are)-.13 F .572
(more than 5 runnable tasks \(per CPU\) then the latenc)33.336 276 R
3.822(yp)-.195 G .572(eriod gets capped at 1ms.)-3.822 F(Since)7.072 E
(the clock tick is almost al)33.336 291 Q -.13(wa)-.13 G(ys 1ms, ha).13
E(ving a time slice of <1ms isn')-.26 E 3.25(tp)-.234 G(ossible an)-3.25
E(yw)-.195 E(ay)-.13 E(.)-.845 E/F2 13/Times-Bold@0 SF -.845(We)215.225
321 S(ighted timeslice).845 E F1 2.852(The "nice" v)33.336 357 R 2.851
(alue, under the Linux CFS scheduler)-.325 F 6.101(,i)-.52 G 6.101(sap)
-6.101 G 2.851(rocess scheduling "weight".)-6.101 F .516
(There are 39 nice steps \(-20 to +19\).)33.336 372 R .517
(Each nice step represents a 10% relati)7.017 F .907 -.195(ve d)-.325 H
(if).195 E(ference)-.325 E .234(in CPU allocation.)33.336 387 R .234
(\(This is a purely Linux interpretation of nice v)6.734 F .234
(alues -- other operating)-.325 F .659(systems may ha)33.336 402 R 1.049
-.195(ve ve)-.26 H .659(ry dif).195 F .659(ferent policies\).)-.325 F
.659(The table belo)7.159 F 3.909(wc)-.325 G(on)-3.909 E -.195(ve)-.52 G
.659(rts nice v).195 F .659(alues into the)-.325 F
(weights, represented by the capital letter W)33.336 417 Q(:)-.481 E/F3
10/Courier@0 SF(/* nice -20 */ 86.6807,)33.336 429 Q 6
(70.0732, 55.1592, 45.1885, 35.4404)12 F(/* nice -15 */ 28.4707,)33.336
441 Q 6(22.7090, 18.2666, 14.5986, 11.6367)12 F(/* nice -10 */ 9.3242,)
33.336 453 Q 12(7.4414, 5.9570, 4.7891, 3.8145)18 F(/* nice -5)33.336
465 Q(*/ 3.0479,)12 E 12(2.4424, 1.9443, 1.5488, 1.2471)18 F(/* nice +0)
33.336 477 Q(*/ 1.0000,)12 E 12(0.8008, 0.6396, 0.5137, 0.4131)18 F
(/* nice +5)33.336 489 Q(*/ 0.3271,)12 E 12
(0.2656, 0.2100, 0.1680, 0.1338)18 F(/* nice +10 */ 0.1074,)33.336 501 Q
12(0.0850, 0.0684, 0.0547, 0.0439)18 F(/* nice +15 */ 0.0352,)33.336 513
Q 12(0.0283, 0.0225, 0.0176, 0.0146)18 F F1(Let')33.336 534 Q 4.065(ss)
-.715 G .815(ay process A has a nice v)-4.065 F .814
(alue of 0 and process B has a nice v)-.325 F .814(alue of 1, and these)
-.325 F .961(are the only tw)33.336 549 R 4.211(or)-.13 G .961
(unnable processes.)-4.211 F .961(Then the weights \(rounded of)7.461 F
.961(f\) are W)-.325 F .961(A=1.00, and)-1.56 F 5.322(WB=0.8. W)33.336
564 R 5.322(ed)-1.04 G 2.072(e\214ne the "load weight" L)-5.322 F 5.321
(Wa)-.962 G 5.321(st)-5.321 G 2.071
(he sum of the weights of all runnable)-5.321 F 3.25(tasks. In)33.336
579 R(this case, L)3.25 E(W=1.800.)-.962 E(Ne)33.336 609 Q 4.392
(xt we de\214ne the CPU share for an)-.195 F 7.642(yt)-.195 G 4.392
(ask, w)-7.642 F/F4 13/Times-Italic@0 SF(n)A F1 7.642(,a)C 7.642(sw)
-7.642 G F4(n)-7.642 E F1(=W)A F4(n)A F1(/L)A 10.035 -1.196(W. F)-.962 H
4.393(or A this is)1.001 F 1.866
(1.00/1.800=55.5% and for B = 0.800/1.800 = 44.4%.)33.336 624 R 1.866
(Thus we see that the dif)8.366 F(ference)-.325 E 1.75(between tw)33.336
639 R 5(ot)-.13 G 1.75(asks separated by one nice le)-5 F -.195(ve)-.325
G 5(li).195 G 5(sa)-5 G 1.75(pproximately 10%.)-5 F 1.75
(This formula is)8.25 F(log)33.336 654 Q 1.489
(arithmic, with each step in the table abo)-.065 F 1.879 -.195(ve b)
-.195 H 1.489(eing a multiplier of 1.25 relati).195 F 1.879 -.195(ve t)
-.325 H 4.738(ot).195 G(he)-4.738 E(ne)33.336 669 Q .096(xt step.)-.195
F 2.176 -1.04(We s)6.596 H .096(ee that if A had a nice v)1.04 F .097
(alue of -20 and B +19, A w)-.325 F .097(ould get 99.98% of the)-.13 F
(CPU and B w)33.336 684 Q(ould get just 0.02%.)-.13 E .121
(Under this weighted model, the perfect timeslice for a gi)33.336 705 R
-.195(ve)-.325 G 3.371(nt).195 G .12(ask w)-3.371 F .12(ould be s)-.13 F
F4(n)A F1(=P*w)A F4(n)A F1 6.62(.L)C(et)-6.62 E 2.78(us say P=10ms.)
33.336 720 R 6.03(Aw)9.28 G 2.78(ould ha)-6.16 F 3.17 -.195(ve a w)-.26
H 2.78(eighted timeslice of 5.55msec, and B w).195 F 2.781(ould get)-.13
F 3.25(4.45msec. T)33.336 735 R(ogether the)-1.04 E 3.25(yc)-.195 G
(onsume 10mS, the desired latenc)-3.25 E 3.25(yp)-.195 G(eriod.)-3.25 E
0 Cg EP
%%Page: 26 26
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 3/pg 26)71.748 E(\2512016 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 13/Times-Roman@0 SF .226(This algorithm e)33.336 120 R .226
(xtends tri)-.195 F .226(vially to an)-.325 F 3.476(yn)-.195 G .226
(umber of runnable processes, and insures that the)-3.476 F(tar)33.336
135 Q .785(geted weighted timeslice of an)-.234 F 4.035(yg)-.195 G
-2.795 -.325(iv e)-4.035 H 4.035(np).325 G .786(rocess is its "f)-4.035
F .786(air share" of the a)-.13 F -.325(va)-.26 G .786(ilable CPU,).325
F 3.57
(considering all of the other runnable processes and their weights.)
33.336 150 R 3.569(In actual k)10.069 F(ernel)-.13 E .45
(implementation, the weights are coded as inte)33.336 165 R .451
(gers, rather than the \215oating-point numbers)-.195 F(used abo)33.336
180 Q -.195(ve)-.195 G 3.25(,b).195 G(ecause the k)-3.25 E(ernel a)-.13
E -.26(vo)-.26 G(ids the use of the \215oating point re).26 E(gisters.)
-.195 E/F2 13/Times-Bold@0 SF -.481(Vi)221.537 210 S(rtual Runtime).481
E F1 2.188(Under the CFS scheduler)33.336 246 R 5.437(,t)-.52 G 2.187
(he \214gure of merit when comparing runnable processes for)-5.437 F
.841(scheduling is unfortunately called)33.336 261 R/F3 13
/Times-Italic@0 SF .842(virtual runtime)4.092 F F1 4.092(,o)C 4.092(rv)
-4.092 G 4.092(runtime. Lik)-4.092 F 4.092(em)-.13 G(an)-4.092 E 4.092
(yt)-.195 G .842(hings in the)-4.092 F 2.034(Linux k)33.336 276 R 2.034
(ernel, this is poorly named, and perhaps w)-.13 F 2.034
(ould better be called the "weighted)-.13 F(actual runtime share".)
33.336 291 Q .338
(The idealized allocation of timeslice presented in the pre)33.336 312 R
.338(vious section can not be realized)-.325 F 2.008(in practice becaus\
e 1\) pre-emption only happens during a scheduler tick, which has a)
33.336 327 R 2.23(granularity of \(typically\) 1 msec, and 2\) while a \
task is running, other tasks a)33.336 342 R -.13(wa)-.195 G -.13(ke).13
G(n,).13 E(changing the weighted load.)33.336 357 Q 5.076(At e)33.336
378 R -.195(ve)-.325 G 5.075(ry scheduler tick, the ideal timeslice for\
 the currently running process is).195 F 5.806(recomputed. If)33.336 393
R 2.556(the process has no)5.806 F 5.806(wb)-.325 G 2.557
(een on the CPU for longer than that timeslice)-5.806 F .078(\(subject \
to rounding to the nearest clock tick\) then it is a candidate for re-s\
cheduling.)33.336 408 R(Re-)6.578 E .925(scheduling can also occur when\
 the system load changes \(because processes go to sleep)33.336 423 R
(or w)33.336 438 Q(ak)-.13 E 3.25(eu)-.13 G(p, or because nice v)-3.25 E
(alues are changed\).)-.325 E .186
(The vruntime of the running process \()33.336 459 R/F4 13/Courier@0 SF
(current)A F1 3.436(\)i)C 3.436(su)-3.436 G .186(pdated: vruntime+= T/w)
-3.436 F 3.436(,w)-.845 G .186(here T is)-3.436 F .435
(the amount of time elapsed since the last time the load w)33.336 474 R
.435(as e)-.13 F .435(xamined \(typically since the)-.195 F 2.055
(last clock tick\) and w is the relati)33.336 489 R 2.445 -.195(ve w)
-.325 H 2.055(eight of the process \(Wn/L).195 F 5.305(W\). The)-.962 F
2.054(higher the)5.304 F(relati)33.336 504 Q .916 -.195(ve w)-.325 H
.526(eight, the less vruntime will be "char).195 F .526
(ged" to the current process.)-.234 F .526(The vruntime)7.026 F
(is cumulati)33.336 519 Q .39 -.195(ve f)-.325 H
(or the life of the process.).195 E 1.003(Therefore, the lo)33.336 540 R
1.003(wer the vruntime of a process, the greater is its relati)-.325 F
1.392 -.195(ve m)-.325 H 1.002(erit for being).195 F .712(scheduled no)
33.336 555 R 2.402 -.845(w, i)-.325 H .712(.e. its dynamic priority).845
F 7.212(.T)-.845 G .712(he process with the lo)-7.212 F .713
(west vruntime of all the)-.325 F
(runnable proceses is the one which should be on the CPU.)33.336 570 Q
1.7(The CFS scheduler maintains a data structure \(it is implemented as\
 a red-black binary)33.336 591 R 1.929(tree with caching of the lo)
33.336 606 R 1.93(west element\) to k)-.325 F 1.93
(eep all of the runnable tasks in order by)-.13 F 4.518
(vruntime. Retrie)33.336 621 R -.325(va)-.325 G 4.518(lo).325 G 4.518
(ft)-4.518 G 1.268(he "ne)-4.518 F 1.267
(xt best" task to run is therefore constant time.)-.195 F 1.267
(When the)7.767 F 3.33(scheduler considers re-scheduling, it e)33.336
636 R 3.33(xamines the tree for the task with the lo)-.195 F(west)-.325
E 4.307(vruntime. If)33.336 651 R 1.057
(the currently running task happens to be the lo)4.307 F 1.057
(west, then nothing happens,)-.325 F(otherwise a task switch tak)33.336
666 Q(es place and a ne)-.13 E 3.25(wt)-.325 G(ask gets the CPU.)-3.25 E
0 Cg EP
%%Page: 27 27
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 3/pg 27)71.748 E(\2512016 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 10/Courier@0 SF(/* Vastly simplified pseudo-code presentatio\
n of actual Linux kernel code */)33.336 117 Q(scheduler_tick\(\))33.336
129 Q({)33.336 141 Q(/* Assume CLOCK_PERIOD is 1ms */)90.936 153 Q
(current->vruntime += CLOCK_PERIOD / current->w;)90.936 165 Q
(ideal_timeslice = P * current->w;)90.936 177 Q
(if \(clock_ticker - current->scheduled_in_ticktime)90.936 189 Q 6(>i)12
G(deal_timeslice\))-6 E({)90.936 201 Q 6(t=f)148.536 213 S
(ind_best_runnable_task\(\);)-6 E
(if \(t->vruntime < current->vruntime\))148.536 225 Q
(context_switch-to\(t\);)206.136 237 Q(})90.936 249 Q
(/* At this line of code, current is the next task to run,)90.936 261 Q
(*)18 E 6(*w)96.936 273 S
(hich may be the same task as before or may be a new one */)-6 E
(current->scheduled_in_ticktime = clock_ticker;)90.936 285 Q(})33.336
297 Q/F2 13/Times-Roman@0 SF 1.797(When e)33.336 333 R 1.797(xamined in\
 \214ne-grain detail, the actual timeslices of tasks will not match the\
ir)-.195 F .34("ideal" computed v)33.336 348 R 3.59(alue. But)-.325 F
.34(on the a)3.59 F -.195(ve)-.26 G .34(rage o).195 F -.195(ve)-.195 G
3.59(ral).195 G .339(onger period of time, the selection of)-3.59 F
1.329(the ne)33.336 363 R 1.329(xt task to run based on lo)-.195 F 1.33
(west vruntime will result in an equitable distrib)-.325 F 1.33
(ution of)-.26 F 2.005
(CPU time which is approximately equal to that which w)33.336 378 R
2.005(ould ha)-.13 F 2.395 -.195(ve b)-.26 H 2.004(een obtained if it)
.195 F 1.695(were possible to implement the ideal weighted timeslice.)
33.336 393 R 1.696(This is depicted belo)8.196 F 3.386 -.845(w, w)-.325
H(ith).845 E .107(tasks A and B as pre)33.336 408 R .107
(viously described ha)-.325 F .106(ving nice v)-.26 F .106
(alues of 0 and 1.)-.325 F .106(The ideal timeslices)6.606 F .79(of 5.5\
5 and 4.45 msec must be rounded up to 6 and 5, because it is impossible\
 to gi)33.336 423 R 1.18 -.195(ve a)-.325 H 2.256(task a timeslice whic\
h is a fraction of the tick time \(we round up, rather than to the)
33.336 438 R(nearest inte)33.336 453 Q(ger)-.195 E 3.25(,b)-.52 G
(ecause a time slice of 0 is impossible\).)-3.25 E 1.149
(When A is running, at e)33.336 474 R -.195(ve)-.325 G 1.149
(ry scheduler tick, it is assessed 1 msec / 0.555 = 1.8 units of).195 F
2.383(vruntime, b)33.336 489 R 2.382(ut when B is running, it gets char)
-.26 F 2.382(ged for 1 msec / 0.445 = 2.25 units of)-.234 F 5.538
(vruntime. Looking)33.336 504 R 2.288(at the sk)5.538 F 2.288
(eleton code for)-.13 F/F3 13/Courier@0 SF(scheduler_tick\(\))5.538 E F2
(abo)5.538 E -.195(ve)-.195 G 5.538(,t).195 G 2.288(he k)-5.538 F(ernel)
-.13 E .879(will not pre-empt the task until it has run out its ideal t\
imeslice \(this is a bit of a \214b b)33.336 519 R(ut)-.26 E .498
(accept it for no)33.336 534 R 3.748(w\). If)-.325 F .498
(no other tasks become ready)3.748 F 3.749(,Aw)-.845 G .499
(ill continue to get 6ms slices and)-3.749 F 4.559(B5)33.336 549 S 4.559
(ms. After)-4.559 F 4.559(Ah)4.559 G 1.309
(as run for its 6 ticks, it has been char)-4.559 F 1.308
(ged 6 / 0.555 = 10.8 units, and)-.234 F 2.409
(after B runs for its 5 ticks, it is char)33.336 564 R 2.409
(ged 5 / 0.445 = 11.2 units.)-.234 F 2.409(The tw)8.909 F 5.66(ot)-.13 G
2.41(asks will)-5.66 F .527(alternate running for their respecti)33.336
579 R .917 -.195(ve t)-.325 H .527(imeslices, b).195 F .526
(ut each time A is being cheated of 0.55)-.26 F .384
(msec and B is getting 0.55 msec bonus time.)33.336 594 R(Ev)6.884 E
(entually)-.195 E 3.634(,t)-.845 G .384(he vruntime catches up with B)
-3.634 F .484(and it skips one turn.)33.336 609 R -.195(Fo)6.984 G 3.734
(rt).195 G .483(he purposes of the e)-3.734 F .483(xample timeline belo)
-.195 F 2.173 -.845(w, l)-.325 H .483(et us assume that).845 F
(the vruntimes of A and B start out at 1000.)33.336 624 Q 0 Cg EP
%%Page: 28 28
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 3/pg 28)71.748 E(\2512016 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E .52 LW 274.551 110.25 33.336 110.25 DL/F1 13/Times-Roman@0 SF
20.403(Current VRA)39.836 122 R 32.318(VRB Action)28.165 F 274.551
127.25 33.336 127.25 DL 274.551 129.25 33.336 129.25 DL 33.04(n/a 1000)
51.75 141 R 21.125(1000 A)29.25 F(runs \214rst)3.25 E 34.665(A1)55 156 S
21.125(010.8 1000)-34.665 F 3.25(Bs)26.728 G(elected)-3.25 E 35.022(B1)
55.358 171 S 16.25(010.8 1011.2)-35.022 F 3.25(As)21.495 G(elected)-3.25
E 34.665(A1)55 186 S 16.25(021.6 1011.2)-34.665 F 3.25(Bs)21.853 G
(elected)-3.25 E 35.022(B1)55.358 201 S 16.25(021.6 1022.4)-35.022 F
3.25(As)21.495 G(elected)-3.25 E 34.665(A1)55 216 S 16.25(032.4 1022.4)
-34.665 F 3.25(Bs)21.853 G(elected)-3.25 E 35.022(B1)55.358 231 S 16.25
(032.4 1033.6)-35.022 F 3.25(As)21.495 G(elected)-3.25 E 34.665(A1)55
246 S 16.25(043.2 1033.6)-34.665 F 3.25(Bs)21.853 G(elected)-3.25 E
35.022(B1)55.358 261 S 16.25(043.2 1044.8)-35.022 F 3.25(As)21.495 G
(elected)-3.25 E(...)56.443 276 Q 39.897(B1)55.358 291 S 26(270 1280)
-39.897 F 3.25(As)26.37 G(elected)-3.25 E 34.665(A1)55 306 S 21.125
(280.8 1280)-34.665 F 3.25(Bs)26.728 G(elected)-3.25 E 35.022(B1)55.358
321 S 16.25(280.8 1291.2)-35.022 F 3.25(As)21.495 G(elected)-3.25 E
34.665(A1)55 336 S 16.25(291.6 1291.2)-34.665 F 3.25(Bs)21.853 G
(elected)-3.25 E 35.022(B1)55.358 351 S 16.25(291.6 1302.4)-35.022 F
3.25(As)21.495 G(elected)-3.25 E 34.665(A1)55 366 S 16.25(302.4 1302.4)
-34.665 F 3.25(As)21.495 G(elected)-3.25 E 34.665(A1)55 381 S 16.25
(313.2 1302.4)-34.665 F 3.25(Bs)21.853 G(elected)-3.25 E 35.022(B1)
55.358 396 S 16.25(313.2 1324.8)-35.022 F 3.25(As)21.495 G(elected)-3.25
E(etc.)52.114 411 Q 274.551 416.25 33.336 416.25 DL 199.801 110.25
199.801 416.25 DL 144.551 110.25 144.551 416.25 DL 89.301 110.25 89.301
416.25 DL 274.551 110.25 274.551 416.25 DL 33.336 110.25 33.336 416.25
DL 5.16(Aa)33.336 447 S 1.91(nd B alternate 6ms and 5ms time slices.)
-5.16 F 1.91(After 27 v)8.41 F(olle)-.26 E 1.91(ys, A)-.195 F 3.34 -.715
('s v)-1.443 H 1.911(runtime winds up).715 F .802(being equal to B')
33.336 462 R 4.052(sa)-.715 G .802(fter running for its 6ms.)-4.052 F
.801(Since B is not "better" then A gets another)7.301 F .382
(turn to run.)33.336 477 R 3.632(Ah)6.882 G .383(as run for 28 turns at\
 6ms each or 168ms of total actual CPU time, while)-3.632 F 4.195(Bh)
33.336 492 S .945(ad 27 turns of 5 ms each or 135ms.)-4.195 F .944
(In this 303ms elapsed period, A)7.445 F 2.374 -.715('s C)-1.443 H .944
(PU share is).715 F(55.5% and B')33.336 507 Q 3.25(si)-.715 G 3.25(s4)
-3.25 G(4.5%, just as it should be.)-3.25 E/F2 13/Times-Bold@0 SF
(Scheduler interactions with f)177.766 537 Q(ork)-.325 E F1 .325
(In the CFS scheduler)33.336 573 R 3.576(,u)-.52 G .326
(pon a fork, the child process inherits the vruntime \(and nice v)-3.576
F(alue)-.325 E .029(or weight\) of the parent at the time of the fork.)
33.336 588 R .028(This some)6.528 F .028(what mitig)-.325 F .028
(ates the cheating that)-.065 F
(could otherwise occur if child processes were gi)33.336 603 Q -.195(ve)
-.325 G 3.25(na0i).195 G(nitial vruntime.)-3.25 E F2(Interacti)157.096
633 Q .26 -.13(ve p)-.13 H(erf).13 E(ormance & pr)-.325 E(e-emption)
-.234 E F1 1.285(The vruntime approach naturally f)33.336 669 R -.26
(avo)-.13 G 1.285(rs a process that has w).26 F(ok)-.13 E 1.285
(en up after a long sleep,)-.13 F 3.375
(because its vruntime has not been incremented.)33.336 684 R 3.375
(When a process W is a)9.875 F -.13(wo)-.195 G -.13(ke).13 G 3.375
(n, its).13 F 3.037(vruntime is compared to the current process C.)
33.336 699 R 3.038(If VR\(W\)>VR\(C\), then the current)9.538 F .724
(process is still "better" than the a)33.336 714 R -.13(wo)-.195 G -.13
(ke).13 G .724(n, and it will not be pre-empted.).13 F .723
(This can happen)7.223 F(if the current task has a much better nice v)
33.336 729 Q(alue than the a)-.325 E -.13(wo)-.195 G -.13(ke).13 G 3.25
(nt).13 G(ask.)-3.25 E 0 Cg EP
%%Page: 29 29
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 3/pg 29)71.748 E(\2512016 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 13/Times-Roman@0 SF .064(The actual algorithm in the k)33.336
120 R .064(ernel is some)-.13 F .064
(what more sophisticated, because of the need to)-.325 F 4.672(consider\
 the last CPU that a task ran on before sleeping or getting pre-empted.)
33.336 135 R .792(Depending on ho)33.336 150 R 4.042(wt)-.325 G .792
(he load is balanced, and the length of time elapsed, it may be better)
-4.042 F(to let a task w)33.336 165 Q
(ait a little longer in order to get back on its last CPU.)-.13 E/F2 13
/Times-Bold@0 SF(Gr)216.701 195 Q(oup Scheduling)-.234 E F1 2.571
(In a sense, it might be considered unf)33.336 231 R 2.571
(air that under the traditional UNIX scheduling)-.13 F .683(model, a us\
er who has 20 processes running is getting a bigger share of the o)
33.336 246 R -.195(ve)-.195 G .684(rall CPU).195 F 1.293
(time than a user with just 1 process.)33.336 261 R 1.292
(The only cap to this is the per)7.792 F 1.292(-user process limit.)-.26
F 2.494(Modern Linux k)33.336 276 R 2.495(ernels allo)-.13 F 5.745(wf)
-.325 G 2.495(or "group-based" scheduling.)-5.745 F -1.04(Ta)8.995 G
2.495(sks can be placed into)1.04 F .668(groups \(not related to the "g\
roup" as in gid\), either automatically by uid, or manually by)33.336
291 R .867(the system administrator)33.336 306 R 7.367(.T)-.715 G .867
(he percentage of CPU time allocated to each group can then)-7.367 F
3.591(be tuned by the administrator)33.336 321 R 10.091(.U)-.715 G 3.591
(nder this model, each user can be restricted to a)-10.091 F 4.097
(maximum amount of the o)33.336 336 R -.195(ve)-.195 G 4.097
(rall CPU time, and that user').195 F 7.347(st)-.715 G 4.098
(asks compete among)-7.347 F(themselv)33.336 351 Q(es to di)-.195 E
(vide up that share.)-.325 E F2(Real-T)144.603 381 Q
(ime and Quasi-Real-T)-.234 E(ime Scheduling)-.234 E F1 .878
(The scheduler in a general-purpose operating system is designed to pro)
33.336 417 R .877(vide f)-.195 F .877(airness and)-.13 F(interacti)
33.336 432 Q 3.202 -.195(ve r)-.325 H(esponsi).195 E -.195(ve)-.325 G
6.062(ness. This).195 F 2.812
(is not necessarily appropriate for embedded systems)6.062 F .379
(which are controlling ph)33.336 447 R .378(ysical systems.)-.065 F .378
(Consider an absurdly h)6.878 F .378(ypothetical system which)-.065 F
1.058(runs a nuclear po)33.336 462 R 1.058(wer plant.)-.325 F -1.04(Ta)
7.558 G 1.058(sk A operates the control rods and task B updates po)1.04
F(wer)-.325 E 1.282(production records for billing purposes.)33.336 477
R 1.282(If T)7.782 F 1.282(ask A becomes ready to run because some)-1.04
F .776(action needs to be tak)33.336 492 R .776
(en with the control rods, it w)-.13 F .777
(ould not be a great design if it had to)-.13 F -.13(wa)33.336 507 S
(it until T).13 E(ask B completed its billing computations.)-1.04 E
2.142(In a real-time scheduling system, tasks are gi)33.336 528 R -.195
(ve)-.325 G 5.392<6e8c>.195 G -.195(xe)-5.392 G 2.142
(d, static priorities by the system).195 F(administrator)33.336 543 Q
7.004(.A)-.715 G .505(high-priority task, if ready to run, al)-3.25 F
-.13(wa)-.13 G .505(ys pre-empts a lo).13 F .505(w-priority task.)-.325
F .851(In f)33.336 558 R .85(act, the lo)-.13 F .85(wer priority task w\
ill not be able to run at all until all higher priority tasks)-.325 F
1.389(are asleep.)33.336 573 R 1.389
(If multiple tasks at the same priority le)7.889 F -.195(ve)-.325 G
4.639(la).195 G 1.39(re ready to run, some real-time)-4.639 F 1.131(sch\
edulers say that the \214rst task to become ready runs \214rst and cont\
inues to run until it)33.336 588 R .998(sleeps or v)33.336 603 R .998
(oluntarily yields.)-.26 F .998(Linux calls this)7.498 F/F3 13/Courier@0
SF(SCHED_FIFO)4.249 E F1 .999(scheduling polic)4.249 F 5.939 -.845(y. A)
-.195 H(nother).845 E 1.219(approach, which Linux calls)33.336 618 R F3
(SCHED_RR)4.469 E F1 4.469(,s)C 1.219
(ays that each ready real-time task in a gi)-4.469 F -.195(ve)-.325 G(n)
.195 E .691(priority le)33.336 633 R -.195(ve)-.325 G 3.941(lw).195 G
.691(ill run for a \214x)-3.941 F(ed)-.195 E F2(quantum)3.942 E F1(or)
3.942 E F2(time-slice)3.942 E F1 3.942(,a)C .692(fter which the ne)
-3.942 F .692(xt ready task)-.195 F .475(at that priority le)33.336 648
R -.195(ve)-.325 G 3.724(lw).195 G .474(ill be allo)-3.724 F .474
(wed to run, etc.)-.325 F(Ev)6.974 E(entually)-.195 E 3.724(,t)-.845 G
.474(he CPU will get back to the)-3.724 F 3.086(\214rst task.)33.336 663
R 3.087(This is kno)9.587 F 3.087(wn as)-.325 F F2 -.234(ro)6.337 G
(und-r).234 E(obin)-.234 E F1 6.337(scheduling. Ho)6.337 F(we)-.325 E
-.195(ve)-.325 G 4.127 -.52(r, t).195 H 3.087(he pre-emption by).52 F
(higher priority tasks continues to tak)33.336 678 Q 3.25(ep)-.13 G
(lace.)-3.25 E 1.6(The Linux k)33.336 699 R 1.6
(ernel has the ability to designate certain tasks as ha)-.13 F 1.6
(ving real-time priority)-.26 F(.)-.845 E 2.689
(These tasks, if ready to run, will follo)33.336 714 R 5.939(wt)-.325 G
2.689(he rules abo)-5.939 F 3.079 -.195(ve a)-.195 H 2.69
(nd will also pre-empt an).195 F(y)-.195 E 3.132(general-purpose tasks.)
33.336 729 R 3.132(Only pri)9.632 F(vile)-.325 E 3.132
(ged users can create real-time tasks, otherwise it)-.195 F -.13(wo)
33.336 744 S(uld be tri).13 E(vial to monopolize CPU resources.)-.325 E
0 Cg EP
%%Page: 30 30
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 3/pg 30)71.748 E(\2512016 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 13/Times-Roman@0 SF .733(The Linux k)33.336 120 R .733
(ernel and most other general-purpose k)-.13 F .734
(ernels are not truly real-time k)-.13 F(ernels,)-.13 E .48(because the)
33.336 135 R 3.73(yc)-.195 G .48
(an not guarantee a speci\214c minimum response time between an e)-3.73
F -.195(ve)-.325 G .48(nt \(e.g.).195 F .443(an interrupt arri)33.336
150 R -.195(ve)-.325 G .443
(s\) and the scheduling of the real-time task.).195 F 3.694(At)6.944 G
.444(erm that is often used is)-3.694 F 1.471
("quasi" real-time or "nearly real time.")33.336 165 R 1.471
(There are k)7.971 F 1.471(ernels which are designed from the)-.13 F
1.71(ground-up to be truly real-time.)33.336 180 R 1.71(Such k)8.21 F
1.71(ernels are seen only in embedded systems and)-.13 F -.13(wo)33.336
195 S .695(uld not be v).13 F .695
(ery suitable for general-purpose computing.)-.195 F .695
(Often a real-time, embedded)7.195 F .487(system will use one k)33.336
210 R .487(ernel for the real-time stuf)-.13 F .488
(f, and host a general-purpose k)-.325 F .488(ernel such)-.13 F
(as Linux for administration or user interf)33.336 225 Q(ace.)-.13 E 0
Cg EP
%%Trailer
end
%%EOF
